[
  {
    "id": "5b5eb42317c942036b806cf7",
    "text": "\t```var gas = await commitFunction.EstimateGasAsync(platformAccount.Address, new Nethereum.Hex.HexTypes.HexBigInteger(15000), new HexBigInteger(Nethereum.Util.UnitConversion.Convert.ToWei(0)), id.HexToByteArray()).ConfigureAwait(false);```\nI wanna estimate gas, but got error:  gas required exceeds allowance or always failing transaction.",
    "html": "<pre><code>`<span class=\"javascript\"></span>``<span class=\"javascript\"><span class=\"keyword\">var</span> gas = <span class=\"keyword\">await</span> commitFunction.EstimateGasAsync(platformAccount.Address, <span class=\"keyword\">new</span> Nethereum.Hex.HexTypes.HexBigInteger(<span class=\"number\">15000</span>), <span class=\"keyword\">new</span> HexBigInteger(Nethereum.Util.UnitConversion.Convert.ToWei(<span class=\"number\">0</span>)), id.HexToByteArray()).ConfigureAwait(<span class=\"literal\">false</span>);</span>``<span class=\"javascript\"></span>`</code></pre>I wanna estimate gas, but got error:  gas required exceeds allowance or always failing transaction.",
    "sent": "2018-07-30T06:45:55.563Z",
    "fromUser": {
      "id": "5b5eb1b7d73408ce4fa2caa4",
      "username": "Jimmy987",
      "displayName": "Jimmy987",
      "url": "/Jimmy987",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Jimmy987",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/27672219?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/27672219?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 55,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b5eb47317c942036b806e78",
    "text": "It work fine at last week, but this week it works error, it so confuse to me. \n",
    "html": "It work fine at last week, but this week it works error, it so confuse to me. ",
    "sent": "2018-07-30T06:47:15.043Z",
    "fromUser": {
      "id": "5b5eb1b7d73408ce4fa2caa4",
      "username": "Jimmy987",
      "displayName": "Jimmy987",
      "url": "/Jimmy987",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Jimmy987",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/27672219?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/27672219?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 57,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b5eb4b895988830b0885dc4",
    "text": "Can anyone help? \nThanks \n",
    "html": "Can anyone help?<br>Thanks ",
    "sent": "2018-07-30T06:48:24.769Z",
    "fromUser": {
      "id": "5b5eb1b7d73408ce4fa2caa4",
      "username": "Jimmy987",
      "displayName": "Jimmy987",
      "url": "/Jimmy987",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Jimmy987",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/27672219?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/27672219?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 58,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b63d1a9cf8ab4758a96e44c",
    "text": "Hi Everyone ",
    "html": "Hi Everyone ",
    "sent": "2018-08-03T03:53:13.285Z",
    "fromUser": {
      "id": "5b5fec58d73408ce4fa2ea4a",
      "username": "kashifaa",
      "displayName": "kashifaa",
      "url": "/kashifaa",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kashifaa",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/41316449?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/41316449?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 56,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b63d1c8c917d40dc2360d41",
    "text": "I am trying ethereum-login example from  https://auth0.com/blog/an-introduction-to-ethereum-and-smart-contracts-part-2/",
    "html": "I am trying ethereum-login example from  <a href=\"https://auth0.com/blog/an-introduction-to-ethereum-and-smart-contracts-part-2/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://auth0.com/blog/an-introduction-to-ethereum-and-smart-contracts-part-2/</a>",
    "sent": "2018-08-03T03:53:44.521Z",
    "fromUser": {
      "id": "5b5fec58d73408ce4fa2ea4a",
      "username": "kashifaa",
      "displayName": "kashifaa",
      "url": "/kashifaa",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kashifaa",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/41316449?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/41316449?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 56,
    "urls": [
      {
        "url": "https://auth0.com/blog/an-introduction-to-ethereum-and-smart-contracts-part-2/"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b63d201a9426c705d1d226e",
    "text": "After doing all steps successfull when I try to execute contract , there is error  TypeError: LoginContract.LoginAttempt is not a function",
    "html": "After doing all steps successfull when I try to execute contract , there is error  TypeError: LoginContract.LoginAttempt is not a function",
    "sent": "2018-08-03T03:54:41.677Z",
    "fromUser": {
      "id": "5b5fec58d73408ce4fa2ea4a",
      "username": "kashifaa",
      "displayName": "kashifaa",
      "url": "/kashifaa",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kashifaa",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/41316449?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/41316449?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 57,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b63d21f945df30dc147da6d",
    "text": "Contract is unable to find its method , what can be possible mistake here ... ",
    "html": "Contract is unable to find its method , what can be possible mistake here ... ",
    "sent": "2018-08-03T03:55:11.545Z",
    "fromUser": {
      "id": "5b5fec58d73408ce4fa2ea4a",
      "username": "kashifaa",
      "displayName": "kashifaa",
      "url": "/kashifaa",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kashifaa",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/41316449?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/41316449?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 59,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b63d235c79ebc1ae79e68be",
    "text": "or can some body give me some example about new web3.eth.Contract(jsonInterface[, address][, options])",
    "html": "or can some body give me some example about new web3.eth.Contract(jsonInterface[, address][, options])",
    "sent": "2018-08-03T03:55:33.504Z",
    "fromUser": {
      "id": "5b5fec58d73408ce4fa2ea4a",
      "username": "kashifaa",
      "displayName": "kashifaa",
      "url": "/kashifaa",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kashifaa",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/41316449?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/41316449?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 59,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b643a7bcf8ab4758a9926ee",
    "text": "Jimmy and kashifaa, this is a channel for best practices discussion. You're not describing best practices, but asking for help with arbitrary behavior in your own code. Please ask your questions in the ethereum/solidity gitter",
    "html": "Jimmy and kashifaa, this is a channel for best practices discussion. You&#39;re not describing best practices, but asking for help with arbitrary behavior in your own code. Please ask your questions in the ethereum/solidity gitter",
    "sent": "2018-08-03T11:20:27.283Z",
    "fromUser": {
      "id": "58c5ff2bd73408ce4f502b86",
      "username": "chronaeon",
      "displayName": "Micah Dameron",
      "url": "/chronaeon",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/chronaeon",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=128",
      "v": 39,
      "gv": "4"
    },
    "unread": false,
    "readBy": 60,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b714d03179f842c972f9308",
    "text": "I have a requirement where we need to save data(pdf) to blockchain so that any third party can access and view it later by the block address. I can't store the hash of the data on blockchain as the third party does not have access to the original document to verify the hash of the data. Is it feasible?",
    "html": "I have a requirement where we need to save data(pdf) to blockchain so that any third party can access and view it later by the block address. I can&#39;t store the hash of the data on blockchain as the third party does not have access to the original document to verify the hash of the data. Is it feasible?",
    "sent": "2018-08-13T09:18:59.259Z",
    "fromUser": {
      "id": "59a50893d73408ce4f7361ce",
      "username": "array-addu",
      "displayName": "Anubhav Gupta",
      "url": "/array-addu",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/array-addu",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11625793?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11625793?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 59,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b7568b3937eee2423262efd",
    "text": "@array-addu I often see people store data on IPFS and then hashes in the blockchain. But I'm not completely clear on what the problem is. Do you just need data storage? IPFS, Swarm and other solutions exist for that. Or are you trying to restrict access by some permissions or authorization",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"array-addu\" class=\"mention\">@array-addu</span> I often see people store data on IPFS and then hashes in the blockchain. But I&#39;m not completely clear on what the problem is. Do you just need data storage? IPFS, Swarm and other solutions exist for that. Or are you trying to restrict access by some permissions or authorization",
    "sent": "2018-08-16T12:06:11.004Z",
    "fromUser": {
      "id": "5a4e6586d73408ce4f86204f",
      "username": "foogunlana",
      "displayName": "Foluso",
      "url": "/foogunlana",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/foogunlana",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5675998?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5675998?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 57,
    "urls": [],
    "mentions": [
      {
        "screenName": "array-addu",
        "userId": "59a50893d73408ce4f7361ce",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b75ae80a3a93d24227364ff",
    "text": "Hello Everyone",
    "html": "Hello Everyone",
    "sent": "2018-08-16T17:04:00.336Z",
    "fromUser": {
      "id": "5b75ae4ad73408ce4fa4d2f8",
      "username": "WappnetS_twitter",
      "displayName": "Wappnet Systems",
      "url": "/WappnetS_twitter",
      "avatarUrl": "https://avatars-01.gitter.im/g/u/WappnetS_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/1006234909898244096/j0yS4-IH_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/1006234909898244096/j0yS4-IH.jpg",
      "removed": true,
      "v": 4
    },
    "unread": false,
    "readBy": 57,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b75ae9c2a4b1910f5e64af7",
    "text": "I need Help to implement whitelist addresses contract in my existing smartcontract ",
    "html": "I need Help to implement whitelist addresses contract in my existing smartcontract ",
    "sent": "2018-08-16T17:04:28.280Z",
    "fromUser": {
      "id": "5b75ae4ad73408ce4fa4d2f8",
      "username": "WappnetS_twitter",
      "displayName": "Wappnet Systems",
      "url": "/WappnetS_twitter",
      "avatarUrl": "https://avatars-01.gitter.im/g/u/WappnetS_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/1006234909898244096/j0yS4-IH_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/1006234909898244096/j0yS4-IH.jpg",
      "removed": true,
      "v": 4
    },
    "unread": false,
    "readBy": 58,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b75aea567eb9f60feec8215",
    "text": "anyone can help me ?",
    "html": "anyone can help me ?",
    "sent": "2018-08-16T17:04:37.865Z",
    "fromUser": {
      "id": "5b75ae4ad73408ce4fa4d2f8",
      "username": "WappnetS_twitter",
      "displayName": "Wappnet Systems",
      "url": "/WappnetS_twitter",
      "avatarUrl": "https://avatars-01.gitter.im/g/u/WappnetS_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/1006234909898244096/j0yS4-IH_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/1006234909898244096/j0yS4-IH.jpg",
      "removed": true,
      "v": 4
    },
    "unread": false,
    "readBy": 59,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b7a152d88520a0c6ee5e2c6",
    "text": "hey all, is there a channel dedicated to testing contracts?",
    "html": "hey all, is there a channel dedicated to testing contracts?",
    "sent": "2018-08-20T01:11:09.421Z",
    "fromUser": {
      "id": "59e2bec9d73408ce4f7a12af",
      "username": "yshuman1",
      "displayName": "Yasin Shuman",
      "url": "/yshuman1",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/yshuman1",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/14026261?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/14026261?v=4&s=128",
      "v": 13,
      "gv": "4"
    },
    "unread": false,
    "readBy": 56,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b7c7c3b146618721cac8994",
    "text": "@yshuman1 not to my knowledge, but consensys/truffle will probably discuss testing a fair bit",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"yshuman1\" class=\"mention\">@yshuman1</span> not to my knowledge, but consensys/truffle will probably discuss testing a fair bit",
    "sent": "2018-08-21T20:55:23.684Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 52,
    "urls": [],
    "mentions": [
      {
        "screenName": "yshuman1",
        "userId": "59e2bec9d73408ce4f7a12af",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b7fdcfce5b40332abf00abb",
    "text": "Anyone familiar here with inline assembly? I've tried like everywhere. \nI'm trying to make a low level dispatcher. What is different from existing implementations is that I Need to load in a struct from storage to pass as a param to the library I'm delegating to. I'd also need to split the calldata and put that storage struct in between. \nHere's the issue on github: https://github.com/ethereum/solidity/issues/4854\n\nAny help gets huge kudos in my extensive blogpost on smart contract architecture :) ",
    "html": "<p>Anyone familiar here with inline assembly? I&#39;ve tried like everywhere.<br>I&#39;m trying to make a low level dispatcher. What is different from existing implementations is that I Need to load in a struct from storage to pass as a param to the library I&#39;m delegating to. I&#39;d also need to split the calldata and put that storage struct in between.<br>Here&#39;s the issue on github: <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4854\" href=\"https://github.com/ethereum/solidity/issues/4854\" data-provider=\"github\" data-issue-repo=\"ethereum/solidity\" class=\"issue\">ethereum/solidity#4854</a></p><p>Any help gets huge kudos in my extensive blogpost on smart contract architecture :) </p>",
    "sent": "2018-08-24T10:25:00.621Z",
    "fromUser": {
      "id": "57dd3b1540f3a6eec065be40",
      "username": "kyriediculous",
      "displayName": "Nico Vergauwen",
      "url": "/kyriediculous",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/kyriediculous",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22256858?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22256858?v=4&s=128",
      "v": 22,
      "gv": "4"
    },
    "unread": false,
    "readBy": 57,
    "urls": [],
    "mentions": [],
    "issues": [
      {
        "repo": "ethereum/solidity",
        "number": "4854"
      }
    ],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b7fdd66c53ee54c189724c2",
    "text": "You might ask ,why don't you just write functions that delegate to the library directly without assembly? Because that doesn't save any gas despite many people thinking it does. Making this issue work would reduce deployment gas cost of instances delegating to the logic of the library by more than half. This has enormous positive implications for example identity, where it becomes way cheaper than the current price of 0.30$ to deploy the uPort contract.",
    "html": "You might ask ,why don&#39;t you just write functions that delegate to the library directly without assembly? Because that doesn&#39;t save any gas despite many people thinking it does. Making this issue work would reduce deployment gas cost of instances delegating to the logic of the library by more than half. This has enormous positive implications for example identity, where it becomes way cheaper than the current price of 0.30$ to deploy the uPort contract.",
    "sent": "2018-08-24T10:26:46.782Z",
    "fromUser": {
      "id": "57dd3b1540f3a6eec065be40",
      "username": "kyriediculous",
      "displayName": "Nico Vergauwen",
      "url": "/kyriediculous",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/kyriediculous",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22256858?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22256858?v=4&s=128",
      "v": 22,
      "gv": "4"
    },
    "unread": false,
    "readBy": 58,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b83f866146618721cac9a36",
    "text": "@kyriediculous the best resource I know of is the solidity documentation. \nYou might find  this bytes library a useful resource: https://github.com/0xProject/0x-monorepo/blob/development/packages/contracts/src/2.0.0/utils/LibBytes/LibBytes.sol",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"kyriediculous\" class=\"mention\">@kyriediculous</span> the best resource I know of is the solidity documentation.<br>You might find  this bytes library a useful resource: <a href=\"https://github.com/0xProject/0x-monorepo/blob/development/packages/contracts/src/2.0.0/utils/LibBytes/LibBytes.sol\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/0xProject/0x-monorepo/blob/development/packages/contracts/src/2.0.0/utils/LibBytes/LibBytes.sol</a>",
    "sent": "2018-08-27T13:11:02.662Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 57,
    "urls": [
      {
        "url": "https://github.com/0xProject/0x-monorepo/blob/development/packages/contracts/src/2.0.0/utils/LibBytes/LibBytes.sol"
      }
    ],
    "mentions": [
      {
        "screenName": "kyriediculous",
        "userId": "57dd3b1540f3a6eec065be40",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b9236f28034a7717df1ee77",
    "text": "I need to store and retrieve multiple values in key value pair, can someone suggest me the best way to achieve this?",
    "html": "I need to store and retrieve multiple values in key value pair, can someone suggest me the best way to achieve this?",
    "sent": "2018-09-07T08:29:38.278Z",
    "fromUser": {
      "id": "59a50893d73408ce4f7361ce",
      "username": "array-addu",
      "displayName": "Anubhav Gupta",
      "url": "/array-addu",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/array-addu",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11625793?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11625793?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 51,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b93016ee481f854a686406b",
    "text": "Hi I am new here, anyone has a \"best practices for smart contract\" link/URL/document?",
    "html": "Hi I am new here, anyone has a &quot;best practices for smart contract&quot; link/URL/document?",
    "sent": "2018-09-07T22:53:34.458Z",
    "fromUser": {
      "id": "5b6ceb76d73408ce4fa41f57",
      "username": "Amol_Sharma_twitter",
      "displayName": "Amol🕶",
      "url": "/Amol_Sharma_twitter",
      "avatarUrl": "https://avatars-03.gitter.im/g/u/Amol_Sharma_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/763539853992538112/NqsyOfsV_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/763539853992538112/NqsyOfsV.jpg",
      "v": 2
    },
    "unread": false,
    "readBy": 54,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b93160ff3c26b08f644dd4b",
    "text": "@Amol_Sharma_twitter checkout this channel : https://www.youtube.com/channel/UCb3Rrg2t4PZ59Sna497DUZA?sub_confirmation=1",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"Amol_Sharma_twitter\" class=\"mention\">@Amol_Sharma_twitter</span> checkout this channel : <a href=\"https://www.youtube.com/channel/UCb3Rrg2t4PZ59Sna497DUZA?sub_confirmation=1\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.youtube.com/channel/UCb3Rrg2t4PZ59Sna497DUZA?sub_confirmation=1</a>",
    "sent": "2018-09-08T00:21:35.269Z",
    "fromUser": {
      "id": "5b6720dad73408ce4fa391c3",
      "username": "ThisIsCodeXpert",
      "displayName": "ThisIsCodeXpert",
      "url": "/ThisIsCodeXpert",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ThisIsCodeXpert",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/42118351?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/42118351?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 55,
    "urls": [
      {
        "url": "https://www.youtube.com/channel/UCb3Rrg2t4PZ59Sna497DUZA?sub_confirmation=1"
      }
    ],
    "mentions": [
      {
        "screenName": "Amol_Sharma_twitter",
        "userId": "5b6ceb76d73408ce4fa41f57",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b97114f550f8808f58f4d97",
    "text": "Thanks @ThisIsCodeXpert ",
    "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"ThisIsCodeXpert\" class=\"mention\">@ThisIsCodeXpert</span> ",
    "sent": "2018-09-11T00:50:23.101Z",
    "fromUser": {
      "id": "5b6ceb76d73408ce4fa41f57",
      "username": "Amol_Sharma_twitter",
      "displayName": "Amol🕶",
      "url": "/Amol_Sharma_twitter",
      "avatarUrl": "https://avatars-03.gitter.im/g/u/Amol_Sharma_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/763539853992538112/NqsyOfsV_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/763539853992538112/NqsyOfsV.jpg",
      "v": 2
    },
    "unread": false,
    "readBy": 57,
    "urls": [],
    "mentions": [
      {
        "screenName": "ThisIsCodeXpert",
        "userId": "5b6720dad73408ce4fa391c3",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b98fe6133ebb72e370796eb",
    "text": "Hi There,",
    "html": "Hi There,",
    "sent": "2018-09-12T11:54:09.667Z",
    "fromUser": {
      "id": "5b98c712d73408ce4fa7d400",
      "username": "dev1644",
      "displayName": "Devashish Tomar",
      "url": "/dev1644",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dev1644",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/40403260?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/40403260?v=4&s=128",
      "v": 15,
      "gv": "4"
    },
    "unread": false,
    "readBy": 58,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b98fe7f51a02e2a261bf801",
    "text": "Can I ask a question about Crowdsale Contract?",
    "html": "Can I ask a question about Crowdsale Contract?",
    "sent": "2018-09-12T11:54:39.968Z",
    "fromUser": {
      "id": "5b98c712d73408ce4fa7d400",
      "username": "dev1644",
      "displayName": "Devashish Tomar",
      "url": "/dev1644",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dev1644",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/40403260?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/40403260?v=4&s=128",
      "v": 15,
      "gv": "4"
    },
    "unread": false,
    "readBy": 60,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b99020e0fb4232e38b1dca1",
    "text": "How can I link the price of a token to a fiat Currency in Smart Contract.",
    "html": "How can I link the price of a token to a fiat Currency in Smart Contract.",
    "sent": "2018-09-12T12:09:50.671Z",
    "fromUser": {
      "id": "5b98c712d73408ce4fa7d400",
      "username": "dev1644",
      "displayName": "Devashish Tomar",
      "url": "/dev1644",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dev1644",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/40403260?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/40403260?v=4&s=128",
      "v": 15,
      "gv": "4"
    },
    "unread": false,
    "readBy": 61,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b9902fe728ddf028298fb26",
    "text": "Aside Oracle can there be another approach to it ?",
    "html": "Aside Oracle can there be another approach to it ?",
    "sent": "2018-09-12T12:13:50.640Z",
    "fromUser": {
      "id": "5b98c712d73408ce4fa7d400",
      "username": "dev1644",
      "displayName": "Devashish Tomar",
      "url": "/dev1644",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dev1644",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/40403260?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/40403260?v=4&s=128",
      "v": 15,
      "gv": "4"
    },
    "unread": false,
    "readBy": 62,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b990f100fb4232e38b2301e",
    "text": "@dev1644 Since fiat prices are not available on Blockchains. Your best option is an oracle.  No I haven't heard of any alternate approach around this",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"dev1644\" class=\"mention\">@dev1644</span> Since fiat prices are not available on Blockchains. Your best option is an oracle.  No I haven&#39;t heard of any alternate approach around this",
    "sent": "2018-09-12T13:05:20.911Z",
    "fromUser": {
      "id": "59e83618d73408ce4f7aae77",
      "username": "shashiks",
      "displayName": "Shashikant Soni",
      "url": "/shashiks",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/shashiks",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2485430?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2485430?v=4&s=128",
      "v": 4,
      "gv": "4"
    },
    "unread": false,
    "readBy": 62,
    "urls": [],
    "mentions": [
      {
        "screenName": "dev1644",
        "userId": "5b98c712d73408ce4fa7d400",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b992e6c33ebb72e3708e6ce",
    "text": "Ok , I knew about oracle approach , want to know if there any other way to do this. Anyways Thanks Bro.",
    "html": "Ok , I knew about oracle approach , want to know if there any other way to do this. Anyways Thanks Bro.",
    "sent": "2018-09-12T15:19:08.815Z",
    "fromUser": {
      "id": "5b98c712d73408ce4fa7d400",
      "username": "dev1644",
      "displayName": "Devashish Tomar",
      "url": "/dev1644",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dev1644",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/40403260?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/40403260?v=4&s=128",
      "v": 15,
      "gv": "4"
    },
    "unread": false,
    "readBy": 62,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ba232dae5c2cc56adb0f10c",
    "text": "Hello, Guys! I'm trying to deploy my contracts in mainnet using truffle and infura ws. With ropsten testnet it works perfect, but i had many issues, trying to deploy in mainnet. Finally, after many fixes, all my migrations successfully ended. But last running migrations end on 'Saving successful migration to network...' . Aaaand - nothing. I see it in my console about few hours and nothing happens. Can someone help me, what is this can be?",
    "html": "Hello, Guys! I&#39;m trying to deploy my contracts in mainnet using truffle and infura ws. With ropsten testnet it works perfect, but i had many issues, trying to deploy in mainnet. Finally, after many fixes, all my migrations successfully ended. But last running migrations end on &#39;Saving successful migration to network...&#39; . Aaaand - nothing. I see it in my console about few hours and nothing happens. Can someone help me, what is this can be?",
    "sent": "2018-09-19T11:28:26.503Z",
    "fromUser": {
      "id": "5ba227d8d73408ce4fa8a960",
      "username": "ArsenKulikov",
      "displayName": "ArsenKulikov",
      "url": "/ArsenKulikov",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ArsenKulikov",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/38130188?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/38130188?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 59,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ba29102be4f300626ba61fa",
    "text": "Hi, can someone same me a sample of how to build ERC20 Token with function:\n*Lock Airdrop Distribution till after Token Sale and Distribute Automatically to members,\n*Distribute Token to Investors automatically, Only Core Investors are required to sell tokens on the first seven (7) days\nafter listing of Token on Exchange market.\n*Reserved Tokens locked for 6 Months. \n*Lock Team Member tokens for 12 Months. \n*Presale and Crowdsale Tokens are distributed automatically to buyers ETH Address,\nand locked till After Token sale and 7 days after listing on Exchange Market.\n*Token Sale Prices: $0.001, $0.005, $0.01, $0.05, $0.05\n*Unsold tokens to be burnt, after crowdsale.\n*If tokens allocated to a particular tier are not exhausted in sales, it should be rolled over progressively to the next tier. \n\nThanks for the Help",
    "html": "<p>Hi, can someone same me a sample of how to build ERC20 Token with function:<br><em>Lock Airdrop Distribution till after Token Sale and Distribute Automatically to members,\n</em>Distribute Token to Investors automatically, Only Core Investors are required to sell tokens on the first seven (7) days<br>after listing of Token on Exchange market.<br><em>Reserved Tokens locked for 6 Months. \n</em>Lock Team Member tokens for 12 Months.<br><em>Presale and Crowdsale Tokens are distributed automatically to buyers ETH Address,<br>and locked till After Token sale and 7 days after listing on Exchange Market.\n</em>Token Sale Prices: $0.001, $0.005, $0.01, $0.05, $0.05<br><em>Unsold tokens to be burnt, after crowdsale.\n</em>If tokens allocated to a particular tier are not exhausted in sales, it should be rolled over progressively to the next tier. </p><p>Thanks for the Help</p>",
    "sent": "2018-09-19T18:10:10.215Z",
    "fromUser": {
      "id": "5ba290d4d73408ce4fa8b6ba",
      "username": "Thirdwizard",
      "displayName": "SatoshiSon",
      "url": "/Thirdwizard",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Thirdwizard",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/32606571?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/32606571?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 63,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ba68555d655361f763abaf1",
    "text": "Hi, I am using web3j to deploy contract. Does anyone know how to listen to events on the deployed contract using Infura?",
    "html": "Hi, I am using web3j to deploy contract. Does anyone know how to listen to events on the deployed contract using Infura?",
    "sent": "2018-09-22T18:09:25.398Z",
    "fromUser": {
      "id": "5b6ceb76d73408ce4fa41f57",
      "username": "Amol_Sharma_twitter",
      "displayName": "Amol🕶",
      "url": "/Amol_Sharma_twitter",
      "avatarUrl": "https://avatars-03.gitter.im/g/u/Amol_Sharma_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/763539853992538112/NqsyOfsV_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/763539853992538112/NqsyOfsV.jpg",
      "v": 2
    },
    "unread": false,
    "readBy": 62,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5bd1d7e76e5a401c2dcb499d",
    "text": "Hello, can anyone give working issue permission for https://github.com/ConsenSys/smart-contract-best-practices/blob/master/docs/about/contributing.md",
    "html": "Hello, can anyone give working issue permission for <a href=\"https://github.com/ConsenSys/smart-contract-best-practices/blob/master/docs/about/contributing.md\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/ConsenSys/smart-contract-best-practices/blob/master/docs/about/contributing.md</a>",
    "sent": "2018-10-25T14:49:11.994Z",
    "fromUser": {
      "id": "59f19226d73408ce4f7bc706",
      "username": "a4nkit_twitter",
      "displayName": "Ankit",
      "url": "/a4nkit_twitter",
      "avatarUrl": "https://avatars-02.gitter.im/g/u/a4nkit_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/543301957373280257/h3vRc6Jz_bigger.jpeg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/543301957373280257/h3vRc6Jz.jpeg",
      "v": 2
    },
    "unread": false,
    "readBy": 50,
    "urls": [
      {
        "url": "https://github.com/ConsenSys/smart-contract-best-practices/blob/master/docs/about/contributing.md"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5bd1d80964cfc273f9235658",
    "text": "also, while deploying on local this time I am getting TypeError: unhashable type: 'dict'  error",
    "html": "also, while deploying on local this time I am getting TypeError: unhashable type: &#39;dict&#39;  error",
    "sent": "2018-10-25T14:49:45.238Z",
    "fromUser": {
      "id": "59f19226d73408ce4f7bc706",
      "username": "a4nkit_twitter",
      "displayName": "Ankit",
      "url": "/a4nkit_twitter",
      "avatarUrl": "https://avatars-02.gitter.im/g/u/a4nkit_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/543301957373280257/h3vRc6Jz_bigger.jpeg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/543301957373280257/h3vRc6Jz.jpeg",
      "v": 2
    },
    "unread": false,
    "readBy": 54,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5bd1d834c7bf7c36626ac2b9",
    "text": "this was not coming in my previous system. I am the only one who is facing the issue or its for most of us. ",
    "html": "this was not coming in my previous system. I am the only one who is facing the issue or its for most of us. ",
    "sent": "2018-10-25T14:50:28.390Z",
    "fromUser": {
      "id": "59f19226d73408ce4f7bc706",
      "username": "a4nkit_twitter",
      "displayName": "Ankit",
      "url": "/a4nkit_twitter",
      "avatarUrl": "https://avatars-02.gitter.im/g/u/a4nkit_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/543301957373280257/h3vRc6Jz_bigger.jpeg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/543301957373280257/h3vRc6Jz.jpeg",
      "v": 2
    },
    "unread": false,
    "readBy": 54,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5bd1d83d1c100a4f29e15e64",
    "text": "@maurelian  ??",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span>  ??",
    "sent": "2018-10-25T14:50:37.270Z",
    "fromUser": {
      "id": "59f19226d73408ce4f7bc706",
      "username": "a4nkit_twitter",
      "displayName": "Ankit",
      "url": "/a4nkit_twitter",
      "avatarUrl": "https://avatars-02.gitter.im/g/u/a4nkit_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/543301957373280257/h3vRc6Jz_bigger.jpeg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/543301957373280257/h3vRc6Jz.jpeg",
      "v": 2
    },
    "unread": false,
    "readBy": 54,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5bd1fc5eab17df2631ec85f9",
    "text": "Has anyone able to come up with a solution for EIP170??",
    "html": "Has anyone able to come up with a solution for EIP170??",
    "sent": "2018-10-25T17:24:46.802Z",
    "editedAt": "2018-10-25T17:24:57.051Z",
    "fromUser": {
      "id": "5a6e1d77d73408ce4f8a88d7",
      "username": "ayushgupta0610_twitter",
      "displayName": "Ayush Gupta",
      "url": "/ayushgupta0610_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/ayushgupta0610_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/594827740479557632/8nSacuIh_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/594827740479557632/8nSacuIh.jpg",
      "removed": true,
      "v": 11
    },
    "unread": false,
    "readBy": 54,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5bd26edc6e5a401c2dcf2d1d",
    "text": "@a4nkit_twitter Do you have python 3.6+? ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"a4nkit_twitter\" class=\"mention\">@a4nkit_twitter</span> Do you have python 3.6+? ",
    "sent": "2018-10-26T01:33:16.744Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 56,
    "urls": [],
    "mentions": [
      {
        "screenName": "a4nkit_twitter",
        "userId": "59f19226d73408ce4f7bc706",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5bd3868bc08b8b30677a2828",
    "text": "@ayushgupta0610_twitter \"The solution is to put a hard cap on the size of an object that can be saved to the blockchain, and do so non-disruptively by setting the cap at a value slightly higher than what is feasible with current gas limits.\" master/EIPS/eip-170.md",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"ayushgupta0610_twitter\" class=\"mention\">@ayushgupta0610_twitter</span> &quot;The solution is to put a hard cap on the size of an object that can be saved to the blockchain, and do so non-disruptively by setting the cap at a value slightly higher than what is feasible with current gas limits.&quot; master/EIPS/eip-170.md",
    "sent": "2018-10-26T21:26:35.080Z",
    "fromUser": {
      "id": "553ec7a715522ed4b3df9ab0",
      "username": "jeffanthony",
      "displayName": "Jeffrey Anthony",
      "url": "/jeffanthony",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jeffanthony",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/553756?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/553756?v=4&s=128",
      "v": 38,
      "gv": "4"
    },
    "unread": false,
    "readBy": 56,
    "urls": [],
    "mentions": [
      {
        "screenName": "ayushgupta0610_twitter",
        "userId": "5a6e1d77d73408ce4f8a88d7",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5bde2f8b076992347ab08034",
    "text": "Hello. I am new comer here and stuck by an issue when trying to create a contract. Hope I could get some help here. I have a public function inside a main contract that keeps on leading \"truffle migrate\" to \"out of gas\" error when I turn it public. This function only creates a new child contract with something like \"p = new contract(...)\". As long as I  keep it internal / private, it works fine and does the job within the main contract constructor. However when I want to call it publicly it fails from the migration step... Any idea? I tried to upper the gas limit but it seems to be endless... Thanks a lot...",
    "html": "Hello. I am new comer here and stuck by an issue when trying to create a contract. Hope I could get some help here. I have a public function inside a main contract that keeps on leading &quot;truffle migrate&quot; to &quot;out of gas&quot; error when I turn it public. This function only creates a new child contract with something like &quot;p = new contract(...)&quot;. As long as I  keep it internal / private, it works fine and does the job within the main contract constructor. However when I want to call it publicly it fails from the migration step... Any idea? I tried to upper the gas limit but it seems to be endless... Thanks a lot...",
    "sent": "2018-11-03T23:30:19.326Z",
    "fromUser": {
      "id": "5bbb5102d73408ce4faab6df",
      "username": "fdervillez",
      "displayName": "fdervillez",
      "url": "/fdervillez",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/fdervillez",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/30750905?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/30750905?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 55,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5be2d4a34e7ca145206a1c14",
    "text": "Have you tried supplying the transaction with a gas amount of lets say",
    "html": "Have you tried supplying the transaction with a gas amount of lets say",
    "sent": "2018-11-07T12:03:47.906Z",
    "fromUser": {
      "id": "57dd3b1540f3a6eec065be40",
      "username": "kyriediculous",
      "displayName": "Nico Vergauwen",
      "url": "/kyriediculous",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/kyriediculous",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22256858?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22256858?v=4&s=128",
      "v": 22,
      "gv": "4"
    },
    "unread": false,
    "readBy": 53,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5be2d4a69600d10e6471373f",
    "text": "2 million?",
    "html": "2 million?",
    "sent": "2018-11-07T12:03:50.575Z",
    "fromUser": {
      "id": "57dd3b1540f3a6eec065be40",
      "username": "kyriediculous",
      "displayName": "Nico Vergauwen",
      "url": "/kyriediculous",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/kyriediculous",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22256858?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22256858?v=4&s=128",
      "v": 22,
      "gv": "4"
    },
    "unread": false,
    "readBy": 55,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5bf247d91665691e0fc76100",
    "text": "@fdervillez  it could be possible that you are getting gas issues changing the function visibility. Check this out: https://medium.com/@gus_tavo_guim/public-vs-external-functions-in-solidity-b46bcf0ba3ac",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"fdervillez\" class=\"mention\">@fdervillez</span>  it could be possible that you are getting gas issues changing the function visibility. Check this out: <a href=\"https://medium.com/@gus_tavo_guim/public-vs-external-functions-in-solidity-b46bcf0ba3ac\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://medium.com/@gus_tavo_guim/public-vs-external-functions-in-solidity-b46bcf0ba3ac</a>",
    "sent": "2018-11-19T05:19:21.027Z",
    "fromUser": {
      "id": "5bf23db2d73408ce4faf61d6",
      "username": "Juan-cc",
      "displayName": "Juan Castellon",
      "url": "/Juan-cc",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Juan-cc",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/16144265?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/16144265?v=4&s=128",
      "v": 4,
      "gv": "4"
    },
    "unread": false,
    "readBy": 52,
    "urls": [
      {
        "url": "https://medium.com/@gus_tavo_guim/public-vs-external-functions-in-solidity-b46bcf0ba3ac"
      }
    ],
    "mentions": [
      {
        "screenName": "fdervillez",
        "userId": "5bbb5102d73408ce4faab6df",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5bf26de62ef5b06e408c385d",
    "text": "Thanks a lot for the advise. Actually I changed the code structure and now it seems to work fine. May be it was related to function visibility indeed. Thanks again.",
    "html": "Thanks a lot for the advise. Actually I changed the code structure and now it seems to work fine. May be it was related to function visibility indeed. Thanks again.",
    "sent": "2018-11-19T08:01:42.836Z",
    "fromUser": {
      "id": "5bbb5102d73408ce4faab6df",
      "username": "fdervillez",
      "displayName": "fdervillez",
      "url": "/fdervillez",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/fdervillez",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/30750905?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/30750905?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 54,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5bf52be7d24f9324d22d2e6b",
    "text": "Hello, I'm Isaque, leading a team to build a P2P crypto AgriFintech in South America, and we are looking for people interested in participate of the project. \n\nOur project is a decentralized investment platform which connects farmers (which ones out of the credit and bank system) to investors (individual or institutional) using the Ethereum platform, smart contracts and web applications. \n\nAll the solicitation of loams will be analysed and validated using our data science engine already developed (which uses a combination of satellite images, wheatear forecast, crops informations and parameters and so on).\n\nWe are looking forward developers who knows solidity, web3, truffle, javascript, react.js.\n\nAny interested people  can send the CV and Portfolio to fewnickels@fewnickels.com\n\nThanks!",
    "html": "<p>Hello, I&#39;m Isaque, leading a team to build a P2P crypto AgriFintech in South America, and we are looking for people interested in participate of the project. </p><p>Our project is a decentralized investment platform which connects farmers (which ones out of the credit and bank system) to investors (individual or institutional) using the Ethereum platform, smart contracts and web applications. </p><p>All the solicitation of loams will be analysed and validated using our data science engine already developed (which uses a combination of satellite images, wheatear forecast, crops informations and parameters and so on).</p><p>We are looking forward developers who knows solidity, web3, truffle, javascript, react.js.</p><p>Any interested people  can send the CV and Portfolio to <a href=\"mailto:fewnickels@fewnickels.com\" rel=\"nofollow\">fewnickels@fewnickels.com</a></p><p>Thanks!</p>",
    "sent": "2018-11-21T09:56:55.646Z",
    "fromUser": {
      "id": "5bc88930d73408ce4fabe152",
      "username": "Isaquedanielre",
      "displayName": "Isaque Daniel",
      "url": "/Isaquedanielre",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Isaquedanielre",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5652407?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5652407?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 55,
    "urls": [
      {
        "url": "mailto:fewnickels@fewnickels.com"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5bf87826fa7bbb3fe0f367bc",
    "text": "Getting these errors while tryting to npm install dependencies for my contract. Any help? Thanks ",
    "html": "Getting these errors while tryting to npm install dependencies for my contract. Any help? Thanks ",
    "sent": "2018-11-23T21:59:02.002Z",
    "fromUser": {
      "id": "5bb5085ad73408ce4faa4173",
      "username": "JusMReid",
      "displayName": "Justin Reid",
      "url": "/JusMReid",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/JusMReid",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/19917792?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/19917792?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 55,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5bf8789e87c4b86bcc084229",
    "text": "MSBuild: error",
    "html": "MSBuild: error",
    "sent": "2018-11-23T22:01:02.504Z",
    "fromUser": {
      "id": "5bb5085ad73408ce4faa4173",
      "username": "JusMReid",
      "displayName": "Justin Reid",
      "url": "/JusMReid",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/JusMReid",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/19917792?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/19917792?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 55,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c03da5dc4af6856da75397b",
    "text": "@Isaquedanielre is remote option available?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"Isaquedanielre\" class=\"mention\">@Isaquedanielre</span> is remote option available?",
    "sent": "2018-12-02T13:13:01.374Z",
    "fromUser": {
      "id": "5c03d96cd73408ce4fb0b73c",
      "username": "SirPhemmiey",
      "displayName": "Akinde E. Oluwafemi",
      "url": "/SirPhemmiey",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/SirPhemmiey",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/22390818?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/22390818?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 47,
    "urls": [],
    "mentions": [
      {
        "screenName": "Isaquedanielre",
        "userId": "5bc88930d73408ce4fabe152",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c03f87ebc1a693e3a44989d",
    "text": "@SirPhemmiey Hi, we are finishing the first round with the people, because we cannot to hire so much people at this time. If you interest send your CV, and we keep talking. best",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"SirPhemmiey\" class=\"mention\">@SirPhemmiey</span> Hi, we are finishing the first round with the people, because we cannot to hire so much people at this time. If you interest send your CV, and we keep talking. best",
    "sent": "2018-12-02T15:21:34.120Z",
    "fromUser": {
      "id": "5bc88930d73408ce4fabe152",
      "username": "Isaquedanielre",
      "displayName": "Isaque Daniel",
      "url": "/Isaquedanielre",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Isaquedanielre",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5652407?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5652407?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 46,
    "urls": [],
    "mentions": [
      {
        "screenName": "SirPhemmiey",
        "userId": "5c03d96cd73408ce4fb0b73c",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c0693c8500e8e37285ba16d",
    "text": "Hello, I am getting 0x after compiling smart contract using truffle\nIs anybody having any idea",
    "html": "Hello, I am getting 0x after compiling smart contract using truffle<br>Is anybody having any idea",
    "sent": "2018-12-04T14:48:40.695Z",
    "fromUser": {
      "id": "5a533629d73408ce4f86dd6b",
      "username": "ganeshdipdumbare",
      "displayName": "ganeshdipdumbare",
      "url": "/ganeshdipdumbare",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/ganeshdipdumbare",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/35021806?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/35021806?v=4&s=128",
      "v": 27,
      "gv": "4"
    },
    "unread": false,
    "readBy": 47,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c0b8d8026de6f08229fcd55",
    "text": "Hi, how do we handle indexed parameters in the constructor of Crowdsale contract?",
    "html": "Hi, how do we handle indexed parameters in the constructor of Crowdsale contract?",
    "sent": "2018-12-08T09:23:12.795Z",
    "fromUser": {
      "id": "592db1d3d73408ce4f6365eb",
      "username": "bhalla98",
      "displayName": "Siddharth Bhalla",
      "url": "/bhalla98",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/bhalla98",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/19973971?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/19973971?v=4&s=128",
      "v": 4,
      "gv": "4"
    },
    "unread": false,
    "readBy": 47,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c0e3c988d4f3a2a7c9bd79f",
    "text": "@Isaquedanielre Okay, thanks. I have just done that",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"Isaquedanielre\" class=\"mention\">@Isaquedanielre</span> Okay, thanks. I have just done that",
    "sent": "2018-12-10T10:14:48.317Z",
    "fromUser": {
      "id": "5c03d96cd73408ce4fb0b73c",
      "username": "SirPhemmiey",
      "displayName": "Akinde E. Oluwafemi",
      "url": "/SirPhemmiey",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/SirPhemmiey",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/22390818?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/22390818?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 50,
    "urls": [],
    "mentions": [
      {
        "screenName": "Isaquedanielre",
        "userId": "5bc88930d73408ce4fabe152",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c13e60772f31355cd55e66f",
    "text": "Here, did anyone experienced to get keccak hash of array type with web3 soliditySha3?\nPlease let me know if it is possible to calculate for array types with web3 soliditySha3.",
    "html": "Here, did anyone experienced to get keccak hash of array type with web3 soliditySha3?<br>Please let me know if it is possible to calculate for array types with web3 soliditySha3.",
    "sent": "2018-12-14T17:19:03.860Z",
    "fromUser": {
      "id": "5a7178b8d73408ce4f8af93e",
      "username": "AntonCorbijn",
      "displayName": "Anton",
      "url": "/AntonCorbijn",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AntonCorbijn",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/32306632?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/32306632?v=4&s=128",
      "v": 2,
      "gv": "4"
    },
    "unread": false,
    "readBy": 46,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c17a6e3039551387fb082aa",
    "text": "Can someone suggest me how to use estimateGas for function calls like below:\n\nawait (MyContract.methods.addDoc(id,sha256hash).send({from: coinbase[0],gas: 1000000})",
    "html": "<p>Can someone suggest me how to use estimateGas for function calls like below:</p><p>await (MyContract.methods.addDoc(id,sha256hash).send({from: coinbase[0],gas: 1000000})</p>",
    "sent": "2018-12-17T13:38:43.466Z",
    "fromUser": {
      "id": "59a50893d73408ce4f7361ce",
      "username": "array-addu",
      "displayName": "Anubhav Gupta",
      "url": "/array-addu",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/array-addu",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11625793?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11625793?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 46,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c1cc2300b7fc97caa78e3d8",
    "text": "hello everyone \nany go developer who wants to work as a freelancer please fill free to contact me",
    "html": "hello everyone<br>any go developer who wants to work as a freelancer please fill free to contact me",
    "sent": "2018-12-21T10:36:32.628Z",
    "fromUser": {
      "id": "5bd15cfad73408ce4facab7c",
      "username": "parmarrushabh",
      "displayName": "rushabh parmar",
      "url": "/parmarrushabh",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/parmarrushabh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/43805620?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/43805620?v=4&s=128",
      "v": 27,
      "gv": "4"
    },
    "unread": false,
    "readBy": 45,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c22f9ad2863d8612b8d6175",
    "text": "looking to implement smart contracts to IOT devices, any experienced devs with this?",
    "html": "looking to implement smart contracts to IOT devices, any experienced devs with this?",
    "sent": "2018-12-26T03:46:53.473Z",
    "fromUser": {
      "id": "5c22f867d73408ce4fb2e17e",
      "username": "retrofred1_twitter",
      "displayName": "Retrofred",
      "url": "/retrofred1_twitter",
      "avatarUrl": "https://avatars-03.gitter.im/g/u/retrofred1_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/994658574662971393/2qy5XNiL_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/994658574662971393/2qy5XNiL.jpg",
      "v": 1
    },
    "unread": false,
    "readBy": 47,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c2309e63c4093612c625b39",
    "text": "[![image.png](https://files.gitter.im/ConsenSys/smart-contract-best-practices/b3it/thumb/image.png)](https://files.gitter.im/ConsenSys/smart-contract-best-practices/b3it/image.png)",
    "html": "<a href=\"https://files.gitter.im/ConsenSys/smart-contract-best-practices/b3it/image.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/ConsenSys/smart-contract-best-practices/b3it/thumb/image.png\" alt=\"image.png\" rel=\"nofollow\"></a>",
    "sent": "2018-12-26T04:56:06.462Z",
    "fromUser": {
      "id": "5bd15cfad73408ce4facab7c",
      "username": "parmarrushabh",
      "displayName": "rushabh parmar",
      "url": "/parmarrushabh",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/parmarrushabh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/43805620?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/43805620?v=4&s=128",
      "v": 27,
      "gv": "4"
    },
    "unread": false,
    "readBy": 46,
    "urls": [
      {
        "url": "https://files.gitter.im/ConsenSys/smart-contract-best-practices/b3it/thumb/image.png"
      },
      {
        "url": "https://files.gitter.im/ConsenSys/smart-contract-best-practices/b3it/image.png"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c2c6e996649aa1f82093821",
    "text": "Hello, I am new to dapp. I am trying to create my first dapp through truffle pet-shop but i got error in testing contract please help.\nHere is Error\nTypeError: Member \"adopt\" not found or not visible after argument-dependent lookup in type(contract Adoption).\n\t\tuint returnPetId=Adoption.adopt(expectedPetId);\n\t\t                 ^------------^\nThanks in Advance",
    "html": "Hello, I am new to dapp. I am trying to create my first dapp through truffle pet-shop but i got error in testing contract please help.<br>Here is Error<br>TypeError: Member &quot;adopt&quot; not found or not visible after argument-dependent lookup in type(contract Adoption).<br>        uint returnPetId=Adoption.adopt(expectedPetId);<br>                         ^------------^<br>Thanks in Advance",
    "sent": "2019-01-02T07:56:09.447Z",
    "fromUser": {
      "id": "5c2c6da2d73408ce4fb359c6",
      "username": "vikramvaishnav",
      "displayName": "vikramvaishnav",
      "url": "/vikramvaishnav",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/vikramvaishnav",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/46312918?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/46312918?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 46,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c3b2de135350772cf245c2d",
    "text": "@vikramvaishnav add your first test function after  the expectedPetID and expectedAdopter declarations",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"vikramvaishnav\" class=\"mention\">@vikramvaishnav</span> add your first test function after  the expectedPetID and expectedAdopter declarations",
    "sent": "2019-01-13T12:24:01.599Z",
    "fromUser": {
      "id": "594c2a07d73408ce4f69695a",
      "username": "bliotti",
      "displayName": "Brian Liotti",
      "url": "/bliotti",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/bliotti",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/29641364?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/29641364?v=4&s=128",
      "v": 19,
      "gv": "4"
    },
    "unread": false,
    "readBy": 42,
    "urls": [],
    "mentions": [
      {
        "screenName": "vikramvaishnav",
        "userId": "5c2c6da2d73408ce4fb359c6",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c4b30308ce4bb25b80b5481",
    "text": "Hey can anyone help me in writing javascript tests for my smart contract",
    "html": "Hey can anyone help me in writing javascript tests for my smart contract",
    "sent": "2019-01-25T15:50:08.981Z",
    "fromUser": {
      "id": "5b816b87d73408ce4fa5c877",
      "username": "shivam3746",
      "displayName": "Shivam Srivastava",
      "url": "/shivam3746",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/shivam3746",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/25079911?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/25079911?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 36,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c4b3044f780a1521f696c76",
    "text": "As i am little bit confused",
    "html": "As i am little bit confused",
    "sent": "2019-01-25T15:50:28.121Z",
    "fromUser": {
      "id": "5b816b87d73408ce4fa5c877",
      "username": "shivam3746",
      "displayName": "Shivam Srivastava",
      "url": "/shivam3746",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/shivam3746",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/25079911?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/25079911?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 37,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c5750e47b68f941026731e8",
    "text": "Hi, if I had a generic non-truffle-specific question about dapp's/ERC specs,  could I ask that here? Or is there a better place?",
    "html": "Hi, if I had a generic non-truffle-specific question about dapp&#39;s/ERC specs,  could I ask that here? Or is there a better place?",
    "sent": "2019-02-03T20:36:52.453Z",
    "editedAt": "2019-02-03T20:36:59.698Z",
    "fromUser": {
      "id": "588fe24ad73408ce4f4711d8",
      "username": "Flaque",
      "displayName": "Evan Conrad",
      "url": "/Flaque",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Flaque",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5942769?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5942769?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 32,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5c719f19c82c68509e250b72",
    "text": "Can someone help me with this question? https://stackoverflow.com/questions/54845343/blockchain-smart-contract-ehr",
    "html": "Can someone help me with this question? <a href=\"https://stackoverflow.com/questions/54845343/blockchain-smart-contract-ehr\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://stackoverflow.com/questions/54845343/blockchain-smart-contract-ehr</a>",
    "sent": "2019-02-23T19:29:29.170Z",
    "fromUser": {
      "id": "5c2d1ae5d73408ce4fb36c96",
      "username": "MicuEmerson",
      "displayName": "Micu Emerson",
      "url": "/MicuEmerson",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MicuEmerson",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20091556?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20091556?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [
      {
        "url": "https://stackoverflow.com/questions/54845343/blockchain-smart-contract-ehr"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c799749cbebcf784a24033d",
    "text": "hi - i have a newbie question.  I've built a solidity smart contract with nodejs front end, its all hooked in and communicating.  How do I actually send values between the front end and backend?",
    "html": "hi - i have a newbie question.  I&#39;ve built a solidity smart contract with nodejs front end, its all hooked in and communicating.  How do I actually send values between the front end and backend?",
    "sent": "2019-03-01T20:34:17.863Z",
    "fromUser": {
      "id": "5c79970bd73408ce4fb95e9c",
      "username": "codeyfour",
      "displayName": "codeyfour",
      "url": "/codeyfour",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/codeyfour",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/43037797?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/43037797?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c7a3498c1cab53d6f60eb7a",
    "text": "```\nconstructor(string memory _firstName, string memory _lastName, string memory _SID) public {\n        owner = msg.sender;\n        firstName = _firstName;\n        lastName = _lastName;\n        SID = _SID;\n    }\n\n    modifier checkAccess(bool access) {\n        require(\n            access == true, \n            \"Access denied\"\n        );\n        _;\n    }\n\n    function getAccess() public view returns(bool access){\n        if(msg.sender == owner){\n            access = true;\n        }\n        else{\n            access = false;\n        }\n    }\n\n    function getFirstName() public view checkAccess(this.getAccess()) returns (string memory _firstName){\n        _firstName = firstName;\n    }\n```\neven if the getAccess gives me true, the modifier checkAccess don't let me use the function, someone have some idea?\n",
    "html": "<pre><code><span class=\"function\"><span class=\"keyword\">constructor</span><span class=\"params\">(<span class=\"keyword\">string</span> memory _firstName, <span class=\"keyword\">string</span> memory _lastName, <span class=\"keyword\">string</span> memory _SID)</span> <span class=\"title\">public</span> <span class=\"comment\">{\n        owner = msg.sender;\n        firstName = _firstName;\n        lastName = _lastName;\n        SID = _SID;\n    }</span>\n\n    <span class=\"title\">modifier</span> <span class=\"title\">checkAccess</span><span class=\"params\">(bool access)</span> <span class=\"comment\">{\n        require(\n            access == true, \n            \"Access denied\"\n        );\n        _;\n    }</span>\n\n    <span class=\"title\">function</span> <span class=\"title\">getAccess</span><span class=\"params\">()</span> <span class=\"title\">public</span> <span class=\"title\">view</span> <span class=\"title\">returns</span><span class=\"params\">(bool access)</span><span class=\"comment\">{\n        if(msg.sender == owner){\n            access = true;\n        }</span>\n        <span class=\"title\">else</span><span class=\"comment\">{\n            access = false;\n        }</span>\n    }\n\n    <span class=\"title\">function</span> <span class=\"title\">getFirstName</span><span class=\"params\">()</span> <span class=\"title\">public</span> <span class=\"title\">view</span> <span class=\"title\">checkAccess</span><span class=\"params\">(this.getAccess()</span>) <span class=\"title\">returns</span> <span class=\"params\">(<span class=\"keyword\">string</span> memory _firstName)</span><span class=\"comment\">{\n        _firstName = firstName;\n    }</span></span></code></pre>even if the getAccess gives me true, the modifier checkAccess don&#39;t let me use the function, someone have some idea?",
    "sent": "2019-03-02T07:45:28.067Z",
    "fromUser": {
      "id": "5c2d1ae5d73408ce4fb36c96",
      "username": "MicuEmerson",
      "displayName": "Micu Emerson",
      "url": "/MicuEmerson",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MicuEmerson",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20091556?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20091556?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c80954c0a6b915163ea59ea",
    "text": "@MicuEmerson\n```\npragma solidity ^0.5.2;\n\ncontract Test {\n    bool public access;\n    address public owner;\n    string public _firstName = \"\";\n    \n    constructor() public  {\n        owner = msg.sender;\n    }\n   modifier checkAccess(bool _access) {\n        require(\n            access == _access, \n            \"Access denied\"\n        );\n        _;\n    }\n\n    function getAccess() public returns (bool success){\n        if(msg.sender == owner){\n            access = true;\n        }\n        else{\n            access = false;\n        }\n    }\n\n    function getFirstName() public checkAccess(this.getAccess()) returns (string memory firstName){\n        return (_firstName);\n    }\n    \n    function setFirstName(string memory name) public {\n        _firstName = name;\n    }\n    \n}\n```\nSince in your case you are using ``` public view getAccess``` and view functions do not modify the state, thus even if you were getting true for that instance, however it was not persisted in the state, thus, you were getting a transaction revert.\nI have tested above code on Remix compiler and it works as expected.",
    "html": "<p><span data-link-type=\"mention\" data-screen-name=\"MicuEmerson\" class=\"mention\">@MicuEmerson</span></p><pre><code>pragma solidity ^<span class=\"number\">0.5</span><span class=\"number\">.2</span>;\n\ncontract Test {\n    <span class=\"keyword\">bool</span> <span class=\"keyword\">public</span> access;\n    address <span class=\"keyword\">public</span> owner;\n    <span class=\"keyword\">string</span> <span class=\"keyword\">public</span> _firstName = <span class=\"string\">\"\"</span>;\n\n    constructor() <span class=\"keyword\">public</span>  {\n        owner = msg.sender;\n    }\n   <span class=\"function\">modifier <span class=\"title\">checkAccess</span>(<span class=\"params\"><span class=\"keyword\">bool</span> _access</span>) </span>{\n        require(\n            access == _access, \n            <span class=\"string\">\"Access denied\"</span>\n        );\n        _;\n    }\n\n    <span class=\"function\">function <span class=\"title\">getAccess</span>(<span class=\"params\"></span>) <span class=\"keyword\">public</span> <span class=\"title\">returns</span> (<span class=\"params\"><span class=\"keyword\">bool</span> success</span>)</span>{\n        <span class=\"keyword\">if</span>(msg.sender == owner){\n            access = <span class=\"keyword\">true</span>;\n        }\n        <span class=\"keyword\">else</span>{\n            access = <span class=\"keyword\">false</span>;\n        }\n    }\n\n    <span class=\"function\">function <span class=\"title\">getFirstName</span>(<span class=\"params\"></span>) <span class=\"keyword\">public</span> <span class=\"title\">checkAccess</span>(<span class=\"params\"><span class=\"keyword\">this</span>.getAccess(</span>)) <span class=\"title\">returns</span> (<span class=\"params\"><span class=\"keyword\">string</span> memory firstName</span>)</span>{\n        <span class=\"keyword\">return</span> (_firstName);\n    }\n\n    <span class=\"function\">function <span class=\"title\">setFirstName</span>(<span class=\"params\"><span class=\"keyword\">string</span> memory name</span>) <span class=\"keyword\">public</span> </span>{\n        _firstName = name;\n    }\n\n}</code></pre><p>Since in your case you are using <code>public view getAccess</code> and view functions do not modify the state, thus even if you were getting true for that instance, however it was not persisted in the state, thus, you were getting a transaction revert.<br>I have tested above code on Remix compiler and it works as expected.</p>",
    "sent": "2019-03-07T03:51:39.980Z",
    "editedAt": "2019-03-07T03:52:50.017Z",
    "fromUser": {
      "id": "5a1520e9d73408ce4f7fbf18",
      "username": "balajipachai",
      "displayName": "Balaji Pachai",
      "url": "/balajipachai",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/balajipachai",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/32358081?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/32358081?v=4&s=128",
      "v": 19,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [
      {
        "screenName": "MicuEmerson",
        "userId": "5c2d1ae5d73408ce4fb36c96",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5c88edde3162ec7bc765dc5a",
    "text": "@codeyfour you use https://github.com/ethereum/web3.js/  to connect to your  smart contract",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"codeyfour\" class=\"mention\">@codeyfour</span> you use <a href=\"https://github.com/ethereum/web3.js/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/ethereum/web3.js/</a>  to connect to your  smart contract",
    "sent": "2019-03-13T11:47:42.845Z",
    "fromUser": {
      "id": "5927dd42d73408ce4f626bd7",
      "username": "cedricwalter",
      "displayName": "cedric walter",
      "url": "/cedricwalter",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cedricwalter",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/763491?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/763491?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [
      {
        "url": "https://github.com/ethereum/web3.js/"
      }
    ],
    "mentions": [
      {
        "screenName": "codeyfour",
        "userId": "5c79970bd73408ce4fb95e9c",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c8d4a7afcaf7b5f73c5a617",
    "text": "pragma solidity ^0.5.4;\n\ncontract Hello {\n  string greeting;\n\n  constructor() public{\n    greeting = \"hello !\";\n  }\n\n  function getGreeting() public view returns (string) {\n    return greeting;\n  }\n  function setGreeting(string _greeting) public {\n    greeting = _greeting;\n  }\n}",
    "html": "<p>pragma solidity ^0.5.4;</p><p>contract Hello {<br>  string greeting;</p><p>  constructor() public{<br>    greeting = &quot;hello !&quot;;<br>  }</p><p>  function getGreeting() public view returns (string) {<br>    return greeting;<br>  }<br>  function setGreeting(string _greeting) public {<br>    greeting = _greeting;<br>  }<br>}</p>",
    "sent": "2019-03-16T19:11:54.400Z",
    "fromUser": {
      "id": "5c8d46d2d73408ce4fbae015",
      "username": "NNAF98",
      "displayName": "Achille NDTAMA",
      "url": "/NNAF98",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/NNAF98",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/45701687?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/45701687?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c8d4ada8126720abcf32de3",
    "text": "truffle(develop)> migrate\nCompiling .\\contracts\\HelloWorld.sol...\nCompiling .\\contracts\\Migrations.sol...\n\n/C/Users/NNAF98/repo/contracts/HelloWorld.sol:10:47: TypeError: Data location must be \"memory\" for return parameter in function, but none was given.\n  function getGreeting() public view returns (string) {\n                                              ^----^\n,/C/Users/NNAF98/repo/contracts/HelloWorld.sol:13:24: TypeError: Data location must be \"memory\" for parameter in function, but none was given.\n  function setGreeting(string _greeting) public {\n                       ^--------------^\nCompilation failed. See above.       THOSE SOMEBODY CAN HELP ME TO SOLVE THIS ERROR??? THANK YOU...",
    "html": "<p>truffle(develop)&gt; migrate<br>Compiling .\\contracts\\HelloWorld.sol...<br>Compiling .\\contracts\\Migrations.sol...</p><p>/C/Users/NNAF98/repo/contracts/HelloWorld.sol:10:47: TypeError: Data location must be &quot;memory&quot; for return parameter in function, but none was given.<br>  function getGreeting() public view returns (string) {<br>                                              ^----^<br>,/C/Users/NNAF98/repo/contracts/HelloWorld.sol:13:24: TypeError: Data location must be &quot;memory&quot; for parameter in function, but none was given.<br>  function setGreeting(string _greeting) public {<br>                       ^--------------^<br>Compilation failed. See above.       THOSE SOMEBODY CAN HELP ME TO SOLVE THIS ERROR??? THANK YOU...</p>",
    "sent": "2019-03-16T19:13:30.228Z",
    "fromUser": {
      "id": "5c8d46d2d73408ce4fbae015",
      "username": "NNAF98",
      "displayName": "Achille NDTAMA",
      "url": "/NNAF98",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/NNAF98",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/45701687?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/45701687?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c9112a5d0133e21e5de8814",
    "text": "Hi @NNAF98 you need chance in the methods ",
    "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"NNAF98\" class=\"mention\">@NNAF98</span> you need chance in the methods ",
    "sent": "2019-03-19T16:02:45.362Z",
    "fromUser": {
      "id": "5ad62f2dd73408ce4f960600",
      "username": "alexHope26",
      "displayName": "Alejandro Rodriguez Zavala",
      "url": "/alexHope26",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/alexHope26",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38471195?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38471195?v=4&s=128",
      "v": 15,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [
      {
        "screenName": "NNAF98",
        "userId": "5c8d46d2d73408ce4fbae015",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c9112ad9d9cc8114ae8711c",
    "text": "string by string memory",
    "html": "string by string memory",
    "sent": "2019-03-19T16:02:53.594Z",
    "fromUser": {
      "id": "5ad62f2dd73408ce4f960600",
      "username": "alexHope26",
      "displayName": "Alejandro Rodriguez Zavala",
      "url": "/alexHope26",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/alexHope26",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38471195?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38471195?v=4&s=128",
      "v": 15,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c9112c19d9cc8114ae8719b",
    "text": "function getGreeting() public view returns (string memory) {\nreturn greeting;\n}\nfunction setGreeting(string memory _greeting) public {\ngreeting = _greeting;\n}",
    "html": "function getGreeting() public view returns (string memory) {<br>return greeting;<br>}<br>function setGreeting(string memory _greeting) public {<br>greeting = _greeting;<br>}",
    "sent": "2019-03-19T16:03:13.602Z",
    "fromUser": {
      "id": "5ad62f2dd73408ce4f960600",
      "username": "alexHope26",
      "displayName": "Alejandro Rodriguez Zavala",
      "url": "/alexHope26",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/alexHope26",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38471195?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38471195?v=4&s=128",
      "v": 15,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c9112e02f6ded0abb0c2a38",
    "text": "because you have storage var, and you need work with memory var",
    "html": "because you have storage var, and you need work with memory var",
    "sent": "2019-03-19T16:03:44.165Z",
    "fromUser": {
      "id": "5ad62f2dd73408ce4f960600",
      "username": "alexHope26",
      "displayName": "Alejandro Rodriguez Zavala",
      "url": "/alexHope26",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/alexHope26",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38471195?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38471195?v=4&s=128",
      "v": 15,
      "gv": "4"
    },
    "unread": false,
    "readBy": 28,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c91ac7749fdaa0d81e32108",
    "text": "@alexHope26  thank you much ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"alexHope26\" class=\"mention\">@alexHope26</span>  thank you much ",
    "sent": "2019-03-20T02:59:03.230Z",
    "fromUser": {
      "id": "5c8d46d2d73408ce4fbae015",
      "username": "NNAF98",
      "displayName": "Achille NDTAMA",
      "url": "/NNAF98",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/NNAF98",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/45701687?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/45701687?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [
      {
        "screenName": "alexHope26",
        "userId": "5ad62f2dd73408ce4f960600",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c91ad93fcaf7b5f73e21635",
    "text": "Thank you very much, you really take me off a big thorn, I can now continue my training @alexHope26 ",
    "html": "Thank you very much, you really take me off a big thorn, I can now continue my training <span data-link-type=\"mention\" data-screen-name=\"alexHope26\" class=\"mention\">@alexHope26</span> ",
    "sent": "2019-03-20T03:03:47.905Z",
    "fromUser": {
      "id": "5c8d46d2d73408ce4fbae015",
      "username": "NNAF98",
      "displayName": "Achille NDTAMA",
      "url": "/NNAF98",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/NNAF98",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/45701687?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/45701687?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [
      {
        "screenName": "alexHope26",
        "userId": "5ad62f2dd73408ce4f960600",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c91af1c6a3d2e230df2763f",
    "text": "Great !!  Good luck!! @NNAF98 ",
    "html": "Great !!  Good luck!! <span data-link-type=\"mention\" data-screen-name=\"NNAF98\" class=\"mention\">@NNAF98</span> ",
    "sent": "2019-03-20T03:10:20.068Z",
    "fromUser": {
      "id": "5ad62f2dd73408ce4f960600",
      "username": "alexHope26",
      "displayName": "Alejandro Rodriguez Zavala",
      "url": "/alexHope26",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/alexHope26",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38471195?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38471195?v=4&s=128",
      "v": 15,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [
      {
        "screenName": "NNAF98",
        "userId": "5c8d46d2d73408ce4fbae015",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c91c075fcaf7b5f73e2840f",
    "text": "Thank you•√√",
    "html": "Thank you•√√",
    "sent": "2019-03-20T04:24:21.128Z",
    "fromUser": {
      "id": "5c8d46d2d73408ce4fbae015",
      "username": "NNAF98",
      "displayName": "Achille NDTAMA",
      "url": "/NNAF98",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/NNAF98",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/45701687?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/45701687?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c91d8ad2fb6800d804c5c72",
    "text": "I'm facing a problem of deploying my smart contract on Remix. When I try to deploy the contract, for some reason the library that my main smart contract uses gets deployed instead of the smart contract. I make sure that the main contract is selected in the drop down as well. Has anyone faced a similar issue?",
    "html": "I&#39;m facing a problem of deploying my smart contract on Remix. When I try to deploy the contract, for some reason the library that my main smart contract uses gets deployed instead of the smart contract. I make sure that the main contract is selected in the drop down as well. Has anyone faced a similar issue?",
    "sent": "2019-03-20T06:07:41.481Z",
    "fromUser": {
      "id": "5b1f74a3d73408ce4f9d0577",
      "username": "ayushgupta0610",
      "displayName": "Ayush Gupta",
      "url": "/ayushgupta0610",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ayushgupta0610",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7221434?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7221434?v=4&s=128",
      "v": 38,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c91d8c4fcaf7b5f73e320df",
    "text": "Has anyone used Modular Network's TokenLib contract (https://github.com/Modular-Network/ethereum-libraries-token/blob/master/contracts/TokenLib.sol)?",
    "html": "Has anyone used Modular Network&#39;s TokenLib contract (<a href=\"https://github.com/Modular-Network/ethereum-libraries-token/blob/master/contracts/TokenLib.sol)?\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/Modular-Network/ethereum-libraries-token/blob/master/contracts/TokenLib.sol)?</a>",
    "sent": "2019-03-20T06:08:04.627Z",
    "fromUser": {
      "id": "5b1f74a3d73408ce4f9d0577",
      "username": "ayushgupta0610",
      "displayName": "Ayush Gupta",
      "url": "/ayushgupta0610",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ayushgupta0610",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7221434?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7221434?v=4&s=128",
      "v": 38,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [
      {
        "url": "https://github.com/Modular-Network/ethereum-libraries-token/blob/master/contracts/TokenLib.sol)?"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c9362262fb6800d8057093b",
    "text": "How can we check if the input address is a contract address or a user wallet address in the smart contract?",
    "html": "How can we check if the input address is a contract address or a user wallet address in the smart contract?",
    "sent": "2019-03-21T10:06:30.696Z",
    "fromUser": {
      "id": "5b1f74a3d73408ce4f9d0577",
      "username": "ayushgupta0610",
      "displayName": "Ayush Gupta",
      "url": "/ayushgupta0610",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ayushgupta0610",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7221434?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7221434?v=4&s=128",
      "v": 38,
      "gv": "4"
    },
    "unread": false,
    "readBy": 28,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c940e198126720abc200584",
    "text": "Hi guys, How can i calculate the cost of interacting with a smart contract? is theer any tool calculator online?",
    "html": "Hi guys, How can i calculate the cost of interacting with a smart contract? is theer any tool calculator online?",
    "sent": "2019-03-21T22:20:09.440Z",
    "fromUser": {
      "id": "5a677585d73408ce4f89c29e",
      "username": "Fedman78",
      "displayName": "Fed",
      "url": "/Fedman78",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Fedman78",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/32319188?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/32319188?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 31,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c9441ee52c7a91455d4ecfc",
    "text": "@Fedman78 i suppose that you could test it in remix and see in the stats when you interacting with this contract ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"Fedman78\" class=\"mention\">@Fedman78</span> i suppose that you could test it in remix and see in the stats when you interacting with this contract ",
    "sent": "2019-03-22T02:01:18.965Z",
    "fromUser": {
      "id": "5ad62f2dd73408ce4f960600",
      "username": "alexHope26",
      "displayName": "Alejandro Rodriguez Zavala",
      "url": "/alexHope26",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/alexHope26",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38471195?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38471195?v=4&s=128",
      "v": 15,
      "gv": "4"
    },
    "unread": false,
    "readBy": 31,
    "urls": [],
    "mentions": [
      {
        "screenName": "Fedman78",
        "userId": "5a677585d73408ce4f89c29e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c946f4cfcaf7b5f73f49295",
    "text": "@alexHope26 Thanks",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"alexHope26\" class=\"mention\">@alexHope26</span> Thanks",
    "sent": "2019-03-22T05:14:52.959Z",
    "fromUser": {
      "id": "5a677585d73408ce4f89c29e",
      "username": "Fedman78",
      "displayName": "Fed",
      "url": "/Fedman78",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Fedman78",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/32319188?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/32319188?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 32,
    "urls": [],
    "mentions": [
      {
        "screenName": "alexHope26",
        "userId": "5ad62f2dd73408ce4f960600",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c94bcba5547f77448479cdc",
    "text": "@Fedman78 i personnaly use the mocha test reporter.... quite accurate add https://www.npmjs.com/package/eth-gas-reporter   you can see how it would cost in ETH or Fiat to run some scenarios",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"Fedman78\" class=\"mention\">@Fedman78</span> i personnaly use the mocha test reporter.... quite accurate add <a href=\"https://www.npmjs.com/package/eth-gas-reporter\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.npmjs.com/package/eth-gas-reporter</a>   you can see how it would cost in ETH or Fiat to run some scenarios",
    "sent": "2019-03-22T10:45:14.335Z",
    "editedAt": "2019-03-22T10:45:37.364Z",
    "fromUser": {
      "id": "5927dd42d73408ce4f626bd7",
      "username": "cedricwalter",
      "displayName": "cedric walter",
      "url": "/cedricwalter",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cedricwalter",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/763491?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/763491?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 32,
    "urls": [
      {
        "url": "https://www.npmjs.com/package/eth-gas-reporter"
      }
    ],
    "mentions": [
      {
        "screenName": "Fedman78",
        "userId": "5a677585d73408ce4f89c29e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5c9857d40d719050575ec1ae",
    "text": "@cedricwalter thanks!",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"cedricwalter\" class=\"mention\">@cedricwalter</span> thanks!",
    "sent": "2019-03-25T04:23:48.739Z",
    "fromUser": {
      "id": "5a677585d73408ce4f89c29e",
      "username": "Fedman78",
      "displayName": "Fed",
      "url": "/Fedman78",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Fedman78",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/32319188?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/32319188?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 32,
    "urls": [],
    "mentions": [
      {
        "screenName": "cedricwalter",
        "userId": "5927dd42d73408ce4f626bd7",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c9868b849fdaa0d810fb4ba",
    "text": "where can i find articles on new security vulnerabilities",
    "html": "where can i find articles on new security vulnerabilities",
    "sent": "2019-03-25T05:35:52.248Z",
    "fromUser": {
      "id": "5813855cd73408ce4f318268",
      "username": "next2sundeep",
      "displayName": "Sundeep Kumar",
      "url": "/next2sundeep",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/next2sundeep",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/22321660?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/22321660?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 30,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5c9b00495c7a815f27d53a48",
    "text": "How to achieve the action of approving by a user from a function in another contract (Let's say B) rather than calling the function from the token contract itself (Let's say A)?\nIsn't there any other approach other than inheriting the token contract (A) by the other contract (B), since that's extending the byte code more than the size limit allowed.",
    "html": "How to achieve the action of approving by a user from a function in another contract (Let&#39;s say B) rather than calling the function from the token contract itself (Let&#39;s say A)?<br>Isn&#39;t there any other approach other than inheriting the token contract (A) by the other contract (B), since that&#39;s extending the byte code more than the size limit allowed.",
    "sent": "2019-03-27T04:47:05.611Z",
    "fromUser": {
      "id": "5b1f74a3d73408ce4f9d0577",
      "username": "ayushgupta0610",
      "displayName": "Ayush Gupta",
      "url": "/ayushgupta0610",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ayushgupta0610",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7221434?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7221434?v=4&s=128",
      "v": 38,
      "gv": "4"
    },
    "unread": false,
    "readBy": 33,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ca08f78016a930a453a8c8f",
    "text": "WAnt to develop a BlockChain Based Payments App. ANy suggestions?",
    "html": "WAnt to develop a BlockChain Based Payments App. ANy suggestions?",
    "sent": "2019-03-31T09:59:20.982Z",
    "fromUser": {
      "id": "5c9e66d6d73408ce4fbc3f02",
      "username": "k243",
      "displayName": "k243",
      "url": "/k243",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/k243",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/49076976?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/49076976?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 35,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ca19003a0790b29c93f735c",
    "text": "@Lordcero : ExploitDB",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"Lordcero\" class=\"mention\">@Lordcero</span> : ExploitDB",
    "sent": "2019-04-01T04:13:55.303Z",
    "fromUser": {
      "id": "5c8d46d2d73408ce4fbae015",
      "username": "NNAF98",
      "displayName": "Achille NDTAMA",
      "url": "/NNAF98",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/NNAF98",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/45701687?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/45701687?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 36,
    "urls": [],
    "mentions": [
      {
        "screenName": "Lordcero",
        "userId": "5813855cd73408ce4f318268",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ca21b838148e555b22eb381",
    "text": "Hi all",
    "html": "Hi all",
    "sent": "2019-04-01T14:09:07.460Z",
    "fromUser": {
      "id": "5ca0fa2fd73408ce4fbc5dcd",
      "username": "Sriniva63328880_twitter",
      "displayName": "Srinivas",
      "url": "/Sriniva63328880_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/Sriniva63328880_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
      "v": 3
    },
    "unread": false,
    "readBy": 38,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ca2c8301f6e900d5ec2dc73",
    "text": "Anyone here:\n1. Has links to tutorials OR\n2. Knows third party tools OR\n3. Knows companies OR \n4. Knows a friend OR\n5. You yourself\ncan teach how to develop a software that is blockchain agnostic( software is compatible with various blockchains instead of being compatible with only one)? I tried searching the Net, but I could not find a single tutorial on this topic. The closest that I came across was this: https://www.youtube.com/watch?v=g-QK9tSo9_s. Thanks in advance.",
    "html": "Anyone here:<ol>\n<li>Has links to tutorials OR</li>\n<li>Knows third party tools OR</li>\n<li>Knows companies OR </li>\n<li>Knows a friend OR</li>\n<li>You yourself<br>can teach how to develop a software that is blockchain agnostic( software is compatible with various blockchains instead of being compatible with only one)? I tried searching the Net, but I could not find a single tutorial on this topic. The closest that I came across was this: <a href=\"https://www.youtube.com/watch?v=g-QK9tSo9_s\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.youtube.com/watch?v=g-QK9tSo9_s</a>. Thanks in advance.</li>\n</ol>\n",
    "sent": "2019-04-02T02:25:52.855Z",
    "fromUser": {
      "id": "5c80c352d73408ce4fb9e3c5",
      "username": "sathish060799",
      "displayName": "Sathish Varman",
      "url": "/sathish060799",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sathish060799",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/43518412?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/43518412?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 36,
    "urls": [
      {
        "url": "https://www.youtube.com/watch?v=g-QK9tSo9_s"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5cce23eb4b4cb471d9ab4338",
    "text": "[![image.png](https://files.gitter.im/ConsenSys/smart-contract-best-practices/e1v8/thumb/image.png)](https://files.gitter.im/ConsenSys/smart-contract-best-practices/e1v8/image.png)",
    "html": "<a href=\"https://files.gitter.im/ConsenSys/smart-contract-best-practices/e1v8/image.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/ConsenSys/smart-contract-best-practices/e1v8/thumb/image.png\" alt=\"image.png\" rel=\"nofollow\"></a>",
    "sent": "2019-05-04T23:44:43.081Z",
    "fromUser": {
      "id": "5c8d46d2d73408ce4fbae015",
      "username": "NNAF98",
      "displayName": "Achille NDTAMA",
      "url": "/NNAF98",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/NNAF98",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/45701687?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/45701687?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [
      {
        "url": "https://files.gitter.im/ConsenSys/smart-contract-best-practices/e1v8/thumb/image.png"
      },
      {
        "url": "https://files.gitter.im/ConsenSys/smart-contract-best-practices/e1v8/image.png"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5cce23f66a84d76ed8479470",
    "text": "who had the same problem as me in compiling the smart contract ballot locally? please need help.",
    "html": "who had the same problem as me in compiling the smart contract ballot locally? please need help.",
    "sent": "2019-05-04T23:44:54.882Z",
    "fromUser": {
      "id": "5c8d46d2d73408ce4fbae015",
      "username": "NNAF98",
      "displayName": "Achille NDTAMA",
      "url": "/NNAF98",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/NNAF98",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/45701687?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/45701687?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5cce24108790b0307e51d4cb",
    "text": "Hello here..",
    "html": "Hello here..",
    "sent": "2019-05-04T23:45:20.452Z",
    "fromUser": {
      "id": "5c8d46d2d73408ce4fbae015",
      "username": "NNAF98",
      "displayName": "Achille NDTAMA",
      "url": "/NNAF98",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/NNAF98",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/45701687?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/45701687?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5cceec058446a6023ecdc3b5",
    "text": "@NNAF98 Maybe you want to paste the source code here?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"NNAF98\" class=\"mention\">@NNAF98</span> Maybe you want to paste the source code here?",
    "sent": "2019-05-05T13:58:29.635Z",
    "fromUser": {
      "id": "583b7316d73408ce4f390b49",
      "username": "yxliang01",
      "displayName": "Xiao Liang",
      "url": "/yxliang01",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/yxliang01",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/9780746?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/9780746?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [
      {
        "screenName": "NNAF98",
        "userId": "5c8d46d2d73408ce4fbae015",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5cd02d2bb489bb6ed72584a8",
    "text": "Hi there, anyone aware of any tool that can show which statement was covered by a transaction?",
    "html": "Hi there, anyone aware of any tool that can show which statement was covered by a transaction?",
    "sent": "2019-05-06T12:48:43.814Z",
    "fromUser": {
      "id": "583b7316d73408ce4f390b49",
      "username": "yxliang01",
      "displayName": "Xiao Liang",
      "url": "/yxliang01",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/yxliang01",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/9780746?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/9780746?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5cdcf88863dea422b48de98d",
    "text": "@yxliang01 \nThis will help you to check which statements were covered \nhttps://www.npmjs.com/package/solidity-coverage\n",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"yxliang01\" class=\"mention\">@yxliang01</span><br>This will help you to check which statements were covered<br><a href=\"https://www.npmjs.com/package/solidity-coverage\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.npmjs.com/package/solidity-coverage</a>",
    "sent": "2019-05-16T05:43:36.122Z",
    "fromUser": {
      "id": "5a1520e9d73408ce4f7fbf18",
      "username": "balajipachai",
      "displayName": "Balaji Pachai",
      "url": "/balajipachai",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/balajipachai",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/32358081?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/32358081?v=4&s=128",
      "v": 19,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [
      {
        "url": "https://www.npmjs.com/package/solidity-coverage"
      }
    ],
    "mentions": [
      {
        "screenName": "yxliang01",
        "userId": "583b7316d73408ce4f390b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5cdcf9810ec37966a1789eda",
    "text": "@NNAF98 \nThe below link might help:\nhttps://ethereum.stackexchange.com/questions/6562/what-is-the-cause-of-the-error-expected-import-directive-or-contract-definition",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"NNAF98\" class=\"mention\">@NNAF98</span><br>The below link might help:<br><a href=\"https://ethereum.stackexchange.com/questions/6562/what-is-the-cause-of-the-error-expected-import-directive-or-contract-definition\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://ethereum.stackexchange.com/questions/6562/what-is-the-cause-of-the-error-expected-import-directive-or-contract-definition</a>",
    "sent": "2019-05-16T05:47:45.660Z",
    "fromUser": {
      "id": "5a1520e9d73408ce4f7fbf18",
      "username": "balajipachai",
      "displayName": "Balaji Pachai",
      "url": "/balajipachai",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/balajipachai",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/32358081?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/32358081?v=4&s=128",
      "v": 19,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [
      {
        "url": "https://ethereum.stackexchange.com/questions/6562/what-is-the-cause-of-the-error-expected-import-directive-or-contract-definition"
      }
    ],
    "mentions": [
      {
        "screenName": "NNAF98",
        "userId": "5c8d46d2d73408ce4fbae015",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5cea954863dea422b4eb04ed",
    "text": "@balajipachai Thanks for your reply. I am aware of solidity-coverage. However, it's meant to generate coverage report for Truffle test cases, not a generic transaction...",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"balajipachai\" class=\"mention\">@balajipachai</span> Thanks for your reply. I am aware of solidity-coverage. However, it&#39;s meant to generate coverage report for Truffle test cases, not a generic transaction...",
    "sent": "2019-05-26T13:31:52.702Z",
    "fromUser": {
      "id": "583b7316d73408ce4f390b49",
      "username": "yxliang01",
      "displayName": "Xiao Liang",
      "url": "/yxliang01",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/yxliang01",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/9780746?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/9780746?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [
      {
        "screenName": "balajipachai",
        "userId": "5a1520e9d73408ce4f7fbf18",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5d31e9fea0351b1a8c608c58",
    "text": "Hi guys. I developed a SC with Solidity and I have a script that loads the blockchain with test data and when execute first time, It's ok, but when execute other times I get this message:\n\nVM Exception while processing transaction: revert.\n\nhow can capture this error in try - catch and return my custom message for frontend?.\n\nthanks!\n\nthis is my code:\n\ntry {\n        await deed.create(_serialNumber1, _manufacturer1, _owner1);\n        await deed.create(_serialNumber2, _manufacturer2, _owner2);\n        await deed.create(_serialNumber3, _manufacturer3, _owner3);\n        await deed.create(_serialNumber4, _manufacturer4, _owner4);\n        await deed.create(_serialNumber5, _manufacturer5, _owner5);\n        await deed.create(_serialNumber6, _manufacturer6, _owner6);\n        await deed.create(_serialNumber7, _manufacturer7, _owner7);\n      } catch (error) {\n        console.log(\"Error\");\n        console.log(error.message);\n      }",
    "html": "<p>Hi guys. I developed a SC with Solidity and I have a script that loads the blockchain with test data and when execute first time, It&#39;s ok, but when execute other times I get this message:</p><p>VM Exception while processing transaction: revert.</p><p>how can capture this error in try - catch and return my custom message for frontend?.</p><p>thanks!</p><p>this is my code:</p><p>try {<br>        await deed.create(_serialNumber1, _manufacturer1, _owner1);<br>        await deed.create(_serialNumber2, _manufacturer2, _owner2);<br>        await deed.create(_serialNumber3, _manufacturer3, _owner3);<br>        await deed.create(_serialNumber4, _manufacturer4, _owner4);<br>        await deed.create(_serialNumber5, _manufacturer5, _owner5);<br>        await deed.create(_serialNumber6, _manufacturer6, _owner6);<br>        await deed.create(_serialNumber7, _manufacturer7, _owner7);<br>      } catch (error) {<br>        console.log(&quot;Error&quot;);<br>        console.log(error.message);<br>      }</p>",
    "sent": "2019-07-19T16:04:14.905Z",
    "fromUser": {
      "id": "5b748e2ed73408ce4fa4b8d2",
      "username": "damianlluch",
      "displayName": "damianlluch",
      "url": "/damianlluch",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/damianlluch",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1463804?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1463804?v=4&s=128",
      "v": 21,
      "gv": "4"
    },
    "unread": false,
    "readBy": 7,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b0e38a852e35117cdf11e96",
    "text": "It is a bug bounty program with ETH rewards for finding bugs.",
    "html": "It is a bug bounty program with ETH rewards for finding bugs.",
    "sent": "2018-05-30T05:37:44.715Z",
    "fromUser": {
      "id": "5a636c5ed73408ce4f8945ba",
      "username": "mudgen_twitter",
      "displayName": "Nick Mudge",
      "url": "/mudgen_twitter",
      "avatarUrl": "https://avatars-01.gitter.im/g/u/mudgen_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/796795603749474304/ET0GfYGG_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/796795603749474304/ET0GfYGG.jpg"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b10223bba1a351a68dc3c1d",
    "text": "Thought this would be relevant to this audience: https://medium.com/@kevindkim/6-principles-for-designing-dapps-for-regular-people-from-a-consensus-18-hackathon-winner-134cdb881cc1 some UX principles for dApps geared towards regular consumers, from our award-winning dApp from the big Consensus hackathon.",
    "html": "Thought this would be relevant to this audience: <a href=\"https://medium.com/@kevindkim/6-principles-for-designing-dapps-for-regular-people-from-a-consensus-18-hackathon-winner-134cdb881cc1\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://medium.com/@kevindkim/6-principles-for-designing-dapps-for-regular-people-from-a-consensus-18-hackathon-winner-134cdb881cc1</a> some UX principles for dApps geared towards regular consumers, from our award-winning dApp from the big Consensus hackathon.",
    "sent": "2018-05-31T16:26:35.489Z",
    "fromUser": {
      "id": "5a9c4926d73408ce4f8fd514",
      "username": "kDkimson_twitter",
      "displayName": "Kevin D.",
      "url": "/kDkimson_twitter",
      "avatarUrl": "https://avatars-01.gitter.im/g/u/kDkimson_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/645777387796328448/6HIUq24G_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/645777387796328448/6HIUq24G.jpg",
      "v": 1
    },
    "unread": false,
    "readBy": 20,
    "urls": [
      {
        "url": "https://medium.com/@kevindkim/6-principles-for-designing-dapps-for-regular-people-from-a-consensus-18-hackathon-winner-134cdb881cc1"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b151380a45f930a65fc88ed",
    "text": "@kDkimson_twitter  please keep the discussion towards smart contract security practices",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"kDkimson_twitter\" class=\"mention\">@kDkimson_twitter</span>  please keep the discussion towards smart contract security practices",
    "sent": "2018-06-04T10:25:04.811Z",
    "fromUser": {
      "id": "58c5ff2bd73408ce4f502b86",
      "username": "chronaeon",
      "displayName": "Micah Dameron",
      "url": "/chronaeon",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/chronaeon",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=128",
      "v": 39,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [
      {
        "screenName": "kDkimson_twitter",
        "userId": "5a9c4926d73408ce4f8fd514",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b1516c552e35117cd06db79",
    "text": "UX principles for dApps are important  to talk about, but not here, unless you have connections to make back to security",
    "html": "UX principles for dApps are important  to talk about, but not here, unless you have connections to make back to security",
    "sent": "2018-06-04T10:39:01.176Z",
    "fromUser": {
      "id": "58c5ff2bd73408ce4f502b86",
      "username": "chronaeon",
      "displayName": "Micah Dameron",
      "url": "/chronaeon",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/chronaeon",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=128",
      "v": 39,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b169fe0e26c847ac8bc0cd0",
    "text": "I’m trying to Unit Test a smart contract in Soldidity. I want to send value to a contract, then transfer that ETH back out, but since each test is executed as single transaction I can’t do it all in one step (right?). Is there a way for me to break this up so that I can get the `send` step mined before subsequently testing the transfer?",
    "html": "I’m trying to Unit Test a smart contract in Soldidity. I want to send value to a contract, then transfer that ETH back out, but since each test is executed as single transaction I can’t do it all in one step (right?). Is there a way for me to break this up so that I can get the <code>send</code> step mined before subsequently testing the transfer?",
    "sent": "2018-06-05T14:36:16.723Z",
    "editedAt": "2018-06-05T14:36:35.842Z",
    "fromUser": {
      "id": "59b2f0eed73408ce4f74f12b",
      "username": "apbendi",
      "displayName": "Ben DiFrancesco",
      "url": "/apbendi",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/apbendi",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1479802?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1479802?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5b16a50082a4d36ea6d0c824",
    "text": "what are you using to test?",
    "html": "what are you using to test?",
    "sent": "2018-06-05T14:58:08.342Z",
    "fromUser": {
      "id": "5aa807dfd73408ce4f9132fc",
      "username": "julientregoat",
      "displayName": "Julien Tregoat",
      "url": "/julientregoat",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/julientregoat",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/33069092?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/33069092?v=4&s=128",
      "v": 12,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b16a5e3f9f2e56cf241db76",
    "text": "@julientregoat good question, should have mentioned. Just the vanilla truffle setup",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"julientregoat\" class=\"mention\">@julientregoat</span> good question, should have mentioned. Just the vanilla truffle setup",
    "sent": "2018-06-05T15:01:55.104Z",
    "fromUser": {
      "id": "59b2f0eed73408ce4f74f12b",
      "username": "apbendi",
      "displayName": "Ben DiFrancesco",
      "url": "/apbendi",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/apbendi",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1479802?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1479802?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [
      {
        "screenName": "julientregoat",
        "userId": "5aa807dfd73408ce4f9132fc",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b16a6c299fa7f4c0648b1f8",
    "text": "if you’re using truffle it’ll be using truffle contract which iirc it won’t return until the transaction is mined. so I think you can make an assertion within the body of the resolved promise ",
    "html": "if you’re using truffle it’ll be using truffle contract which iirc it won’t return until the transaction is mined. so I think you can make an assertion within the body of the resolved promise ",
    "sent": "2018-06-05T15:05:38.798Z",
    "fromUser": {
      "id": "5aa807dfd73408ce4f9132fc",
      "username": "julientregoat",
      "displayName": "Julien Tregoat",
      "url": "/julientregoat",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/julientregoat",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/33069092?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/33069092?v=4&s=128",
      "v": 12,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b16a6f4016ae21a4c10a897",
    "text": "You mean for a JavaScript test, though, right @julientregoat? In this case I’m trying to test in Solidity",
    "html": "You mean for a JavaScript test, though, right <span data-link-type=\"mention\" data-screen-name=\"julientregoat\" class=\"mention\">@julientregoat</span>? In this case I’m trying to test in Solidity",
    "sent": "2018-06-05T15:06:28.323Z",
    "fromUser": {
      "id": "59b2f0eed73408ce4f74f12b",
      "username": "apbendi",
      "displayName": "Ben DiFrancesco",
      "url": "/apbendi",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/apbendi",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1479802?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1479802?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [
      {
        "screenName": "julientregoat",
        "userId": "5aa807dfd73408ce4f9132fc",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b16a7ad93dc78791cb2e523",
    "text": "ahhh",
    "html": "ahhh",
    "sent": "2018-06-05T15:09:33.232Z",
    "fromUser": {
      "id": "5aa807dfd73408ce4f9132fc",
      "username": "julientregoat",
      "displayName": "Julien Tregoat",
      "url": "/julientregoat",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/julientregoat",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/33069092?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/33069092?v=4&s=128",
      "v": 12,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b16a87c82a4d36ea6d0d7fa",
    "text": "hmm then i’m not sure",
    "html": "hmm then i’m not sure",
    "sent": "2018-06-05T15:13:00.647Z",
    "fromUser": {
      "id": "5aa807dfd73408ce4f9132fc",
      "username": "julientregoat",
      "displayName": "Julien Tregoat",
      "url": "/julientregoat",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/julientregoat",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/33069092?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/33069092?v=4&s=128",
      "v": 12,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b16a89e160c567d1605ebb6",
    "text": "Does anyone write unit tests in Solidity? Seems awfully limited :(",
    "html": "Does anyone write unit tests in Solidity? Seems awfully limited :(",
    "sent": "2018-06-05T15:13:34.541Z",
    "fromUser": {
      "id": "59b2f0eed73408ce4f74f12b",
      "username": "apbendi",
      "displayName": "Ben DiFrancesco",
      "url": "/apbendi",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/apbendi",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1479802?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1479802?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b171e37016ae21a4c127bff",
    "text": "Hi, I have a contract and trying to test using truffle",
    "html": "Hi, I have a contract and trying to test using truffle",
    "sent": "2018-06-05T23:35:19.928Z",
    "fromUser": {
      "id": "575d212dc2f0db084a1d6da1",
      "username": "Hulmani",
      "displayName": "Manoj Hulmani",
      "url": "/Hulmani",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Hulmani",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b171e4d35e25f399750c83b",
    "text": "```\npragma solidity ^0.4.13;\n\ncontract Amazon {\n\n  /* set owner */\n  address owner;\n\n  /* Add a variable called skuCount to track the most recent sku # */\n  uint private skuCount;\n\n  /* Add a line that creates a public mapping that maps the SKU (a number) to an Item.\n     Call this mappings items\n  */\n  mapping (uint => Item) private items;\n\n  /* Add a line that creates an enum called State. This should have 4 states\n    ForSale\n    Sold\n    Shipped\n    Received\n  */\n  enum State { ForSale, Sold, Shipped , Received }\n\n  /* Create a struct named Item.\n    Here, add a name, sku, price, state, seller, and buyer\n    We've left you to figure out what the appropriate types are,\n    if you need help you can ask around :)\n  */\n  struct Item {\n    string name;\n    uint sku;\n    uint price;\n    State state;\n    address seller;\n    address buyer;\n  }\n\n  /* Create 4 events with the same name as each possible State (see above)\n    Each event should accept one argument, the sku*/\n    event ForSale (uint sku);\n    event Sold (uint sku);\n    event Shipped (uint sku);\n    event Received (uint sku);\n    event Send(uint sku);\nevent SendItem(string item);\n  modifier isOwner (address _owner) { require(msg.sender == _owner); _;}\n  modifier paidEnough(uint _value) { require(_value > msg.value); _;}\n  modifier checkValue(uint _amount) {\n    //refund them after pay for item (why it is before, _ checks for logic fo func)\n    _;\n    if (msg.value < _amount) {\n        uint amountToRefund = msg.value + _amount;\n        items[skuCount].buyer.transfer(amountToRefund);\n    }\n  }\n\n  /* For each of the following modifiers, use what you learned about modifiers\n   to give them functionality. For example, the forSale modifier should require\n   that the item with the given sku has the state ForSale. */\n  modifier forSale (uint _sku) { require(State.ForSale == items[_sku].state); _ ;}\n  modifier sold (uint _sku) { require(State.Sold == items[_sku].state); _ ;}\n  modifier isNotSold (uint _sku) { require(State.Sold != items[_sku].state); _ ;}\n  modifier shipped (uint _sku) { require(State.Shipped == items[_sku].state); _ ;}\n  modifier received (uint _sku) { require(State.Received == items[_sku].state); _ ;}\n\t\n\n  function Amazon() {\n    /* Here, set the owner as the person who instantiated the contract\n       and set your skuCount to 0. */\n       owner = msg.sender;\n       skuCount = 0;\n\t\n  }\n\n\nfunction getSkuCount() returns (uint) {\n\tSend(skuCount);\n\treturn skuCount;\n\t\n  }\nfunction getOwner() returns (address) {\n\treturn owner;\n\t\n  }\n\n function getItem() returns (string) {\n\n    SendItem(items[0].name);\n    return items[0].name;\n  }\n\n  function addItem(string _name, uint _price) {\n    ForSale(skuCount);\n    items[skuCount] = Item({name: _name, sku: skuCount, price: _price, state: State.ForSale, seller: msg.sender, buyer: msg.sender});\n    skuCount = skuCount + 1;\n  }\n\n  /* Add a keyword so the function can be paid. This function should transfer money\n    to the seller, set the buyer as the person who called this transaction, and set the state\n    to Sold. Be careful, this function should use 3 modifiers to check if the item is for sale,\n    if the buyer paid enough, and check the value after the function is called to make sure the buyer is\n    refunded any excess ether sent. Remember to call the event associated with this function!*/\n\n  function buyItem(uint sku) payable \n  public \n  forSale(sku)\n  paidEnough(items[sku].price)\n  {\n    items[sku].seller.transfer(msg.value);\n    items[sku].buyer = msg.sender;\n    items[sku].state = State.Sold;\n    Sold(sku);\n  }\n\n  /* Add 2 modifiers to check if the item is sold already, and that the person calling this function\n  is the seller. Change the state of the item to shipped. Remember to call the event associated with this function!*/\n   function shipItem(uint sku) \n   public \n   isNotSold(sku) \n   isOwner(owner) \n   {\n     Sold(sku);\n    items[sku].state = State.Shipped;\n    Shipped(sku);\n  \n}\n\n  /* Add 2 modifiers to check if the item is shipped already, and that the person calling this function\n  is the buyer. Chan\n```",
    "html": "<pre><code>pragma solidity ^<span class=\"number\">0.4</span>.13;\n\ncontract Amazon {\n\n  <span class=\"comment\">/* set owner */</span>\n  address owner;\n\n  <span class=\"comment\">/* Add a variable called skuCount to track the most recent sku # */</span>\n  <span class=\"keyword\">uint</span> <span class=\"keyword\">private</span> skuCount;\n\n  <span class=\"comment\">/* Add a line that creates a public mapping that maps the SKU (a number) to an Item.\n     Call this mappings items\n  */</span>\n  mapping (<span class=\"keyword\">uint</span> =&gt; Item) <span class=\"keyword\">private</span> items;\n\n  <span class=\"comment\">/* Add a line that creates an enum called State. This should have 4 states\n    ForSale\n    Sold\n    Shipped\n    Received\n  */</span>\n  <span class=\"keyword\">enum</span> State { ForSale, Sold, Shipped , Received }\n\n  <span class=\"comment\">/* Create a struct named Item.\n    Here, add a name, sku, price, state, seller, and buyer\n    We've left you to figure out what the appropriate types are,\n    if you need help you can ask around :)\n  */</span>\n  <span class=\"keyword\">struct</span> Item {\n    <span class=\"keyword\">string</span> name;\n    <span class=\"keyword\">uint</span> sku;\n    <span class=\"keyword\">uint</span> price;\n    State state;\n    address seller;\n    address buyer;\n  }\n\n  <span class=\"comment\">/* Create 4 events with the same name as each possible State (see above)\n    Each event should accept one argument, the sku*/</span>\n    <span class=\"function\"><span class=\"keyword\">event</span> <span class=\"title\">ForSale</span> <span class=\"params\">(<span class=\"keyword\">uint</span> sku)</span></span>;\n    <span class=\"function\"><span class=\"keyword\">event</span> <span class=\"title\">Sold</span> <span class=\"params\">(<span class=\"keyword\">uint</span> sku)</span></span>;\n    <span class=\"function\"><span class=\"keyword\">event</span> <span class=\"title\">Shipped</span> <span class=\"params\">(<span class=\"keyword\">uint</span> sku)</span></span>;\n    <span class=\"function\"><span class=\"keyword\">event</span> <span class=\"title\">Received</span> <span class=\"params\">(<span class=\"keyword\">uint</span> sku)</span></span>;\n    <span class=\"function\"><span class=\"keyword\">event</span> <span class=\"title\">Send</span><span class=\"params\">(<span class=\"keyword\">uint</span> sku)</span></span>;\n<span class=\"function\"><span class=\"keyword\">event</span> <span class=\"title\">SendItem</span><span class=\"params\">(<span class=\"keyword\">string</span> item)</span></span>;\n  <span class=\"function\">modifier <span class=\"title\">isOwner</span> <span class=\"params\">(address _owner)</span> </span>{ require(msg.sender == _owner); _;}\n  <span class=\"function\">modifier <span class=\"title\">paidEnough</span><span class=\"params\">(<span class=\"keyword\">uint</span> _value)</span> </span>{ require(_value &gt; msg.<span class=\"keyword\">value</span>); _;}\n  <span class=\"function\">modifier <span class=\"title\">checkValue</span><span class=\"params\">(<span class=\"keyword\">uint</span> _amount)</span> </span>{\n    <span class=\"comment\">//refund them after pay for item (why it is before, _ checks for logic fo func)</span>\n    _;\n    <span class=\"keyword\">if</span> (msg.<span class=\"keyword\">value</span> &lt; _amount) {\n        <span class=\"keyword\">uint</span> amountToRefund = msg.<span class=\"keyword\">value</span> + _amount;\n        items[skuCount].buyer.transfer(amountToRefund);\n    }\n  }\n\n  <span class=\"comment\">/* For each of the following modifiers, use what you learned about modifiers\n   to give them functionality. For example, the forSale modifier should require\n   that the item with the given sku has the state ForSale. */</span>\n  <span class=\"function\">modifier <span class=\"title\">forSale</span> <span class=\"params\">(<span class=\"keyword\">uint</span> _sku)</span> </span>{ require(State.ForSale == items[_sku].state); _ ;}\n  <span class=\"function\">modifier <span class=\"title\">sold</span> <span class=\"params\">(<span class=\"keyword\">uint</span> _sku)</span> </span>{ require(State.Sold == items[_sku].state); _ ;}\n  <span class=\"function\">modifier <span class=\"title\">isNotSold</span> <span class=\"params\">(<span class=\"keyword\">uint</span> _sku)</span> </span>{ require(State.Sold != items[_sku].state); _ ;}\n  <span class=\"function\">modifier <span class=\"title\">shipped</span> <span class=\"params\">(<span class=\"keyword\">uint</span> _sku)</span> </span>{ require(State.Shipped == items[_sku].state); _ ;}\n  <span class=\"function\">modifier <span class=\"title\">received</span> <span class=\"params\">(<span class=\"keyword\">uint</span> _sku)</span> </span>{ require(State.Received == items[_sku].state); _ ;}\n\n\n  <span class=\"function\">function <span class=\"title\">Amazon</span><span class=\"params\">()</span> </span>{\n    <span class=\"comment\">/* Here, set the owner as the person who instantiated the contract\n       and set your skuCount to 0. */</span>\n       owner = msg.sender;\n       skuCount = <span class=\"number\">0</span>;\n\n  }\n\n\n<span class=\"function\">function <span class=\"title\">getSkuCount</span><span class=\"params\">()</span> <span class=\"title\">returns</span> <span class=\"params\">(<span class=\"keyword\">uint</span>)</span> </span>{\n    Send(skuCount);\n    <span class=\"keyword\">return</span> skuCount;\n\n  }\n<span class=\"function\">function <span class=\"title\">getOwner</span><span class=\"params\">()</span> <span class=\"title\">returns</span> <span class=\"params\">(address)</span> </span>{\n    <span class=\"keyword\">return</span> owner;\n\n  }\n\n <span class=\"function\">function <span class=\"title\">getItem</span><span class=\"params\">()</span> <span class=\"title\">returns</span> <span class=\"params\">(<span class=\"keyword\">string</span>)</span> </span>{\n\n    SendItem(items[<span class=\"number\">0</span>].name);\n    <span class=\"keyword\">return</span> items[<span class=\"number\">0</span>].name;\n  }\n\n  <span class=\"function\">function <span class=\"title\">addItem</span><span class=\"params\">(<span class=\"keyword\">string</span> _name, <span class=\"keyword\">uint</span> _price)</span> </span>{\n    ForSale(skuCount);\n    items[skuCount] = Item({name: _name, sku: skuCount, price: _price, state: State.ForSale, seller: msg.sender, buyer: msg.sender});\n    skuCount = skuCount + <span class=\"number\">1</span>;\n  }\n\n  <span class=\"comment\">/* Add a keyword so the function can be paid. This function should transfer money\n    to the seller, set the buyer as the person who called this transaction, and set the state\n    to Sold. Be careful, this function should use 3 modifiers to check if the item is for sale,\n    if the buyer paid enough, and check the value after the function is called to make sure the buyer is\n    refunded any excess ether sent. Remember to call the event associated with this function!*/</span>\n\n  <span class=\"function\">function <span class=\"title\">buyItem</span><span class=\"params\">(<span class=\"keyword\">uint</span> sku)</span> payable \n  <span class=\"keyword\">public</span> \n  <span class=\"title\">forSale</span><span class=\"params\">(sku)</span>\n  <span class=\"title\">paidEnough</span><span class=\"params\">(items[sku].price)</span>\n  </span>{\n    items[sku].seller.transfer(msg.<span class=\"keyword\">value</span>);\n    items[sku].buyer = msg.sender;\n    items[sku].state = State.Sold;\n    Sold(sku);\n  }\n\n  <span class=\"comment\">/* Add 2 modifiers to check if the item is sold already, and that the person calling this function\n  is the seller. Change the state of the item to shipped. Remember to call the event associated with this function!*/</span>\n   <span class=\"function\">function <span class=\"title\">shipItem</span><span class=\"params\">(<span class=\"keyword\">uint</span> sku)</span> \n   <span class=\"keyword\">public</span> \n   <span class=\"title\">isNotSold</span><span class=\"params\">(sku)</span> \n   <span class=\"title\">isOwner</span><span class=\"params\">(owner)</span> \n   </span>{\n     Sold(sku);\n    items[sku].state = State.Shipped;\n    Shipped(sku);\n\n}\n\n  <span class=\"comment\">/* Add 2 modifiers to check if the item is shipped already, and that the person calling this function\n  is the buyer. Chan</span></code></pre>",
    "sent": "2018-06-05T23:35:41.554Z",
    "fromUser": {
      "id": "575d212dc2f0db084a1d6da1",
      "username": "Hulmani",
      "displayName": "Manoj Hulmani",
      "url": "/Hulmani",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Hulmani",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b171e6b22a05f5e710406e7",
    "text": "testing  file",
    "html": "testing  file",
    "sent": "2018-06-05T23:36:11.868Z",
    "fromUser": {
      "id": "575d212dc2f0db084a1d6da1",
      "username": "Hulmani",
      "displayName": "Manoj Hulmani",
      "url": "/Hulmani",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Hulmani",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b171e95a45f930a6504418d",
    "text": "```\nvar Amazon = artifacts.require('./Amazon.sol');\ncontract('Amazon', function(accounts) {\n  it(\"should assert true\", function(done) {\n    var amazon = Amazon.deployed();\n    assert.isTrue(true);\n    done();\n  });\n});\n\n\ncontract('Test initial sku count', function([]) {\n  it(\"Tests if sku count is 0\", function() {\n    Amazon.deployed().then(function(amazon){\n      return amazon;\n    }).then(function(amazon){\n        amazon = amazon;\n\tassert.equal(0,amazon.getSkuCount(), \"Sku Count is not 0\");\n      \tdone();\n    })\n  });\n});\n\n\ncontract('Test Add item', function([]) {\n  it(\"Adds item and tests if its value is food\", function() {\n    Amazon.deployed().then(function(amazon){\n      return amazon;\n    }).then(function(amazon){\n\tamazon.addItem(\"food\",2);\n\tassert.equal(\"sdjkhfsjkhfjk\", amazon.getIteme.call(), \"item is not food\");\n      \tdone();\n    })\n  });\n});\n\n```\n",
    "html": "<pre><code>var Amazon = artifacts.<span class=\"built_in\">require</span>(<span class=\"string\">'./Amazon.sol'</span>);\ncontract(<span class=\"string\">'Amazon'</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(accounts)</span></span> {\n  it(<span class=\"string\">\"should assert true\"</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(done)</span></span> {\n    var amazon = Amazon.deployed();\n    <span class=\"built_in\">assert</span>.isTrue(<span class=\"keyword\">true</span>);\n    done();\n  });\n});\n\n\ncontract(<span class=\"string\">'Test initial sku count'</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">([])</span></span> {\n  it(<span class=\"string\">\"Tests if sku count is 0\"</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span> {\n    Amazon.deployed().<span class=\"keyword\">then</span>(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(amazon)</span></span>{\n      <span class=\"keyword\">return</span> amazon;\n    }).<span class=\"keyword\">then</span>(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(amazon)</span></span>{\n        amazon = amazon;\n    <span class=\"built_in\">assert</span>.equal(<span class=\"number\">0</span>,amazon.getSkuCount(), <span class=\"string\">\"Sku Count is not 0\"</span>);\n          done();\n    })\n  });\n});\n\n\ncontract(<span class=\"string\">'Test Add item'</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">([])</span></span> {\n  it(<span class=\"string\">\"Adds item and tests if its value is food\"</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span> {\n    Amazon.deployed().<span class=\"keyword\">then</span>(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(amazon)</span></span>{\n      <span class=\"keyword\">return</span> amazon;\n    }).<span class=\"keyword\">then</span>(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(amazon)</span></span>{\n    amazon.addItem(<span class=\"string\">\"food\"</span>,<span class=\"number\">2</span>);\n    <span class=\"built_in\">assert</span>.equal(<span class=\"string\">\"sdjkhfsjkhfjk\"</span>, amazon.getIteme.call(), <span class=\"string\">\"item is not food\"</span>);\n          done();\n    })\n  });\n});</code></pre>",
    "sent": "2018-06-05T23:36:53.497Z",
    "fromUser": {
      "id": "575d212dc2f0db084a1d6da1",
      "username": "Hulmani",
      "displayName": "Manoj Hulmani",
      "url": "/Hulmani",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Hulmani",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b171eb352e35117cd0eaef4",
    "text": "all tests are passed! Can anyone point out my mistake?",
    "html": "all tests are passed! Can anyone point out my mistake?",
    "sent": "2018-06-05T23:37:23.515Z",
    "fromUser": {
      "id": "575d212dc2f0db084a1d6da1",
      "username": "Hulmani",
      "displayName": "Manoj Hulmani",
      "url": "/Hulmani",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Hulmani",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b18335ee26c847ac8c1c29f",
    "text": "@Hulmani Why do you think you have a mistake?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"Hulmani\" class=\"mention\">@Hulmani</span> Why do you think you have a mistake?",
    "sent": "2018-06-06T19:17:50.333Z",
    "editedAt": "2018-06-06T19:18:15.048Z",
    "fromUser": {
      "id": "5a4e6586d73408ce4f86204f",
      "username": "foogunlana",
      "displayName": "Foluso",
      "url": "/foogunlana",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/foogunlana",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5675998?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5675998?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [
      {
        "screenName": "Hulmani",
        "userId": "575d212dc2f0db084a1d6da1",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5b18b1b693dc78791cb9d8e0",
    "text": "@foogunlana  I am calling a function that does not even exist!",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"foogunlana\" class=\"mention\">@foogunlana</span>  I am calling a function that does not even exist!",
    "sent": "2018-06-07T04:16:54.583Z",
    "fromUser": {
      "id": "575d212dc2f0db084a1d6da1",
      "username": "Hulmani",
      "displayName": "Manoj Hulmani",
      "url": "/Hulmani",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Hulmani",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [
      {
        "screenName": "foogunlana",
        "userId": "5a4e6586d73408ce4f86204f",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b18b1ccfcefb41e8a934ab9",
    "text": "and all the tests passed",
    "html": "and all the tests passed",
    "sent": "2018-06-07T04:17:16.014Z",
    "fromUser": {
      "id": "575d212dc2f0db084a1d6da1",
      "username": "Hulmani",
      "displayName": "Manoj Hulmani",
      "url": "/Hulmani",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Hulmani",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b18b1d4e26c847ac8c32cca",
    "text": "so I know I am doing wrong...",
    "html": "so I know I am doing wrong...",
    "sent": "2018-06-07T04:17:24.337Z",
    "fromUser": {
      "id": "575d212dc2f0db084a1d6da1",
      "username": "Hulmani",
      "displayName": "Manoj Hulmani",
      "url": "/Hulmani",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Hulmani",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b18b20f22a05f5e71092b36",
    "text": "and I came to know that I had not resolved promises",
    "html": "and I came to know that I had not resolved promises",
    "sent": "2018-06-07T04:18:23.504Z",
    "fromUser": {
      "id": "575d212dc2f0db084a1d6da1",
      "username": "Hulmani",
      "displayName": "Manoj Hulmani",
      "url": "/Hulmani",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Hulmani",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b18b21e22a05f5e71092b4d",
    "text": "```\n var Amazon = artifacts.require('./Amazon.sol');\n\n\n            contract('Amazon', function(accounts) {\n              it(\"should assert true\", function(done) {\n                var amazon = Amazon.deployed();\n                assert.isTrue(true);\n                done();\n              });\n            });\n\n\n\n            contract('Test initial sku count', function(accounts) {\n              it(\"Tests if sku count is 0\", function() {\n                Amazon.deployed().then(function(amazon){\n                  return amazon;\n                }).then(function(amazon){\n                    amazon.getSkuCount.call().then(function(skuCount){\n                    assert.equal(0,skuCount, \"Sku Count is not 0\");\n                });\n                })\n              });\n            });\n\n\n            contract('Test Add item', function() {\n              it(\"Adds item and tests if its value is bracelet\", function() {\n                Amazon.deployed().then(function(amazon){\n                  return amazon;\n                }).then(function(amazon){\n                    amazon.addItem(\"bracelet\",2).then(function(){\n                        amazon.getItem.call(0).then(function(item){\n                                expect(item).to.equal(\"bracelet\");\n                                amazon.getSkuCount.call().then(function(skuCount){\n                                assert.equal(1,skuCount, \"Sku Count is not 0\");\n                            });\n                    });\n                });\n                });\n              });\n            });\n\n```",
    "html": "<pre><code> var Amazon = artifacts.<span class=\"built_in\">require</span>(<span class=\"string\">'./Amazon.sol'</span>);\n\n\n            contract(<span class=\"string\">'Amazon'</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(accounts)</span></span> {\n              it(<span class=\"string\">\"should assert true\"</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(done)</span></span> {\n                var amazon = Amazon.deployed();\n                <span class=\"built_in\">assert</span>.isTrue(<span class=\"keyword\">true</span>);\n                done();\n              });\n            });\n\n\n\n            contract(<span class=\"string\">'Test initial sku count'</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(accounts)</span></span> {\n              it(<span class=\"string\">\"Tests if sku count is 0\"</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span> {\n                Amazon.deployed().<span class=\"keyword\">then</span>(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(amazon)</span></span>{\n                  <span class=\"keyword\">return</span> amazon;\n                }).<span class=\"keyword\">then</span>(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(amazon)</span></span>{\n                    amazon.getSkuCount.call().<span class=\"keyword\">then</span>(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(skuCount)</span></span>{\n                    <span class=\"built_in\">assert</span>.equal(<span class=\"number\">0</span>,skuCount, <span class=\"string\">\"Sku Count is not 0\"</span>);\n                });\n                })\n              });\n            });\n\n\n            contract(<span class=\"string\">'Test Add item'</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span> {\n              it(<span class=\"string\">\"Adds item and tests if its value is bracelet\"</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span> {\n                Amazon.deployed().<span class=\"keyword\">then</span>(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(amazon)</span></span>{\n                  <span class=\"keyword\">return</span> amazon;\n                }).<span class=\"keyword\">then</span>(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(amazon)</span></span>{\n                    amazon.addItem(<span class=\"string\">\"bracelet\"</span>,<span class=\"number\">2</span>).<span class=\"keyword\">then</span>(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>{\n                        amazon.getItem.call(<span class=\"number\">0</span>).<span class=\"keyword\">then</span>(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(item)</span></span>{\n                                expect(item).to.equal(<span class=\"string\">\"bracelet\"</span>);\n                                amazon.getSkuCount.call().<span class=\"keyword\">then</span>(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(skuCount)</span></span>{\n                                <span class=\"built_in\">assert</span>.equal(<span class=\"number\">1</span>,skuCount, <span class=\"string\">\"Sku Count is not 0\"</span>);\n                            });\n                    });\n                });\n                });\n              });\n            });</code></pre>",
    "sent": "2018-06-07T04:18:38.133Z",
    "fromUser": {
      "id": "575d212dc2f0db084a1d6da1",
      "username": "Hulmani",
      "displayName": "Manoj Hulmani",
      "url": "/Hulmani",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Hulmani",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b18b23093dc78791cb9da35",
    "text": "these tests look good",
    "html": "these tests look good",
    "sent": "2018-06-07T04:18:56.524Z",
    "fromUser": {
      "id": "575d212dc2f0db084a1d6da1",
      "username": "Hulmani",
      "displayName": "Manoj Hulmani",
      "url": "/Hulmani",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Hulmani",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b18b24a93dc78791cb9da54",
    "text": "but I have a problem with one mores test, which is supposed to fail, but passes!",
    "html": "but I have a problem with one mores test, which is supposed to fail, but passes!",
    "sent": "2018-06-07T04:19:22.558Z",
    "fromUser": {
      "id": "575d212dc2f0db084a1d6da1",
      "username": "Hulmani",
      "displayName": "Manoj Hulmani",
      "url": "/Hulmani",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Hulmani",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b18b25d160c567d160cee14",
    "text": "```\n       contract('Buy item', function() {\n                      it(\"Buys item and tests the state\", function() {\n                        Amazon.deployed().then(function(amazon){\n                          return amazon;\n                        }).then(function(amazon){\n                           it(\"Adds item and tests\", function() {\n                            amazon.addItem(\"bracelet\",2).then(function(){\n                                amazon.buyItem(1).then(function(){\n                                     amazon.getItem.call(0).then(function(state){\n                                         console.log('State '+state);\n                                         expect(state).to.equal(\"hfh\");\n                                    });\n                                });\n                           });\n                        });\n                        });\n                      });\n            });\n\n```",
    "html": "<pre><code>       contract<span class=\"list\">(<span class=\"quoted\">'Buy</span> item', function<span class=\"list\">()</span> {\n                      it<span class=\"list\">(<span class=\"string\">\"Buys item and tests the state\"</span>, function<span class=\"list\">()</span> {\n                        Amazon.deployed<span class=\"list\">()</span>.then<span class=\"list\">(<span class=\"keyword\">function</span><span class=\"list\">(<span class=\"keyword\">amazon</span>)</span>{\n                          return amazon<span class=\"comment\">;</span>\n                        })</span>.then<span class=\"list\">(<span class=\"keyword\">function</span><span class=\"list\">(<span class=\"keyword\">amazon</span>)</span>{\n                           it<span class=\"list\">(<span class=\"string\">\"Adds item and tests\"</span>, function<span class=\"list\">()</span> {\n                            amazon.addItem<span class=\"list\">(<span class=\"string\">\"bracelet\"</span>,<span class=\"number\">2</span>)</span>.then<span class=\"list\">(<span class=\"keyword\">function</span><span class=\"list\">()</span>{\n                                amazon.buyItem<span class=\"list\">(<span class=\"number\">1</span>)</span>.then<span class=\"list\">(<span class=\"keyword\">function</span><span class=\"list\">()</span>{\n                                     amazon.getItem.call<span class=\"list\">(<span class=\"number\">0</span>)</span>.then<span class=\"list\">(<span class=\"keyword\">function</span><span class=\"list\">(<span class=\"keyword\">state</span>)</span>{\n                                         console.log<span class=\"list\">(<span class=\"quoted\">'State</span> <span class=\"quoted\">'+state</span>)</span><span class=\"comment\">;</span>\n                                         expect<span class=\"list\">(<span class=\"keyword\">state</span>)</span>.to.equal<span class=\"list\">(<span class=\"string\">\"hfh\"</span>)</span><span class=\"comment\">;</span>\n                                    })</span><span class=\"comment\">;</span>\n                                })</span><span class=\"comment\">;</span>\n                           })</span><span class=\"comment\">;</span>\n                        })</span><span class=\"comment\">;</span>\n                        })</span><span class=\"comment\">;</span>\n                      })</span><span class=\"comment\">;</span>\n            })</span><span class=\"comment\">;</span></code></pre>",
    "sent": "2018-06-07T04:19:41.510Z",
    "fromUser": {
      "id": "575d212dc2f0db084a1d6da1",
      "username": "Hulmani",
      "displayName": "Manoj Hulmani",
      "url": "/Hulmani",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Hulmani",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b18b27f22a05f5e71092c17",
    "text": "buyItem(1) cannot work!",
    "html": "buyItem(1) cannot work!",
    "sent": "2018-06-07T04:20:15.624Z",
    "fromUser": {
      "id": "575d212dc2f0db084a1d6da1",
      "username": "Hulmani",
      "displayName": "Manoj Hulmani",
      "url": "/Hulmani",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Hulmani",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b18b291a45f930a650988fe",
    "text": "should not work!",
    "html": "should not work!",
    "sent": "2018-06-07T04:20:33.029Z",
    "fromUser": {
      "id": "575d212dc2f0db084a1d6da1",
      "username": "Hulmani",
      "displayName": "Manoj Hulmani",
      "url": "/Hulmani",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Hulmani",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b18b2a1b0d8ca5f1a8653a1",
    "text": "may be the contract is incorrect...",
    "html": "may be the contract is incorrect...",
    "sent": "2018-06-07T04:20:49.562Z",
    "fromUser": {
      "id": "575d212dc2f0db084a1d6da1",
      "username": "Hulmani",
      "displayName": "Manoj Hulmani",
      "url": "/Hulmani",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Hulmani",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b18b2db22a05f5e71092cc9",
    "text": "but buyItem(0) and then getItem(0) should return a state and due to an incorrect comparsion should fail",
    "html": "but buyItem(0) and then getItem(0) should return a state and due to an incorrect comparsion should fail",
    "sent": "2018-06-07T04:21:47.058Z",
    "fromUser": {
      "id": "575d212dc2f0db084a1d6da1",
      "username": "Hulmani",
      "displayName": "Manoj Hulmani",
      "url": "/Hulmani",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Hulmani",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b18b2e1b0d8ca5f1a865465",
    "text": "but it passes",
    "html": "but it passes",
    "sent": "2018-06-07T04:21:53.120Z",
    "fromUser": {
      "id": "575d212dc2f0db084a1d6da1",
      "username": "Hulmani",
      "displayName": "Manoj Hulmani",
      "url": "/Hulmani",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Hulmani",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b18b2f14eaffb692d8a3684",
    "text": "my updated contact is as follows:",
    "html": "my updated contact is as follows:",
    "sent": "2018-06-07T04:22:09.381Z",
    "fromUser": {
      "id": "575d212dc2f0db084a1d6da1",
      "username": "Hulmani",
      "displayName": "Manoj Hulmani",
      "url": "/Hulmani",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Hulmani",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b18b301b0d8ca5f1a865496",
    "text": "```\npragma solidity ^0.4.13;\n\ncontract Amazon {\n\n  /* set owner */\n  address owner;\n\n  /* Add a variable called skuCount to track the most recent sku # */\n  uint private skuCount;\n\n  /* Add a line that creates a public mapping that maps the SKU (a number) to an Item.\n     Call this mappings items\n  */\n  mapping (uint => Item) private items;\n\n  /* Add a line that creates an enum called State. This should have 4 states\n    ForSale\n    Sold\n    Shipped\n    Received\n  */\n  enum State { ForSale, Sold, Shipped , Received }\n\n  /* Create a struct named Item.\n    Here, add a name, sku, price, state, seller, and buyer\n    We've left you to figure out what the appropriate types are,\n    if you need help you can ask around :)\n  */\n  struct Item {\n    string name;\n    uint sku;\n    uint price;\n    State state;\n    address seller;\n    address buyer;\n  }\n\n  /* Create 4 events with the same name as each possible State (see above)\n    Each event should accept one argument, the sku*/\n    event ForSale (uint skuCount);\n    event Sold (uint sku, uint skuCount);\n    event Shipped (uint sku);\n    event Received (uint sku);\n    event Send(uint sku);\n    event GetItem(string item);\n  modifier isOwner (address _owner) { require(msg.sender == _owner); _;}\n  modifier isBuyer (address _owner) { require(msg.sender == _owner); _;}\n  modifier paidEnough(uint _value) { require(_value <= msg.value); _;} //if the sku price <= the ether amount buyer has\n  //refund them after pay for item (why it is before, _ checks for logic fo func) \n //_amount should never be negative\n modifier checkValue(uint _amount) {  \n    _;\n    if (_amount > 0) {\n        items[skuCount].buyer.transfer(_amount);\n    }\n  }\n\n  /* For each of the following modifiers, use what you learned about modifiers\n   to give them functionality. For example, the forSale modifier should require\n   that the item with the given sku has the state ForSale. */\n  modifier forSale (uint _sku) { require(State.ForSale == items[_sku].state); _ ;}\n  modifier sold (uint _sku) { require(State.Sold == items[_sku].state); _ ;}\n  modifier shipped (uint _sku) { require(State.Shipped == items[_sku].state); _ ;}\n  modifier received (uint _sku) { require(State.Received == items[_sku].state); _ ;}\n\n  modifier validSkuValue (uint _sku) { require(_sku < skuCount); _ ;}\t\n  modifier notShipped (uint _sku) { require(State.Shipped != items[_sku].state); _ ;}\n  modifier notReceived (uint _sku) { require(State.Received != items[_sku].state); _ ;}\n  modifier notSold (uint _sku) { require(State.Sold != items[_sku].state); _ ;}\n  \n  \n  function Amazon() {\n    /* Here, set the owner as the person who instantiated the contract\n       and set your skuCount to 0. */\n       owner = msg.sender;\n       skuCount = 0;\n\t\n  }\n\nfunction getSkuCount() returns (uint) {\n\tSend(skuCount);\n\treturn skuCount;\n  }\n  \nfunction getOwner() returns (address) {\n\treturn owner;\n  }\n\n function getItem(uint sku) returns (string) {\n\n    GetItem(items[sku].name);\n    return items[sku].name;\n  }\n\nfunction getItemState(uint sku) returns (State) {\n    return items[sku].state;\n  }\n\n  function addItem(string _name, uint _price) {\n    ForSale(skuCount);\n    items[skuCount] = Item({name: _name, sku: skuCount, price: _price, state: State.ForSale, seller: msg.sender, buyer: msg.sender});\n    skuCount = skuCount + 1;\n    \n  }\n\n  /* Add a keyword so the function can be paid. This function should transfer money\n    to the seller, set the buyer as the person who called this transaction, and set the state\n    to Sold. Be careful, this function should use 3 modifiers to check if the item is for sale,\n    if the buyer paid enough, and check the value after the function is called to make sure the buyer is\n    refunded any excess ether sent. Remember to call the event associated with this function!*/\n\n  function buyItem(uint sku) payable\n  validSkuValue(sku)\n  forSale(sku)\n  paidEnough(items[sku].price)\n  checkValue(msg.value-items[sku].price) \n  {\n    //console.log(skuCount);\n    items[sku].seller.transfer(msg.value);\n    items[sku].buyer = tx.origin; //transaction \n    it\n```",
    "html": "<pre><code>pragma solidity ^<span class=\"number\">0.4</span>.13;\n\ncontract Amazon {\n\n  <span class=\"comment\">/* set owner */</span>\n  address owner;\n\n  <span class=\"comment\">/* Add a variable called skuCount to track the most recent sku # */</span>\n  <span class=\"keyword\">uint</span> <span class=\"keyword\">private</span> skuCount;\n\n  <span class=\"comment\">/* Add a line that creates a public mapping that maps the SKU (a number) to an Item.\n     Call this mappings items\n  */</span>\n  mapping (<span class=\"keyword\">uint</span> =&gt; Item) <span class=\"keyword\">private</span> items;\n\n  <span class=\"comment\">/* Add a line that creates an enum called State. This should have 4 states\n    ForSale\n    Sold\n    Shipped\n    Received\n  */</span>\n  <span class=\"keyword\">enum</span> State { ForSale, Sold, Shipped , Received }\n\n  <span class=\"comment\">/* Create a struct named Item.\n    Here, add a name, sku, price, state, seller, and buyer\n    We've left you to figure out what the appropriate types are,\n    if you need help you can ask around :)\n  */</span>\n  <span class=\"keyword\">struct</span> Item {\n    <span class=\"keyword\">string</span> name;\n    <span class=\"keyword\">uint</span> sku;\n    <span class=\"keyword\">uint</span> price;\n    State state;\n    address seller;\n    address buyer;\n  }\n\n  <span class=\"comment\">/* Create 4 events with the same name as each possible State (see above)\n    Each event should accept one argument, the sku*/</span>\n    <span class=\"function\"><span class=\"keyword\">event</span> <span class=\"title\">ForSale</span> <span class=\"params\">(<span class=\"keyword\">uint</span> skuCount)</span></span>;\n    <span class=\"function\"><span class=\"keyword\">event</span> <span class=\"title\">Sold</span> <span class=\"params\">(<span class=\"keyword\">uint</span> sku, <span class=\"keyword\">uint</span> skuCount)</span></span>;\n    <span class=\"function\"><span class=\"keyword\">event</span> <span class=\"title\">Shipped</span> <span class=\"params\">(<span class=\"keyword\">uint</span> sku)</span></span>;\n    <span class=\"function\"><span class=\"keyword\">event</span> <span class=\"title\">Received</span> <span class=\"params\">(<span class=\"keyword\">uint</span> sku)</span></span>;\n    <span class=\"function\"><span class=\"keyword\">event</span> <span class=\"title\">Send</span><span class=\"params\">(<span class=\"keyword\">uint</span> sku)</span></span>;\n    <span class=\"function\"><span class=\"keyword\">event</span> <span class=\"title\">GetItem</span><span class=\"params\">(<span class=\"keyword\">string</span> item)</span></span>;\n  <span class=\"function\">modifier <span class=\"title\">isOwner</span> <span class=\"params\">(address _owner)</span> </span>{ require(msg.sender == _owner); _;}\n  <span class=\"function\">modifier <span class=\"title\">isBuyer</span> <span class=\"params\">(address _owner)</span> </span>{ require(msg.sender == _owner); _;}\n  <span class=\"function\">modifier <span class=\"title\">paidEnough</span><span class=\"params\">(<span class=\"keyword\">uint</span> _value)</span> </span>{ require(_value &lt;= msg.<span class=\"keyword\">value</span>); _;} <span class=\"comment\">//if the sku price &lt;= the ether amount buyer has</span>\n  <span class=\"comment\">//refund them after pay for item (why it is before, _ checks for logic fo func) </span>\n <span class=\"comment\">//_amount should never be negative</span>\n <span class=\"function\">modifier <span class=\"title\">checkValue</span><span class=\"params\">(<span class=\"keyword\">uint</span> _amount)</span> </span>{  \n    _;\n    <span class=\"keyword\">if</span> (_amount &gt; <span class=\"number\">0</span>) {\n        items[skuCount].buyer.transfer(_amount);\n    }\n  }\n\n  <span class=\"comment\">/* For each of the following modifiers, use what you learned about modifiers\n   to give them functionality. For example, the forSale modifier should require\n   that the item with the given sku has the state ForSale. */</span>\n  <span class=\"function\">modifier <span class=\"title\">forSale</span> <span class=\"params\">(<span class=\"keyword\">uint</span> _sku)</span> </span>{ require(State.ForSale == items[_sku].state); _ ;}\n  <span class=\"function\">modifier <span class=\"title\">sold</span> <span class=\"params\">(<span class=\"keyword\">uint</span> _sku)</span> </span>{ require(State.Sold == items[_sku].state); _ ;}\n  <span class=\"function\">modifier <span class=\"title\">shipped</span> <span class=\"params\">(<span class=\"keyword\">uint</span> _sku)</span> </span>{ require(State.Shipped == items[_sku].state); _ ;}\n  <span class=\"function\">modifier <span class=\"title\">received</span> <span class=\"params\">(<span class=\"keyword\">uint</span> _sku)</span> </span>{ require(State.Received == items[_sku].state); _ ;}\n\n  <span class=\"function\">modifier <span class=\"title\">validSkuValue</span> <span class=\"params\">(<span class=\"keyword\">uint</span> _sku)</span> </span>{ require(_sku &lt; skuCount); _ ;}    \n  <span class=\"function\">modifier <span class=\"title\">notShipped</span> <span class=\"params\">(<span class=\"keyword\">uint</span> _sku)</span> </span>{ require(State.Shipped != items[_sku].state); _ ;}\n  <span class=\"function\">modifier <span class=\"title\">notReceived</span> <span class=\"params\">(<span class=\"keyword\">uint</span> _sku)</span> </span>{ require(State.Received != items[_sku].state); _ ;}\n  <span class=\"function\">modifier <span class=\"title\">notSold</span> <span class=\"params\">(<span class=\"keyword\">uint</span> _sku)</span> </span>{ require(State.Sold != items[_sku].state); _ ;}\n\n\n  <span class=\"function\">function <span class=\"title\">Amazon</span><span class=\"params\">()</span> </span>{\n    <span class=\"comment\">/* Here, set the owner as the person who instantiated the contract\n       and set your skuCount to 0. */</span>\n       owner = msg.sender;\n       skuCount = <span class=\"number\">0</span>;\n\n  }\n\n<span class=\"function\">function <span class=\"title\">getSkuCount</span><span class=\"params\">()</span> <span class=\"title\">returns</span> <span class=\"params\">(<span class=\"keyword\">uint</span>)</span> </span>{\n    Send(skuCount);\n    <span class=\"keyword\">return</span> skuCount;\n  }\n\n<span class=\"function\">function <span class=\"title\">getOwner</span><span class=\"params\">()</span> <span class=\"title\">returns</span> <span class=\"params\">(address)</span> </span>{\n    <span class=\"keyword\">return</span> owner;\n  }\n\n <span class=\"function\">function <span class=\"title\">getItem</span><span class=\"params\">(<span class=\"keyword\">uint</span> sku)</span> <span class=\"title\">returns</span> <span class=\"params\">(<span class=\"keyword\">string</span>)</span> </span>{\n\n    GetItem(items[sku].name);\n    <span class=\"keyword\">return</span> items[sku].name;\n  }\n\n<span class=\"function\">function <span class=\"title\">getItemState</span><span class=\"params\">(<span class=\"keyword\">uint</span> sku)</span> <span class=\"title\">returns</span> <span class=\"params\">(State)</span> </span>{\n    <span class=\"keyword\">return</span> items[sku].state;\n  }\n\n  <span class=\"function\">function <span class=\"title\">addItem</span><span class=\"params\">(<span class=\"keyword\">string</span> _name, <span class=\"keyword\">uint</span> _price)</span> </span>{\n    ForSale(skuCount);\n    items[skuCount] = Item({name: _name, sku: skuCount, price: _price, state: State.ForSale, seller: msg.sender, buyer: msg.sender});\n    skuCount = skuCount + <span class=\"number\">1</span>;\n\n  }\n\n  <span class=\"comment\">/* Add a keyword so the function can be paid. This function should transfer money\n    to the seller, set the buyer as the person who called this transaction, and set the state\n    to Sold. Be careful, this function should use 3 modifiers to check if the item is for sale,\n    if the buyer paid enough, and check the value after the function is called to make sure the buyer is\n    refunded any excess ether sent. Remember to call the event associated with this function!*/</span>\n\n  <span class=\"function\">function <span class=\"title\">buyItem</span><span class=\"params\">(<span class=\"keyword\">uint</span> sku)</span> payable\n  <span class=\"title\">validSkuValue</span><span class=\"params\">(sku)</span>\n  <span class=\"title\">forSale</span><span class=\"params\">(sku)</span>\n  <span class=\"title\">paidEnough</span><span class=\"params\">(items[sku].price)</span>\n  <span class=\"title\">checkValue</span><span class=\"params\">(msg.<span class=\"keyword\">value</span>-items[sku].price)</span> \n  </span>{\n    <span class=\"comment\">//console.log(skuCount);</span>\n    items[sku].seller.transfer(msg.<span class=\"keyword\">value</span>);\n    items[sku].buyer = tx.origin; <span class=\"comment\">//transaction </span>\n    it</code></pre>",
    "sent": "2018-06-07T04:22:24.921Z",
    "fromUser": {
      "id": "575d212dc2f0db084a1d6da1",
      "username": "Hulmani",
      "displayName": "Manoj Hulmani",
      "url": "/Hulmani",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Hulmani",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b18b358a45f930a65098ad5",
    "text": "if  anyone can  can give a clue about the mistake in this test case, it would be very helpful\n> ```\n       contract('Buy item', function() {\n                      it(\"Buys item and tests the state\", function() {\n                        Amazon.deployed().then(function(amazon){\n                          return amazon;\n                        }).then(function(amazon){\n                           it(\"Adds item and tests\", function() {\n                            amazon.addItem(\"bracelet\",2).then(function(){\n                                amazon.buyItem(1).then(function(){\n                                     amazon.getItem.call(0).then(function(state){\n                                         console.log('State '+state);\n                                         expect(state).to.equal(\"hfh\");\n                                    });\n                                });\n                           });\n                        });\n                        });\n                      });\n            });\n\n```",
    "html": "<p>if  anyone can  can give a clue about the mistake in this test case, it would be very helpful</p><blockquote>\n<p>```<br>       contract(&#39;Buy item&#39;, function() {<br>                      it(&quot;Buys item and tests the state&quot;, function() {<br>                        Amazon.deployed().then(function(amazon){<br>                          return amazon;<br>                        }).then(function(amazon){<br>                           it(&quot;Adds item and tests&quot;, function() {<br>                            amazon.addItem(&quot;bracelet&quot;,2).then(function(){<br>                                amazon.buyItem(1).then(function(){<br>                                     amazon.getItem.call(0).then(function(state){<br>                                         console.log(&#39;State &#39;+state);<br>                                         expect(state).to.equal(&quot;hfh&quot;);<br>                                    });<br>                                });<br>                           });<br>                        });<br>                        });<br>                      });<br>            });</p></blockquote>\n<p>```</p>",
    "sent": "2018-06-07T04:23:52.936Z",
    "fromUser": {
      "id": "575d212dc2f0db084a1d6da1",
      "username": "Hulmani",
      "displayName": "Manoj Hulmani",
      "url": "/Hulmani",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Hulmani",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 34,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b194966fcefb41e8a957e8b",
    "text": "@Hulmani you have a question about Truffle's testing framework. Try asking your question in the ConsenSys/Truffle gitter, like so: \n\n\n>Hulmani: Hey, I can't make sense out of the results of these truffle Tests. Why are they passing? I'm calling a non-existent function, so shouldn't they be failing?\n",
    "html": "<p><span data-link-type=\"mention\" data-screen-name=\"Hulmani\" class=\"mention\">@Hulmani</span> you have a question about Truffle&#39;s testing framework. Try asking your question in the ConsenSys/Truffle gitter, like so: </p><blockquote>\n<p>Hulmani: Hey, I can&#39;t make sense out of the results of these truffle Tests. Why are they passing? I&#39;m calling a non-existent function, so shouldn&#39;t they be failing?</p></blockquote>\n",
    "sent": "2018-06-07T15:04:06.258Z",
    "editedAt": "2018-06-07T15:04:19.503Z",
    "fromUser": {
      "id": "58c5ff2bd73408ce4f502b86",
      "username": "chronaeon",
      "displayName": "Micah Dameron",
      "url": "/chronaeon",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/chronaeon",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=128",
      "v": 39,
      "gv": "4"
    },
    "unread": false,
    "readBy": 40,
    "urls": [],
    "mentions": [
      {
        "screenName": "Hulmani",
        "userId": "575d212dc2f0db084a1d6da1",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5b1949efe26c847ac8c56ec1",
    "text": "Writing the question shortly and concisely is more likely to get you an answer, and makes it so you don't have to send your whole contract into the chat prematurely. :)",
    "html": "Writing the question shortly and concisely is more likely to get you an answer, and makes it so you don&#39;t have to send your whole contract into the chat prematurely. :)",
    "sent": "2018-06-07T15:06:23.618Z",
    "fromUser": {
      "id": "58c5ff2bd73408ce4f502b86",
      "username": "chronaeon",
      "displayName": "Micah Dameron",
      "url": "/chronaeon",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/chronaeon",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=128",
      "v": 39,
      "gv": "4"
    },
    "unread": false,
    "readBy": 39,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b1a93a4106f3c24bde5ba93",
    "text": "I recently wrote EIP 173: Contract Ownership Standard: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-173.md\nLooking for feedback about the standard here: https://github.com/ethereum/EIPs/issues/173",
    "html": "I recently wrote EIP 173: Contract Ownership Standard: <a href=\"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-173.md\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/ethereum/EIPs/blob/master/EIPS/eip-173.md</a><br>Looking for feedback about the standard here: <span data-link-type=\"issue\" data-issue=\"173\" data-issue-repo=\"ethereum/EIPs\" class=\"issue\">ethereum/EIPs#173</span>",
    "sent": "2018-06-08T14:33:08.749Z",
    "fromUser": {
      "id": "5a636c5ed73408ce4f8945ba",
      "username": "mudgen_twitter",
      "displayName": "Nick Mudge",
      "url": "/mudgen_twitter",
      "avatarUrl": "https://avatars-01.gitter.im/g/u/mudgen_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/796795603749474304/ET0GfYGG_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/796795603749474304/ET0GfYGG.jpg"
    },
    "unread": false,
    "readBy": 34,
    "urls": [
      {
        "url": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-173.md"
      }
    ],
    "mentions": [],
    "issues": [
      {
        "repo": "ethereum/EIPs",
        "number": "173"
      }
    ],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b1b39bb659aad4a3260ee0a",
    "text": "@chronaeon  while I appreciate you helping me out... I would like to point out that some people like me want context and samples... I am not sure how much questions you have asked and answered, I have seen so many ask for samples... so I like to be efficient and ask the question providing all the relevant information :smile:  no offense... ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"chronaeon\" class=\"mention\">@chronaeon</span>  while I appreciate you helping me out... I would like to point out that some people like me want context and samples... I am not sure how much questions you have asked and answered, I have seen so many ask for samples... so I like to be efficient and ask the question providing all the relevant information :smile:  no offense... ",
    "sent": "2018-06-09T02:21:47.909Z",
    "fromUser": {
      "id": "575d212dc2f0db084a1d6da1",
      "username": "Hulmani",
      "displayName": "Manoj Hulmani",
      "url": "/Hulmani",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Hulmani",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 34,
    "urls": [],
    "mentions": [
      {
        "screenName": "chronaeon",
        "userId": "58c5ff2bd73408ce4f502b86",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b1e7ccfddd61d08e54871c0",
    "text": "Duly noted; thanks for the feedback",
    "html": "Duly noted; thanks for the feedback",
    "sent": "2018-06-11T13:44:47.401Z",
    "fromUser": {
      "id": "58c5ff2bd73408ce4f502b86",
      "username": "chronaeon",
      "displayName": "Micah Dameron",
      "url": "/chronaeon",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/chronaeon",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=128",
      "v": 39,
      "gv": "4"
    },
    "unread": false,
    "readBy": 31,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b1e7d806077c67d3ee54fd5",
    "text": "Interested to know what the Truffle folks think of this issue",
    "html": "Interested to know what the Truffle folks think of this issue",
    "sent": "2018-06-11T13:47:44.743Z",
    "fromUser": {
      "id": "58c5ff2bd73408ce4f502b86",
      "username": "chronaeon",
      "displayName": "Micah Dameron",
      "url": "/chronaeon",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/chronaeon",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=128",
      "v": 39,
      "gv": "4"
    },
    "unread": false,
    "readBy": 33,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b1e7d9a6023754a3184b183",
    "text": "Did you get a chance to ask in the Truffle channel?",
    "html": "Did you get a chance to ask in the Truffle channel?",
    "sent": "2018-06-11T13:48:10.676Z",
    "fromUser": {
      "id": "58c5ff2bd73408ce4f502b86",
      "username": "chronaeon",
      "displayName": "Micah Dameron",
      "url": "/chronaeon",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/chronaeon",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=128",
      "v": 39,
      "gv": "4"
    },
    "unread": false,
    "readBy": 34,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b1e8ba34b2d9417e1dea378",
    "text": "Does anyone know how to fix truffle compile if it isn't working on a OS device? I can't compile my smart contracts and its irking me.",
    "html": "Does anyone know how to fix truffle compile if it isn&#39;t working on a OS device? I can&#39;t compile my smart contracts and its irking me.",
    "sent": "2018-06-11T14:48:03.358Z",
    "fromUser": {
      "id": "5b1e88f5d73408ce4f9cee1f",
      "username": "tuckherin",
      "displayName": "tuckherin",
      "url": "/tuckherin",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tuckherin",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16739652?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16739652?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 36,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b1f06318864a936cc7fff81",
    "text": "@chronaeon  Yes, I posted there before I posted here (cause I did not get a response for a while)....  I used asyn/await to solve the issues, still struggling to find out how to solve without using aysn/await... ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"chronaeon\" class=\"mention\">@chronaeon</span>  Yes, I posted there before I posted here (cause I did not get a response for a while)....  I used asyn/await to solve the issues, still struggling to find out how to solve without using aysn/await... ",
    "sent": "2018-06-11T23:30:57.880Z",
    "fromUser": {
      "id": "575d212dc2f0db084a1d6da1",
      "username": "Hulmani",
      "displayName": "Manoj Hulmani",
      "url": "/Hulmani",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Hulmani",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10252361?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 35,
    "urls": [],
    "mentions": [
      {
        "screenName": "chronaeon",
        "userId": "58c5ff2bd73408ce4f502b86",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b1f9d3937a2df7bed35acae",
    "text": "@tuckherin as an alternative compiler to Truffle, I recommend solc. [Here's how to install it on a variety of devices.](http://solidity.readthedocs.io/en/v0.4.24/installing-solidity.html)",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"tuckherin\" class=\"mention\">@tuckherin</span> as an alternative compiler to Truffle, I recommend solc. <a href=\"http://solidity.readthedocs.io/en/v0.4.24/installing-solidity.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Here&#39;s how to install it on a variety of devices.</a>",
    "sent": "2018-06-12T10:15:21.642Z",
    "editedAt": "2018-06-12T10:16:28.231Z",
    "fromUser": {
      "id": "58c5ff2bd73408ce4f502b86",
      "username": "chronaeon",
      "displayName": "Micah Dameron",
      "url": "/chronaeon",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/chronaeon",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=128",
      "v": 39,
      "gv": "4"
    },
    "unread": false,
    "readBy": 37,
    "urls": [
      {
        "url": "http://solidity.readthedocs.io/en/v0.4.24/installing-solidity.html"
      }
    ],
    "mentions": [
      {
        "screenName": "tuckherin",
        "userId": "5b1e88f5d73408ce4f9cee1f",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 4
  },
  {
    "id": "5b20bc0332618e705eb612e6",
    "text": "hello i deploy \n function deposit(uint256 amount) {\n\n    // transfer the tokens from the sender to this contract\n    balances[msg.sender] = balances[msg.sender].add(amount);\n    ERC20(tracker_0x_address).transferFrom(msg.sender, this, amount);\n  }\n\nwhen call deposit remix alert \n\nGas estimation errored with the following message (see below). The transaction execution will likely fail. Do you want to force sending? \nError: gas required exceeds allowance or always failing transaction at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:1402159 at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:932233 at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:350777 at o (chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:369008) at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:353607 at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:350777 at c (chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:353883) at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:353921 at Ht (chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:363290) at Object.<anonymous> (chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:354010) at e.value (chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:933148) at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:932715 at n (chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:368952) at o (chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:369030) at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:353607 at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:932681 at n (chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:368952) at o (chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:369030) at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:353607 at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:933054 at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:354417 at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:350777 at c (chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:353883) at s (chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:353805) at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:353607 at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:354397 at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:932936 at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:931373 at i (chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:1070602)\n\n",
    "html": "<p>hello i deploy<br> function deposit(uint256 amount) {</p><pre><code><span class=\"comment\">// transfer the tokens from the sender to this contract</span>\nbalances[msg.sender] = balances[msg.sender].add(amount);\nERC20(tracker_0x_address).transferFrom(msg.sender, <span class=\"keyword\">this</span>, amount);</code></pre><p>  }</p><p>when call deposit remix alert </p><p>Gas estimation errored with the following message (see below). The transaction execution will likely fail. Do you want to force sending?<br>Error: gas required exceeds allowance or always failing transaction at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:1402159 at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:932233 at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:350777 at o (chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:369008) at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:353607 at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:350777 at c (chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:353883) at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:353921 at Ht (chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:363290) at Object.&lt;anonymous&gt; (chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:354010) at e.value (chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:933148) at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:932715 at n (chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:368952) at o (chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:369030) at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:353607 at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:932681 at n (chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:368952) at o (chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:369030) at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:353607 at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:933054 at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:354417 at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:350777 at c (chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:353883) at s (chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:353805) at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:353607 at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:354397 at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:932936 at chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:931373 at i (chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/background.js:1:1070602)</p>",
    "sent": "2018-06-13T06:38:59.646Z",
    "fromUser": {
      "id": "598665bed73408ce4f7040a8",
      "username": "ManZerAirBow_twitter",
      "displayName": "prapat polchan",
      "url": "/ManZerAirBow_twitter",
      "avatarUrl": "https://avatars-03.gitter.im/g/u/ManZerAirBow_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
      "v": 4
    },
    "unread": false,
    "readBy": 36,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b215578e87f0c7bee88d863",
    "text": "This error is being generated by MetaMask. Looks like someone started an issue about it [here](https://ethereum.stackexchange.com/questions/49976/constantly-getting-gas-estimation-failed-error-when-attempting-to-deploy-erc20), but it hasn't been solved yet. Make sure to enter in your solution when you figure it out.",
    "html": "This error is being generated by MetaMask. Looks like someone started an issue about it <a href=\"https://ethereum.stackexchange.com/questions/49976/constantly-getting-gas-estimation-failed-error-when-attempting-to-deploy-erc20\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a>, but it hasn&#39;t been solved yet. Make sure to enter in your solution when you figure it out.",
    "sent": "2018-06-13T17:33:44.502Z",
    "editedAt": "2018-06-13T17:34:02.852Z",
    "fromUser": {
      "id": "58c5ff2bd73408ce4f502b86",
      "username": "chronaeon",
      "displayName": "Micah Dameron",
      "url": "/chronaeon",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/chronaeon",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=128",
      "v": 39,
      "gv": "4"
    },
    "unread": false,
    "readBy": 42,
    "urls": [
      {
        "url": "https://ethereum.stackexchange.com/questions/49976/constantly-getting-gas-estimation-failed-error-when-attempting-to-deploy-erc20"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5b229639c277fb705dce43c8",
    "text": "Hey guys when i try to run `truffle migrate` i get this error \n```\nError encountered, bailing. Network state unknown. Review successful transactions manually.\nError: Migrations contract constructor expected 1 arguments, received 0\n```",
    "html": "Hey guys when i try to run <code>truffle migrate</code> i get this error <pre><code>Error encountered, bailing. Network state unknown. Review successful transactions manually.\nError: Migrations contract <span class=\"function\"><span class=\"keyword\">constructor</span> <span class=\"title\">expected</span> 1 <span class=\"title\">arguments</span>, <span class=\"title\">received</span> 0</span></code></pre>",
    "sent": "2018-06-14T16:22:17.897Z",
    "editedAt": "2018-06-14T16:22:40.794Z",
    "fromUser": {
      "id": "5b2295d6d73408ce4f9d5bd5",
      "username": "MushroomMaula",
      "displayName": "MushroomMaula",
      "url": "/MushroomMaula",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/MushroomMaula",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/28159111?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/28159111?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 44,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 3
  },
  {
    "id": "5b23aaaa202c8f71f5041fb5",
    "text": "@MushroomMaula have you tried this option:",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"MushroomMaula\" class=\"mention\">@MushroomMaula</span> have you tried this option:",
    "sent": "2018-06-15T12:01:46.582Z",
    "fromUser": {
      "id": "5b23a93dd73408ce4f9d7503",
      "username": "peakashu",
      "displayName": "peakashu",
      "url": "/peakashu",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/peakashu",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/31745466?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/31745466?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 46,
    "urls": [],
    "mentions": [
      {
        "screenName": "MushroomMaula",
        "userId": "5b2295d6d73408ce4f9d5bd5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b23aab28864a936cc8a9f06",
    "text": "```truffle migrate --reset```",
    "html": "<code>truffle migrate --reset</code>",
    "sent": "2018-06-15T12:01:54.655Z",
    "editedAt": "2018-06-15T12:02:10.766Z",
    "fromUser": {
      "id": "5b23a93dd73408ce4f9d7503",
      "username": "peakashu",
      "displayName": "peakashu",
      "url": "/peakashu",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/peakashu",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/31745466?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/31745466?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 46,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5b24e20637a2df7bed417e19",
    "text": "\n$ truffle init\nDownloading...\nError: Error making request to https://raw.githubusercontent.com/truffle-box/bar                                                                                                                e-box/master/truffle.js. Got error: getaddrinfo ENOTFOUND raw.githubusercontent.                                                                                                                com raw.githubusercontent.com:443. Please check the format of the requested reso                                                                                                                urce.\n    at Request._callback (C:\\Users\\blockchain\\AppData\\Roaming\\npm\\node_modules\\t                                                                                                                ruffle\\build\\webpack:\\~\\truffle-box\\lib\\utils\\unbox.js:45:1)\n    at self.callback (C:\\Users\\blockchain\\AppData\\Roaming\\npm\\node_modules\\truff                                                                                                                le\\build\\webpack:\\~\\request\\request.js:185:1)\n    at emitOne (events.js:116:13)\n    at Request.emit (events.js:211:7)\n    at Request.onRequestError (C:\\Users\\blockchain\\AppData\\Roaming\\npm\\node_modu                                                                                                                les\\truffle\\build\\webpack:\\~\\request\\request.js:877:1)\n    at emitOne (events.js:116:13)\n    at ClientRequest.emit (events.js:211:7)\n    at TLSSocket.socketErrorListener (_http_client.js:387:9)\n    at emitOne (events.js:116:13)\n    at TLSSocket.emit (events.js:211:7)\n please give the instructions how to resolve it",
    "html": "$ truffle init<br>Downloading...<br>Error: Error making request to <a href=\"https://raw.githubusercontent.com/truffle-box/bar\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://raw.githubusercontent.com/truffle-box/bar</a>                                                                                                                e-box/master/truffle.js. Got error: getaddrinfo ENOTFOUND raw.githubusercontent.                                                                                                                com raw.githubusercontent.com:443. Please check the format of the requested reso                                                                                                                urce.<br>    at Request._callback (C:\\Users\\blockchain\\AppData\\Roaming\\npm\\node_modules\\t                                                                                                                ruffle\\build\\webpack:~\\truffle-box\\lib\\utils\\unbox.js:45:1)<br>    at self.callback (C:\\Users\\blockchain\\AppData\\Roaming\\npm\\node_modules\\truff                                                                                                                le\\build\\webpack:~\\request\\request.js:185:1)<br>    at emitOne (events.js:116:13)<br>    at Request.emit (events.js:211:7)<br>    at Request.onRequestError (C:\\Users\\blockchain\\AppData\\Roaming\\npm\\node_modu                                                                                                                les\\truffle\\build\\webpack:~\\request\\request.js:877:1)<br>    at emitOne (events.js:116:13)<br>    at ClientRequest.emit (events.js:211:7)<br>    at TLSSocket.socketErrorListener (_http_client.js:387:9)<br>    at emitOne (events.js:116:13)<br>    at TLSSocket.emit (events.js:211:7)<br> please give the instructions how to resolve it",
    "sent": "2018-06-16T10:10:14.225Z",
    "fromUser": {
      "id": "5b24df48d73408ce4f9d8b7e",
      "username": "bhemeswararaoa",
      "displayName": "bhemeswararaoa",
      "url": "/bhemeswararaoa",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/bhemeswararaoa",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/40297257?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/40297257?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 46,
    "urls": [
      {
        "url": "https://raw.githubusercontent.com/truffle-box/bar"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b2522af4fbf4449eb1bd4de",
    "text": "hello everyone im trying in my crowdsale to send back ether if someone bought above on the supply but it always revert because of transfer()\n```\nif(receiveBGL > SALESUPPLY.sub(TokenSold)){\n            //Calculation remaining tokens\n            uint remainingTokens = SALESUPPLY.sub(TokenSold);\n            emit LogDebug(remainingTokens);\n            //Calculating price of token left\n            uint tokenPriceInWei = remainingTokens.div(rate);\n            emit LogDebug(tokenPriceInWei);\n            //Calculation amount of wei to send back\n            uint amountExceeds = weiPayment.sub(tokenPriceInWei);\n            emit LogDebug(amountExceeds);\n            //Sending back to recipient\n            _recipient.transfer(123);\n            //Updating token that recipient will receive\n            receive = remainingTokens;\n        }\n```",
    "html": "hello everyone im trying in my crowdsale to send back ether if someone bought above on the supply but it always revert because of transfer()<pre><code><span class=\"keyword\">if</span>(receiveBGL &gt; SALESUPPLY.sub(TokenSold)){\n            <span class=\"comment\">//Calculation remaining tokens</span>\n            <span class=\"keyword\">uint</span> remainingTokens = SALESUPPLY.sub(TokenSold);\n            <span class=\"function\">emit <span class=\"title\">LogDebug</span><span class=\"params\">(remainingTokens)</span></span>;\n            <span class=\"comment\">//Calculating price of token left</span>\n            <span class=\"keyword\">uint</span> tokenPriceInWei = remainingTokens.div(rate);\n            <span class=\"function\">emit <span class=\"title\">LogDebug</span><span class=\"params\">(tokenPriceInWei)</span></span>;\n            <span class=\"comment\">//Calculation amount of wei to send back</span>\n            <span class=\"keyword\">uint</span> amountExceeds = weiPayment.sub(tokenPriceInWei);\n            <span class=\"function\">emit <span class=\"title\">LogDebug</span><span class=\"params\">(amountExceeds)</span></span>;\n            <span class=\"comment\">//Sending back to recipient</span>\n            _recipient.transfer(<span class=\"number\">123</span>);\n            <span class=\"comment\">//Updating token that recipient will receive</span>\n            receive = remainingTokens;\n        }</code></pre>",
    "sent": "2018-06-16T14:46:07.048Z",
    "fromUser": {
      "id": "5968f2f3d73408ce4f6d2dbf",
      "username": "JokDallas",
      "displayName": "JokDallas",
      "url": "/JokDallas",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/JokDallas",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30182138?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30182138?v=4&s=128",
      "v": 12,
      "gv": "4"
    },
    "unread": false,
    "readBy": 47,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b276ab9aeffcf5c023c7355",
    "text": "contract contractB {\n  using SafeMath for uint256;\n  address tracker_0x_address = 0x6b42FE821b653A0eae1a52249BF5cd58D1100890; // ContractA Address\n  address to_address = 0xe459024A10b6Ed6189998706B8fd72fD0Dd00b97;\n  mapping ( address => uint256 ) public balances;\n  \n    function sendTokens (uint256 amount) public\n    {\n       //tokenAddress is the address of the ERC20 token deployed on Ropsten\n        ERC20(tracker_0x_address).transfer(to_address, amount);\n    }\n\n\n}\n",
    "html": "<p>contract contractB {<br>  using SafeMath for uint256;<br>  address tracker_0x_address = 0x6b42FE821b653A0eae1a52249BF5cd58D1100890; // ContractA Address<br>  address to_address = 0xe459024A10b6Ed6189998706B8fd72fD0Dd00b97;<br>  mapping ( address =&gt; uint256 ) public balances;</p><pre><code><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sendTokens</span> <span class=\"params\">(uint256 amount)</span> <span class=\"title\">public</span>\n</span>{\n   <span class=\"comment\">//tokenAddress is the address of the ERC20 token deployed on Ropsten</span>\n    ERC20(tracker_0x_address).transfer(to_address, amount);\n}</code></pre><p>}</p>",
    "sent": "2018-06-18T08:18:01.806Z",
    "fromUser": {
      "id": "598665bed73408ce4f7040a8",
      "username": "ManZerAirBow_twitter",
      "displayName": "prapat polchan",
      "url": "/ManZerAirBow_twitter",
      "avatarUrl": "https://avatars-03.gitter.im/g/u/ManZerAirBow_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
      "v": 4
    },
    "unread": false,
    "readBy": 47,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b276ac34dbdad0d85b43805",
    "text": "this my contract",
    "html": "this my contract",
    "sent": "2018-06-18T08:18:11.554Z",
    "fromUser": {
      "id": "598665bed73408ce4f7040a8",
      "username": "ManZerAirBow_twitter",
      "displayName": "prapat polchan",
      "url": "/ManZerAirBow_twitter",
      "avatarUrl": "https://avatars-03.gitter.im/g/u/ManZerAirBow_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
      "v": 4
    },
    "unread": false,
    "readBy": 48,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b276acdc016730d8666e0cf",
    "text": "why fail on call this function",
    "html": "why fail on call this function",
    "sent": "2018-06-18T08:18:21.331Z",
    "fromUser": {
      "id": "598665bed73408ce4f7040a8",
      "username": "ManZerAirBow_twitter",
      "displayName": "prapat polchan",
      "url": "/ManZerAirBow_twitter",
      "avatarUrl": "https://avatars-03.gitter.im/g/u/ManZerAirBow_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
      "v": 4
    },
    "unread": false,
    "readBy": 48,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b2bfbaf467bd7268c280491",
    "text": "@ManZerAirBow_twitter can you link the whole contract ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"ManZerAirBow_twitter\" class=\"mention\">@ManZerAirBow_twitter</span> can you link the whole contract ",
    "sent": "2018-06-21T19:25:35.663Z",
    "fromUser": {
      "id": "58c5ff2bd73408ce4f502b86",
      "username": "chronaeon",
      "displayName": "Micah Dameron",
      "url": "/chronaeon",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/chronaeon",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=128",
      "v": 39,
      "gv": "4"
    },
    "unread": false,
    "readBy": 45,
    "urls": [],
    "mentions": [
      {
        "screenName": "ManZerAirBow_twitter",
        "userId": "598665bed73408ce4f7040a8",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b2c0aef7d3bca737afef3e1",
    "text": "Hi, I need to write a solidity contract in which i can generate ethereum address and a function flush to send all addresses funds to destination address",
    "html": "Hi, I need to write a solidity contract in which i can generate ethereum address and a function flush to send all addresses funds to destination address",
    "sent": "2018-06-21T20:30:39.447Z",
    "fromUser": {
      "id": "5a85fef8d73408ce4f8d5618",
      "username": "affankhan43",
      "displayName": "Affan Khan",
      "url": "/affankhan43",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/affankhan43",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/25964796?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/25964796?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 45,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b2e964ead21887018d87b6c",
    "text": "Hello everyone. I'm new to the blockchain technology. I wanted to learn the technical and development aspect of it. So how do I start? .  Any sort of help would be appreciated. Thank you.",
    "html": "Hello everyone. I&#39;m new to the blockchain technology. I wanted to learn the technical and development aspect of it. So how do I start? .  Any sort of help would be appreciated. Thank you.",
    "sent": "2018-06-23T18:49:50.516Z",
    "fromUser": {
      "id": "5b2e90a2d73408ce4f9e5dd7",
      "username": "you_know_vishnu_twitter",
      "displayName": "Vishnu",
      "url": "/you_know_vishnu_twitter",
      "avatarUrl": "https://avatars-03.gitter.im/g/u/you_know_vishnu_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/864124097940393984/xInXFhoJ_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/864124097940393984/xInXFhoJ.jpg"
    },
    "unread": false,
    "readBy": 47,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b30ff2ba288503b3ddde942",
    "text": "Hey y’all, I have a smart contract with two public properties. One is an `address` and the other a `uint`. In my web3 front end, I almost always want to get both of these properties at the same time. I’ve implemented a get method in the contract that returns both properteis together, and I’m using this rather than declaring each property public. This makes accessing the data in my frontend easier, and actually requires about 1,000 less gas on deployment. Is there any downside to this approach that I’m missing?",
    "html": "Hey y’all, I have a smart contract with two public properties. One is an <code>address</code> and the other a <code>uint</code>. In my web3 front end, I almost always want to get both of these properties at the same time. I’ve implemented a get method in the contract that returns both properteis together, and I’m using this rather than declaring each property public. This makes accessing the data in my frontend easier, and actually requires about 1,000 less gas on deployment. Is there any downside to this approach that I’m missing?",
    "sent": "2018-06-25T14:41:47.675Z",
    "editedAt": "2018-06-25T14:42:16.099Z",
    "fromUser": {
      "id": "59b2f0eed73408ce4f74f12b",
      "username": "apbendi",
      "displayName": "Ben DiFrancesco",
      "url": "/apbendi",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/apbendi",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1479802?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1479802?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 46,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5b31001c7da8cd7c8c6c3b4a",
    "text": "No issue that I know of.",
    "html": "No issue that I know of.",
    "sent": "2018-06-25T14:45:48.085Z",
    "fromUser": {
      "id": "5948077cd73408ce4f687bf7",
      "username": "amexperts",
      "displayName": "Adam Martin",
      "url": "/amexperts",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/amexperts",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/28491705?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/28491705?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 49,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b3194265862c35f47c8063a",
    "text": "Hi, is it possible to deploy a token first, then deploy a separate contract at a later time for a public  sale of the earlier deployed token?",
    "html": "Hi, is it possible to deploy a token first, then deploy a separate contract at a later time for a public  sale of the earlier deployed token?",
    "sent": "2018-06-26T01:17:26.823Z",
    "fromUser": {
      "id": "569d9a9ae610378809bcfd6d",
      "username": "veryrichard",
      "displayName": "Richard",
      "url": "/veryrichard",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/veryrichard",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16769155?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16769155?v=4&s=128",
      "v": 13,
      "gv": "4"
    },
    "unread": false,
    "readBy": 47,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b33b3e8479ca26689847c23",
    "text": "Hi I'm trying to create a crowdfund type contract whereby someone can create a 'mother' token and then go on to create child tokens that are forever attached to the mother. \n\nI had a little search and came up with the following code:\n\n    import './Child.sol';\n\n    mapping(bytes32 => Child) childList;\n\n    mapping(bytes32 => Child) childList;\n    }\n    \n    function createMotherToken (address producer) public  {\n        producer = msg.sender;\n    }\n    \n     function spawnChild(bytes32 childId) {\n        Child current = new Child();\n        childList[childId] = current;\n    }\n    \n    function callChildFunction(bytes32 childId) {\n    childList[childId].theChildfunction();\n}",
    "html": "<p>Hi I&#39;m trying to create a crowdfund type contract whereby someone can create a &#39;mother&#39; token and then go on to create child tokens that are forever attached to the mother. </p><p>I had a little search and came up with the following code:</p><pre><code><span class=\"keyword\">import</span> <span class=\"string\">'./Child.sol'</span>;\n\nmapping(bytes32 =&gt; Child) childList;\n\nmapping(bytes32 =&gt; Child) childList;\n}\n\n<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createMotherToken</span> <span class=\"params\">(address producer)</span> <span class=\"title\">public</span>  </span>{\n    producer = msg.sender;\n}\n\n <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">spawnChild</span><span class=\"params\">(bytes32 childId)</span> </span>{\n    Child current = <span class=\"keyword\">new</span> Child();\n    childList[childId] = current;\n}\n\n<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">callChildFunction</span><span class=\"params\">(bytes32 childId)</span> </span>{\nchildList[childId].theChildfunction();</code></pre><p>}</p>",
    "sent": "2018-06-27T15:57:28.570Z",
    "fromUser": {
      "id": "5b33b28cd73408ce4f9ed4f4",
      "username": "Bettradingtips_twitter",
      "displayName": "BetfairTradingTips",
      "url": "/Bettradingtips_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/Bettradingtips_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/579760103890505728/-wV-X1eu_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/579760103890505728/-wV-X1eu.jpg"
    },
    "unread": false,
    "readBy": 48,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b33b40a72b31d3691f88bbb",
    "text": "Are there issues with this; and I'm assuming the import would go into my JS file? I am complete noob, so please go easy on me. Thanks for help..",
    "html": "Are there issues with this; and I&#39;m assuming the import would go into my JS file? I am complete noob, so please go easy on me. Thanks for help..",
    "sent": "2018-06-27T15:58:02.664Z",
    "editedAt": "2018-06-27T15:58:46.887Z",
    "fromUser": {
      "id": "5b33b28cd73408ce4f9ed4f4",
      "username": "Bettradingtips_twitter",
      "displayName": "BetfairTradingTips",
      "url": "/Bettradingtips_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/Bettradingtips_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/579760103890505728/-wV-X1eu_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/579760103890505728/-wV-X1eu.jpg"
    },
    "unread": false,
    "readBy": 51,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5b33ca0559799e7017470adb",
    "text": "\nHi,\n\nWe are using https://mainnet.infura.io/ with our Web3.js to listen events from Ethereum\nwe receive almost 90% or events but 10% are never received \n\nCan anyone guide us on this ?\n\nThanks",
    "html": "<p>Hi,</p><p>We are using <a href=\"https://mainnet.infura.io/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://mainnet.infura.io/</a> with our Web3.js to listen events from Ethereum<br>we receive almost 90% or events but 10% are never received </p><p>Can anyone guide us on this ?</p><p>Thanks</p>",
    "sent": "2018-06-27T17:31:49.148Z",
    "fromUser": {
      "id": "59c112e8d73408ce4f766701",
      "username": "VishalWaman",
      "displayName": "Vishal Waman",
      "url": "/VishalWaman",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/VishalWaman",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20675961?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20675961?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 52,
    "urls": [
      {
        "url": "https://mainnet.infura.io/"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b33dac6ad21887018e3b8b3",
    "text": "@apbendi , it's best to [explicitly mark](https://consensys.github.io/smart-contract-best-practices/recommendations/#explicitly-mark-visibility-in-functions-and-state-variables)  the visibility of your functions in callouts and state variables.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"apbendi\" class=\"mention\">@apbendi</span> , it&#39;s best to <a href=\"https://consensys.github.io/smart-contract-best-practices/recommendations/#explicitly-mark-visibility-in-functions-and-state-variables\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">explicitly mark</a>  the visibility of your functions in callouts and state variables.",
    "sent": "2018-06-27T18:43:18.334Z",
    "editedAt": "2018-06-27T18:45:10.123Z",
    "fromUser": {
      "id": "58c5ff2bd73408ce4f502b86",
      "username": "chronaeon",
      "displayName": "Micah Dameron",
      "url": "/chronaeon",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/chronaeon",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=128",
      "v": 39,
      "gv": "4"
    },
    "unread": false,
    "readBy": 54,
    "urls": [
      {
        "url": "https://consensys.github.io/smart-contract-best-practices/recommendations/#explicitly-mark-visibility-in-functions-and-state-variables"
      }
    ],
    "mentions": [
      {
        "screenName": "apbendi",
        "userId": "59b2f0eed73408ce4f74f12b",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 5
  },
  {
    "id": "5b33db5f7da8cd7c8c731dca",
    "text": "@VishalWaman did you try the Infura gitter channel?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"VishalWaman\" class=\"mention\">@VishalWaman</span> did you try the Infura gitter channel?",
    "sent": "2018-06-27T18:45:51.988Z",
    "fromUser": {
      "id": "58c5ff2bd73408ce4f502b86",
      "username": "chronaeon",
      "displayName": "Micah Dameron",
      "url": "/chronaeon",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/chronaeon",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=128",
      "v": 39,
      "gv": "4"
    },
    "unread": false,
    "readBy": 55,
    "urls": [],
    "mentions": [
      {
        "screenName": "VishalWaman",
        "userId": "59c112e8d73408ce4f766701",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b33dc0e479ca2668984f093",
    "text": "Thanks @chronaeon , here’s my very simple contract. Note I have a public method for returning all contract state, as opposed to marking each property as public. Do you see a downside to this: https://github.com/apbendi/hodl_wallet/blob/master/contracts/HodlWallet.sol#L20",
    "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"chronaeon\" class=\"mention\">@chronaeon</span> , here’s my very simple contract. Note I have a public method for returning all contract state, as opposed to marking each property as public. Do you see a downside to this: <a href=\"https://github.com/apbendi/hodl_wallet/blob/master/contracts/HodlWallet.sol#L20\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/apbendi/hodl_wallet/blob/master/contracts/HodlWallet.sol#L20</a>",
    "sent": "2018-06-27T18:48:46.012Z",
    "fromUser": {
      "id": "59b2f0eed73408ce4f74f12b",
      "username": "apbendi",
      "displayName": "Ben DiFrancesco",
      "url": "/apbendi",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/apbendi",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1479802?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1479802?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 56,
    "urls": [
      {
        "url": "https://github.com/apbendi/hodl_wallet/blob/master/contracts/HodlWallet.sol#L20"
      }
    ],
    "mentions": [
      {
        "screenName": "chronaeon",
        "userId": "58c5ff2bd73408ce4f502b86",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b34d5c030be1e04c329751c",
    "text": "@apbendi security wise, no downside. Possible downside is interoperability, ie. if other contracts want to get one or two values, they'll pay a bit more gas and have to handle the 4 return values.  Cost of making all those values public is just a bit more bytecode to deploy. ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"apbendi\" class=\"mention\">@apbendi</span> security wise, no downside. Possible downside is interoperability, ie. if other contracts want to get one or two values, they&#39;ll pay a bit more gas and have to handle the 4 return values.  Cost of making all those values public is just a bit more bytecode to deploy. ",
    "sent": "2018-06-28T12:34:08.659Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 56,
    "urls": [],
    "mentions": [
      {
        "screenName": "apbendi",
        "userId": "59b2f0eed73408ce4f74f12b",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b34dc665862c35f47cfb483",
    "text": "Thanks @maurelian, these all make sense. Just wanted to make sure I wasn’t missing anything else :)",
    "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span>, these all make sense. Just wanted to make sure I wasn’t missing anything else :)",
    "sent": "2018-06-28T13:02:30.850Z",
    "fromUser": {
      "id": "59b2f0eed73408ce4f74f12b",
      "username": "apbendi",
      "displayName": "Ben DiFrancesco",
      "url": "/apbendi",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/apbendi",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1479802?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1479802?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 55,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b34f728ad21887018e6240d",
    "text": "Hello, I have a smart contract and when trying to initialize it in a website, the address' for the token and token sale wont initialize, I am a newbie so any help will be appreciated! ( solidity, web3js )",
    "html": "Hello, I have a smart contract and when trying to initialize it in a website, the address&#39; for the token and token sale wont initialize, I am a newbie so any help will be appreciated! ( solidity, web3js )",
    "sent": "2018-06-28T14:56:40.127Z",
    "fromUser": {
      "id": "5b34ef75d73408ce4f9ef4f1",
      "username": "ilbhaicnl",
      "displayName": "ilbhaicnl",
      "url": "/ilbhaicnl",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/ilbhaicnl",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/40665736?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/40665736?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 57,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b35c76dbe98b1422412942c",
    "text": "hi, I got this error message when I tried to truffle migrate my contracts to ropsten today",
    "html": "hi, I got this error message when I tried to truffle migrate my contracts to ropsten today",
    "sent": "2018-06-29T05:45:17.448Z",
    "fromUser": {
      "id": "57b2b1ff40f3a6eec05fae38",
      "username": "lamlephamngoc",
      "displayName": "lamle",
      "url": "/lamlephamngoc",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/lamlephamngoc",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1503168?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1503168?v=4&s=128",
      "v": 8,
      "gv": "4"
    },
    "unread": false,
    "readBy": 58,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b35c76d960fcd4eb92ccd74",
    "text": "```Error encountered, bailing. Network state unknown. Review successful transactions manually.\nexceeds block gas limit```",
    "html": "<code>Error encountered, bailing. Network state unknown. Review successful transactions manually.\nexceeds block gas limit</code>",
    "sent": "2018-06-29T05:45:17.872Z",
    "editedAt": "2018-06-29T05:45:20.808Z",
    "fromUser": {
      "id": "57b2b1ff40f3a6eec05fae38",
      "username": "lamlephamngoc",
      "displayName": "lamle",
      "url": "/lamlephamngoc",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/lamlephamngoc",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1503168?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1503168?v=4&s=128",
      "v": 8,
      "gv": "4"
    },
    "unread": false,
    "readBy": 58,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5b35c7817d3bca737a13801a",
    "text": "anyone got this message ?",
    "html": "anyone got this message ?",
    "sent": "2018-06-29T05:45:37.697Z",
    "fromUser": {
      "id": "57b2b1ff40f3a6eec05fae38",
      "username": "lamlephamngoc",
      "displayName": "lamle",
      "url": "/lamlephamngoc",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/lamlephamngoc",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1503168?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1503168?v=4&s=128",
      "v": 8,
      "gv": "4"
    },
    "unread": false,
    "readBy": 60,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b35c7940168e70c08f90745",
    "text": "I deployed successful few days ago",
    "html": "I deployed successful few days ago",
    "sent": "2018-06-29T05:45:56.101Z",
    "fromUser": {
      "id": "57b2b1ff40f3a6eec05fae38",
      "username": "lamlephamngoc",
      "displayName": "lamle",
      "url": "/lamlephamngoc",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/lamlephamngoc",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1503168?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1503168?v=4&s=128",
      "v": 8,
      "gv": "4"
    },
    "unread": false,
    "readBy": 60,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b35c804a288503b3de8d0f6",
    "text": "sorry for asking this question here, but I don't know where to ask such as this question :(",
    "html": "sorry for asking this question here, but I don&#39;t know where to ask such as this question :(",
    "sent": "2018-06-29T05:47:48.330Z",
    "fromUser": {
      "id": "57b2b1ff40f3a6eec05fae38",
      "username": "lamlephamngoc",
      "displayName": "lamle",
      "url": "/lamlephamngoc",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/lamlephamngoc",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1503168?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1503168?v=4&s=128",
      "v": 8,
      "gv": "4"
    },
    "unread": false,
    "readBy": 61,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b35c8ec479ca266898910d7",
    "text": "it seem to work now :( sorry everybody here",
    "html": "it seem to work now :( sorry everybody here",
    "sent": "2018-06-29T05:51:40.843Z",
    "fromUser": {
      "id": "57b2b1ff40f3a6eec05fae38",
      "username": "lamlephamngoc",
      "displayName": "lamle",
      "url": "/lamlephamngoc",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/lamlephamngoc",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1503168?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1503168?v=4&s=128",
      "v": 8,
      "gv": "4"
    },
    "unread": false,
    "readBy": 61,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b35cbf472b31d3691fd2f9f",
    "text": "Hello.. m facing a problem.  When i try to compile Webpack using truffle it says :- Error couldn't find the module 'babley-register' .. please help",
    "html": "Hello.. m facing a problem.  When i try to compile Webpack using truffle it says :- Error couldn&#39;t find the module &#39;babley-register&#39; .. please help",
    "sent": "2018-06-29T06:04:36.237Z",
    "fromUser": {
      "id": "5b338979d73408ce4f9ecb9e",
      "username": "MayureshKhalane_twitter",
      "displayName": "Mayuresh Khalane",
      "url": "/MayureshKhalane_twitter",
      "avatarUrl": "https://avatars-03.gitter.im/g/u/MayureshKhalane_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/569536180136730624/Fpd5g0gD_bigger.jpeg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/569536180136730624/Fpd5g0gD.jpeg"
    },
    "unread": false,
    "readBy": 61,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b38c72603235c461fa3b993",
    "text": "People, there is a truffle chat room: https://gitter.im/ConsenSys/truffle",
    "html": "People, there is a truffle chat room: <a href=\"https://gitter.im/ConsenSys/truffle\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gitter.im/ConsenSys/truffle</a>",
    "sent": "2018-07-01T12:20:54.920Z",
    "editedAt": "2018-07-01T12:21:13.503Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 58,
    "urls": [
      {
        "url": "https://gitter.im/ConsenSys/truffle"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5b3a1a0ef166440661128a5e",
    "text": "+1",
    "html": "+1",
    "sent": "2018-07-02T12:26:54.761Z",
    "fromUser": {
      "id": "58c5ff2bd73408ce4f502b86",
      "username": "chronaeon",
      "displayName": "Micah Dameron",
      "url": "/chronaeon",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/chronaeon",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20974007?v=4&s=128",
      "v": 39,
      "gv": "4"
    },
    "unread": false,
    "readBy": 58,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b3b103e70efc60660a83fb9",
    "text": "Hi All\nis there any concept where we can use any  database (like mysql or postgress )with smart contract  or blockchain?\nif yes how can I implement it ?",
    "html": "Hi All<br>is there any concept where we can use any  database (like mysql or postgress )with smart contract  or blockchain?<br>if yes how can I implement it ?",
    "sent": "2018-07-03T05:57:18.950Z",
    "fromUser": {
      "id": "5ae07fe8d73408ce4f970861",
      "username": "adhikarideepak",
      "displayName": "adhikarideepak",
      "url": "/adhikarideepak",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/adhikarideepak",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/37994552?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/37994552?v=4&s=128",
      "v": 25,
      "gv": "4"
    },
    "unread": false,
    "readBy": 57,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b3b1051e534eb69a5c32f51",
    "text": "please share your views",
    "html": "please share your views",
    "sent": "2018-07-03T05:57:37.565Z",
    "fromUser": {
      "id": "5ae07fe8d73408ce4f970861",
      "username": "adhikarideepak",
      "displayName": "adhikarideepak",
      "url": "/adhikarideepak",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/adhikarideepak",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/37994552?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/37994552?v=4&s=128",
      "v": 25,
      "gv": "4"
    },
    "unread": false,
    "readBy": 57,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b3b105d7b811a6d63caac72",
    "text": "Thanks",
    "html": "Thanks",
    "sent": "2018-07-03T05:57:49.247Z",
    "fromUser": {
      "id": "5ae07fe8d73408ce4f970861",
      "username": "adhikarideepak",
      "displayName": "adhikarideepak",
      "url": "/adhikarideepak",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/adhikarideepak",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/37994552?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/37994552?v=4&s=128",
      "v": 25,
      "gv": "4"
    },
    "unread": false,
    "readBy": 56,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b3bb2a89b82c6701b9f6035",
    "text": "Does anybody have some insight about the question asked here: https://ethereum.stackexchange.com/questions/52258/what-are-good-specific-reasons-the-onerc721received-function-returns-a-magic-val",
    "html": "Does anybody have some insight about the question asked here: <a href=\"https://ethereum.stackexchange.com/questions/52258/what-are-good-specific-reasons-the-onerc721received-function-returns-a-magic-val\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://ethereum.stackexchange.com/questions/52258/what-are-good-specific-reasons-the-onerc721received-function-returns-a-magic-val</a>",
    "sent": "2018-07-03T17:30:16.874Z",
    "fromUser": {
      "id": "5a636c5ed73408ce4f8945ba",
      "username": "mudgen_twitter",
      "displayName": "Nick Mudge",
      "url": "/mudgen_twitter",
      "avatarUrl": "https://avatars-01.gitter.im/g/u/mudgen_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/796795603749474304/ET0GfYGG_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/796795603749474304/ET0GfYGG.jpg"
    },
    "unread": false,
    "readBy": 56,
    "urls": [
      {
        "url": "https://ethereum.stackexchange.com/questions/52258/what-are-good-specific-reasons-the-onerc721received-function-returns-a-magic-val"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b42ebde63042f2df36185c7",
    "text": "Does anybody know how to resolve the url not parseableFile.sol error in remix? Am trying to create a child file and remix won't compile, am totally stuck.",
    "html": "Does anybody know how to resolve the url not parseableFile.sol error in remix? Am trying to create a child file and remix won&#39;t compile, am totally stuck.",
    "sent": "2018-07-09T05:00:14.469Z",
    "fromUser": {
      "id": "5a0ad858d73408ce4f7e869e",
      "username": "cryptogee",
      "displayName": "cryptogee",
      "url": "/cryptogee",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/cryptogee",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30659304?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30659304?v=4&s=128",
      "v": 2,
      "gv": "4"
    },
    "unread": false,
    "readBy": 51,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b42ec267e23133ecb3cc161",
    "text": "@mudgen_twitter Sorry, would love to help but that is way beyond me at the moment.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"mudgen_twitter\" class=\"mention\">@mudgen_twitter</span> Sorry, would love to help but that is way beyond me at the moment.",
    "sent": "2018-07-09T05:01:26.263Z",
    "fromUser": {
      "id": "5a0ad858d73408ce4f7e869e",
      "username": "cryptogee",
      "displayName": "cryptogee",
      "url": "/cryptogee",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/cryptogee",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30659304?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30659304?v=4&s=128",
      "v": 2,
      "gv": "4"
    },
    "unread": false,
    "readBy": 52,
    "urls": [],
    "mentions": [
      {
        "screenName": "mudgen_twitter",
        "userId": "5a636c5ed73408ce4f8945ba",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b45a35333b0282df41210c9",
    "text": "Can somebody help me to create a small app using smart contract with some UI, except pet shop ?\nHelp will be appreciated\nThanks",
    "html": "Can somebody help me to create a small app using smart contract with some UI, except pet shop ?<br>Help will be appreciated<br>Thanks",
    "sent": "2018-07-11T06:27:31.815Z",
    "editedAt": "2018-07-11T06:27:47.865Z",
    "fromUser": {
      "id": "5ae07fe8d73408ce4f970861",
      "username": "adhikarideepak",
      "displayName": "adhikarideepak",
      "url": "/adhikarideepak",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/adhikarideepak",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/37994552?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/37994552?v=4&s=128",
      "v": 25,
      "gv": "4"
    },
    "unread": false,
    "readBy": 49,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5b45b4d1bd92d80782a607e5",
    "text": "Hello everyone,just created a lottery game as smart contract ,can you give me some advice ? see more  http://luckyyou.io",
    "html": "Hello everyone,just created a lottery game as smart contract ,can you give me some advice ? see more  <a href=\"http://luckyyou.io\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://luckyyou.io</a>",
    "sent": "2018-07-11T07:42:09.819Z",
    "fromUser": {
      "id": "5b45b350d73408ce4fa06367",
      "username": "luckyyousc",
      "displayName": "luckyyousc",
      "url": "/luckyyousc",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/luckyyousc",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/40459151?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/40459151?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 50,
    "urls": [
      {
        "url": "http://luckyyou.io"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b48ed1ab5efcd5aeefa5b28",
    "text": "@adhikarideepak depends on your use, with some applications it makes sense to store data with a database & call the required functions from the smart contracts with an API like web3 or ethersjs. But if you are looking to bypass SQL/NoSQL databases check IPFS. Storage in blockchain is still a big issue though. ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"adhikarideepak\" class=\"mention\">@adhikarideepak</span> depends on your use, with some applications it makes sense to store data with a database &amp; call the required functions from the smart contracts with an API like web3 or ethersjs. But if you are looking to bypass SQL/NoSQL databases check IPFS. Storage in blockchain is still a big issue though. ",
    "sent": "2018-07-13T18:19:06.039Z",
    "fromUser": {
      "id": "59e3e989d73408ce4f7a2958",
      "username": "lerajk",
      "displayName": "Lee Raj",
      "url": "/lerajk",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/lerajk",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/22226137?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/22226137?v=4&s=128",
      "v": 12,
      "gv": "4"
    },
    "unread": false,
    "readBy": 49,
    "urls": [],
    "mentions": [
      {
        "screenName": "adhikarideepak",
        "userId": "5ae07fe8d73408ce4f970861",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b4c2f48c02eb83d7c7adc00",
    "text": "Thanks @lerajk , for your this information, I will check IPFS once",
    "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"lerajk\" class=\"mention\">@lerajk</span> , for your this information, I will check IPFS once",
    "sent": "2018-07-16T05:38:16.346Z",
    "fromUser": {
      "id": "5ae07fe8d73408ce4f970861",
      "username": "adhikarideepak",
      "displayName": "adhikarideepak",
      "url": "/adhikarideepak",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/adhikarideepak",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/37994552?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/37994552?v=4&s=128",
      "v": 25,
      "gv": "4"
    },
    "unread": false,
    "readBy": 51,
    "urls": [],
    "mentions": [
      {
        "screenName": "lerajk",
        "userId": "59e3e989d73408ce4f7a2958",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b4dedc303a5fa639e6064df",
    "text": "Anybody know how to create a parent/child function within a contract? Example: Crowdfunding app - Function: createCompany (parent) Function: createToken (child)",
    "html": "Anybody know how to create a parent/child function within a contract? Example: Crowdfunding app - Function: createCompany (parent) Function: createToken (child)",
    "sent": "2018-07-17T13:23:15.180Z",
    "fromUser": {
      "id": "5a0ad858d73408ce4f7e869e",
      "username": "cryptogee",
      "displayName": "cryptogee",
      "url": "/cryptogee",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/cryptogee",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30659304?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30659304?v=4&s=128",
      "v": 2,
      "gv": "4"
    },
    "unread": false,
    "readBy": 51,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b4e2b23d67be274079d4691",
    "text": "@cryptogee I don't know what you mean, but your best bet is probably to read the inheritance section: https://solidity.readthedocs.io/en/latest/contracts.html#inheritance\nthe 'super' keyword might be relevant to you",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"cryptogee\" class=\"mention\">@cryptogee</span> I don&#39;t know what you mean, but your best bet is probably to read the inheritance section: <a href=\"https://solidity.readthedocs.io/en/latest/contracts.html#inheritance\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://solidity.readthedocs.io/en/latest/contracts.html#inheritance</a><br>the &#39;super&#39; keyword might be relevant to you",
    "sent": "2018-07-17T17:45:07.938Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 52,
    "urls": [
      {
        "url": "https://solidity.readthedocs.io/en/latest/contracts.html#inheritance"
      }
    ],
    "mentions": [
      {
        "screenName": "cryptogee",
        "userId": "5a0ad858d73408ce4f7e869e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b56c3c5ee530e4aac9313a0",
    "text": "Hello everyone",
    "html": "Hello everyone",
    "sent": "2018-07-24T06:14:29.911Z",
    "fromUser": {
      "id": "5b4d08f7d73408ce4fa119ae",
      "username": "laxman810_gitlab",
      "displayName": "Laxman Tukadiya",
      "url": "/laxman810_gitlab",
      "avatarUrl": "https://avatars-03.gitter.im/g/u/laxman810_gitlab",
      "avatarUrlSmall": "https://secure.gravatar.com/avatar/22f6b9405d92afe9f3adeb357f4aaea2?s=60&d=identicon",
      "avatarUrlMedium": "https://secure.gravatar.com/avatar/22f6b9405d92afe9f3adeb357f4aaea2?s=128&d=identicon"
    },
    "unread": false,
    "readBy": 50,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b56c3ede06d7e74099af096",
    "text": "can anyone help to get some simple tutorials for smart contract with front-end and database DAPP ?",
    "html": "can anyone help to get some simple tutorials for smart contract with front-end and database DAPP ?",
    "sent": "2018-07-24T06:15:08.998Z",
    "fromUser": {
      "id": "5b4d08f7d73408ce4fa119ae",
      "username": "laxman810_gitlab",
      "displayName": "Laxman Tukadiya",
      "url": "/laxman810_gitlab",
      "avatarUrl": "https://avatars-03.gitter.im/g/u/laxman810_gitlab",
      "avatarUrlSmall": "https://secure.gravatar.com/avatar/22f6b9405d92afe9f3adeb357f4aaea2?s=60&d=identicon",
      "avatarUrlMedium": "https://secure.gravatar.com/avatar/22f6b9405d92afe9f3adeb357f4aaea2?s=128&d=identicon"
    },
    "unread": false,
    "readBy": 50,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b578ced93395d1d96465ca7",
    "text": "What are the state-of-the-art approaches today to understand why a transaction was reverted? ",
    "html": "What are the state-of-the-art approaches today to understand why a transaction was reverted? ",
    "sent": "2018-07-24T20:32:45.267Z",
    "fromUser": {
      "id": "5b44fae1d73408ce4fa05523",
      "username": "Pet3ris",
      "displayName": "Peteris Erins",
      "url": "/Pet3ris",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Pet3ris",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/224585?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/224585?v=4&s=128",
      "v": 2,
      "gv": "4"
    },
    "unread": false,
    "readBy": 48,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b5849234d2e050b4552933d",
    "text": "Need to create a contest app, where many contests will run parallely and there will be N no of players in each contest. There is also joining fee and winning amount for every contest. What is the best to design the contract?",
    "html": "Need to create a contest app, where many contests will run parallely and there will be N no of players in each contest. There is also joining fee and winning amount for every contest. What is the best to design the contract?",
    "sent": "2018-07-25T09:55:47.804Z",
    "fromUser": {
      "id": "59a50893d73408ce4f7361ce",
      "username": "array-addu",
      "displayName": "Anubhav Gupta",
      "url": "/array-addu",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/array-addu",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11625793?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11625793?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 49,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b592163c7b8ab5b57cc4816",
    "text": "@Pet3ris - the truffle debugger is getting there ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"Pet3ris\" class=\"mention\">@Pet3ris</span> - the truffle debugger is getting there ",
    "sent": "2018-07-26T01:18:27.510Z",
    "fromUser": {
      "id": "58d2d065d73408ce4f52e458",
      "username": "mrice",
      "displayName": "Michael Rice",
      "url": "/mrice",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/mrice",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/509386?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/509386?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 47,
    "urls": [],
    "mentions": [
      {
        "screenName": "Pet3ris",
        "userId": "5b44fae1d73408ce4fa05523",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b5ae10307be4357bdf2ce52",
    "text": "Hello. I just wrote a blog post of auditing my own smart contract. Hope this is helpful to the audience here https://medium.com/@makoto_inoue/self-audit-a-new-bug-and-call-for-community-auditing-of-blockparty-e774a8596496",
    "html": "Hello. I just wrote a blog post of auditing my own smart contract. Hope this is helpful to the audience here <a href=\"https://medium.com/@makoto_inoue/self-audit-a-new-bug-and-call-for-community-auditing-of-blockparty-e774a8596496\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://medium.com/@makoto_inoue/self-audit-a-new-bug-and-call-for-community-auditing-of-blockparty-e774a8596496</a>",
    "sent": "2018-07-27T09:08:19.858Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 46,
    "urls": [
      {
        "url": "https://medium.com/@makoto_inoue/self-audit-a-new-bug-and-call-for-community-auditing-of-blockparty-e774a8596496"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b5b13bfc9f21128c1c62bbb",
    "text": "Thanks for sharing @makoto!",
    "html": "Thanks for sharing <span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span>!",
    "sent": "2018-07-27T12:44:47.510Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 48,
    "urls": [],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b5b160c5301255724ccaec7",
    "text": "Hopefully people can learn from my stupid mistakes...",
    "html": "Hopefully people can learn from my stupid mistakes...",
    "sent": "2018-07-27T12:54:36.921Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 46,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b5b16443396495b33411ea5",
    "text": "Thanks",
    "html": "Thanks",
    "sent": "2018-07-27T12:55:32.756Z",
    "fromUser": {
      "id": "5b5afa96d73408ce4fa289ba",
      "username": "lpwlpw",
      "displayName": "lpw",
      "url": "/lpwlpw",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/lpwlpw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3434093?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3434093?v=4&s=128",
      "v": 14,
      "gv": "4"
    },
    "unread": false,
    "readBy": 47,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b5eb36d3e264c71384d2589",
    "text": "\t``` (shift+enter for line break)\n var gas = await commitFunction.EstimateGasAsync(\n                    platformAccount.Address,\n                    new Nethereum.Hex.HexTypes.HexBigInteger(15000),\n                    new HexBigInteger(Nethereum.Util.UnitConversion.Convert.ToWei(0)),\n                    id.HexToByteArray()).ConfigureAwait(false);\n```",
    "html": "<pre><code>``` (<span class=\"built_in\">shift</span>+enter <span class=\"keyword\">for</span> line <span class=\"built_in\">break</span>)</code></pre> var gas = await commitFunction.EstimateGasAsync(<br>                    platformAccount.Address,<br>                    new Nethereum.Hex.HexTypes.HexBigInteger(15000),<br>                    new HexBigInteger(Nethereum.Util.UnitConversion.Convert.ToWei(0)),<br>                    id.HexToByteArray()).ConfigureAwait(false);<br>```",
    "sent": "2018-07-30T06:42:53.582Z",
    "fromUser": {
      "id": "5b5eb1b7d73408ce4fa2caa4",
      "username": "Jimmy987",
      "displayName": "Jimmy987",
      "url": "/Jimmy987",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Jimmy987",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/27672219?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/27672219?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 50,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a9c7d2ec3c5f8b90d324c37",
    "text": "@vidorge thanks for your answer. \nI am referring contract I deployed. after refreshing the tab (remix), I could load the contract I deployed, but couldn’t call any function.\nI am using Injected web3.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"vidorge\" class=\"mention\">@vidorge</span> thanks for your answer.<br>I am referring contract I deployed. after refreshing the tab (remix), I could load the contract I deployed, but couldn’t call any function.<br>I am using Injected web3.",
    "sent": "2018-03-04T23:11:42.567Z",
    "fromUser": {
      "id": "5a7178b8d73408ce4f8af93e",
      "username": "AntonCorbijn",
      "displayName": "Anton",
      "url": "/AntonCorbijn",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AntonCorbijn",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/32306632?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/32306632?v=4&s=128",
      "v": 2,
      "gv": "4"
    },
    "unread": false,
    "readBy": 41,
    "urls": [],
    "mentions": [
      {
        "screenName": "vidorge",
        "userId": "5a32b6bed73408ce4f83598c",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a9c7d70e4d1c63604c066dc",
    "text": "I was expected to call functions as the contract was I deployed, so owner was me.",
    "html": "I was expected to call functions as the contract was I deployed, so owner was me.",
    "sent": "2018-03-04T23:12:48.649Z",
    "fromUser": {
      "id": "5a7178b8d73408ce4f8af93e",
      "username": "AntonCorbijn",
      "displayName": "Anton",
      "url": "/AntonCorbijn",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AntonCorbijn",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/32306632?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/32306632?v=4&s=128",
      "v": 2,
      "gv": "4"
    },
    "unread": false,
    "readBy": 43,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a9c7f7ef3f6d24c683849a2",
    "text": "how can I call functions of contract I already deployed on remix?",
    "html": "how can I call functions of contract I already deployed on remix?",
    "sent": "2018-03-04T23:21:34.784Z",
    "fromUser": {
      "id": "5a7178b8d73408ce4f8af93e",
      "username": "AntonCorbijn",
      "displayName": "Anton",
      "url": "/AntonCorbijn",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AntonCorbijn",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/32306632?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/32306632?v=4&s=128",
      "v": 2,
      "gv": "4"
    },
    "unread": false,
    "readBy": 43,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a9c7f938f1c77ef3a81b05a",
    "text": "is this a problem with web3 instance?",
    "html": "is this a problem with web3 instance?",
    "sent": "2018-03-04T23:21:55.882Z",
    "fromUser": {
      "id": "5a7178b8d73408ce4f8af93e",
      "username": "AntonCorbijn",
      "displayName": "Anton",
      "url": "/AntonCorbijn",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AntonCorbijn",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/32306632?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/32306632?v=4&s=128",
      "v": 2,
      "gv": "4"
    },
    "unread": false,
    "readBy": 45,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a9d4c10e4d1c63604c4168c",
    "text": "@foogunlana  Alright, state is reinitialized between tests, you have nothing to do :) I completed the SO thread (https://ethereum.stackexchange.com/questions/29250/truffle-tests-not-resetting-account-states#answer-41754).  And the answer was simply http://truffleframework.com/docs/getting_started/testing#clean-room-environment",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"foogunlana\" class=\"mention\">@foogunlana</span>  Alright, state is reinitialized between tests, you have nothing to do :) I completed the SO thread (<a href=\"https://ethereum.stackexchange.com/questions/29250/truffle-tests-not-resetting-account-states#answer-41754)\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://ethereum.stackexchange.com/questions/29250/truffle-tests-not-resetting-account-states#answer-41754)</a>.  And the answer was simply <a href=\"http://truffleframework.com/docs/getting_started/testing#clean-room-environment\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://truffleframework.com/docs/getting_started/testing#clean-room-environment</a>",
    "sent": "2018-03-05T13:54:24.191Z",
    "fromUser": {
      "id": "543b8139db8155e6700cafa2",
      "username": "phbernard",
      "displayName": "Philippe Bernard",
      "url": "/phbernard",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/phbernard",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/423852?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/423852?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 44,
    "urls": [
      {
        "url": "https://ethereum.stackexchange.com/questions/29250/truffle-tests-not-resetting-account-states#answer-41754)"
      },
      {
        "url": "http://truffleframework.com/docs/getting_started/testing#clean-room-environment"
      }
    ],
    "mentions": [
      {
        "screenName": "foogunlana",
        "userId": "5a4e6586d73408ce4f86204f",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a9e46236fba1a703ad300cb",
    "text": " 👍🏾🙂",
    "html": " 👍🏾🙂",
    "sent": "2018-03-06T07:41:23.754Z",
    "fromUser": {
      "id": "5a4e6586d73408ce4f86204f",
      "username": "foogunlana",
      "displayName": "Foluso",
      "url": "/foogunlana",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/foogunlana",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5675998?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5675998?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 48,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a9f2a6e53c1dbb743b0f0e3",
    "text": "@AntonCorbijn did you load the contract on the run tab and do you see all the functions displayed before? You should be able to input the parameters and call the function with metamask",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"AntonCorbijn\" class=\"mention\">@AntonCorbijn</span> did you load the contract on the run tab and do you see all the functions displayed before? You should be able to input the parameters and call the function with metamask",
    "sent": "2018-03-06T23:55:26.411Z",
    "fromUser": {
      "id": "53b4f6d6107e137846ba5647",
      "username": "trigun0x2",
      "displayName": "Jeffrey Tong",
      "url": "/trigun0x2",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/trigun0x2",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3936336?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3936336?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 50,
    "urls": [],
    "mentions": [
      {
        "screenName": "AntonCorbijn",
        "userId": "5a7178b8d73408ce4f8af93e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a9f7fdf458cbde5570537d9",
    "text": "@charry1729\npragma solidity ^0.4.6;\n\ncontract UserCrud {\n\n  struct UserStruct {\n    bytes32 userEmail;\n    uint userAge;\n    uint index;\n    bytes32 hash1;\n  }\n  \n  mapping(bytes32 => UserStruct) private userStructs;\n  address[] private userIndex;\n  bytes32 public genhash;\n  \n  function insertUser(address userAddress,bytes32 userEmail, uint userAge) public\n    returns(uint index)\n  {\n    genhash = keccak256(userEmail,userAge);\n    userStructs[genhash].userEmail = userEmail;\n    userStructs[genhash].userAge   = userAge;\n    userStructs[genhash].index     = userIndex.push(userAddress)-1;\n    userStructs[genhash].hash1     = genhash;\n    return userIndex.length-1;\n  }\n  \n  function getUser(bytes32 _hash1) public constant returns(bytes32 userEmail, uint userAge, uint index,bytes32 hash1)\n  {\n    return(\n      userStructs[_hash1].userEmail, \n      userStructs[_hash1].userAge, \n      userStructs[_hash1].index,\n      userStructs[_hash1].hash1);\n  } \n}\nthis above code works in remix but not in geth\ni am able to retrive data with hash in remix .. but in geth console it gives null",
    "html": "<p><span data-link-type=\"mention\" data-screen-name=\"charry1729\" class=\"mention\">@charry1729</span><br>pragma solidity ^0.4.6;</p><p>contract UserCrud {</p><p>  struct UserStruct {<br>    bytes32 userEmail;<br>    uint userAge;<br>    uint index;<br>    bytes32 hash1;<br>  }</p><p>  mapping(bytes32 =&gt; UserStruct) private userStructs;<br>  address[] private userIndex;<br>  bytes32 public genhash;</p><p>  function insertUser(address userAddress,bytes32 userEmail, uint userAge) public<br>    returns(uint index)<br>  {<br>    genhash = keccak256(userEmail,userAge);<br>    userStructs[genhash].userEmail = userEmail;<br>    userStructs[genhash].userAge   = userAge;<br>    userStructs[genhash].index     = userIndex.push(userAddress)-1;<br>    userStructs[genhash].hash1     = genhash;<br>    return userIndex.length-1;<br>  }</p><p>  function getUser(bytes32 _hash1) public constant returns(bytes32 userEmail, uint userAge, uint index,bytes32 hash1)<br>  {<br>    return(<br>      userStructs[_hash1].userEmail,<br>      userStructs[_hash1].userAge,<br>      userStructs[_hash1].index,<br>      userStructs[_hash1].hash1);<br>  }<br>}<br>this above code works in remix but not in geth<br>i am able to retrive data with hash in remix .. but in geth console it gives null</p>",
    "sent": "2018-03-07T05:59:59.747Z",
    "fromUser": {
      "id": "58f5d25ad73408ce4f5925be",
      "username": "charry1729",
      "displayName": "charry1729",
      "url": "/charry1729",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/charry1729",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/17219849?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/17219849?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 51,
    "urls": [],
    "mentions": [
      {
        "screenName": "charry1729",
        "userId": "58f5d25ad73408ce4f5925be",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5aab20ae6f8b4b994630ef9e",
    "text": "@charry1729 you should paste code in console ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"charry1729\" class=\"mention\">@charry1729</span> you should paste code in console ",
    "sent": "2018-03-16T01:41:02.150Z",
    "fromUser": {
      "id": "5aa8ca02d73408ce4f914a98",
      "username": "bluemoon2014",
      "displayName": "bluemoon2014",
      "url": "/bluemoon2014",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/bluemoon2014",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/19643482?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/19643482?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 53,
    "urls": [],
    "mentions": [
      {
        "screenName": "charry1729",
        "userId": "58f5d25ad73408ce4f5925be",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ab4ea44e3d0b1ff2c5c23d0",
    "text": "Is there any other \"smart contract\" crypto ledger that is actually executing code on the block chain nodes like Ethereum? Stellar has \"programmable contracts\" but it doesn't actually run the code on the system nodes, it only stores the results of the computation. Curious if Ethereum has any competition in the \"blockchain distributed smart contract execution\" or not.",
    "html": "Is there any other &quot;smart contract&quot; crypto ledger that is actually executing code on the block chain nodes like Ethereum? Stellar has &quot;programmable contracts&quot; but it doesn&#39;t actually run the code on the system nodes, it only stores the results of the computation. Curious if Ethereum has any competition in the &quot;blockchain distributed smart contract execution&quot; or not.",
    "sent": "2018-03-23T11:51:32.987Z",
    "fromUser": {
      "id": "54f741ed15522ed4b3dcccb2",
      "username": "scherrey",
      "displayName": "Ben Scherrey",
      "url": "/scherrey",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/scherrey",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/878591?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/878591?v=4&s=128",
      "v": 19,
      "gv": "4"
    },
    "unread": false,
    "readBy": 38,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ab4eb03e4ff28713a66007b",
    "text": "@scherrey you can look at Cardano",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"scherrey\" class=\"mention\">@scherrey</span> you can look at Cardano",
    "sent": "2018-03-23T11:54:43.568Z",
    "fromUser": {
      "id": "543b8139db8155e6700cafa2",
      "username": "phbernard",
      "displayName": "Philippe Bernard",
      "url": "/phbernard",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/phbernard",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/423852?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/423852?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 39,
    "urls": [],
    "mentions": [
      {
        "screenName": "scherrey",
        "userId": "54f741ed15522ed4b3dcccb2",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ab4ebf235dd17022e909957",
    "text": "@phbernard I know they're working towards something like that but do they have something working now?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"phbernard\" class=\"mention\">@phbernard</span> I know they&#39;re working towards something like that but do they have something working now?",
    "sent": "2018-03-23T11:58:42.069Z",
    "fromUser": {
      "id": "54f741ed15522ed4b3dcccb2",
      "username": "scherrey",
      "displayName": "Ben Scherrey",
      "url": "/scherrey",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/scherrey",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/878591?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/878591?v=4&s=128",
      "v": 19,
      "gv": "4"
    },
    "unread": false,
    "readBy": 39,
    "urls": [],
    "mentions": [
      {
        "screenName": "phbernard",
        "userId": "543b8139db8155e6700cafa2",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ab4eca9c574b1aa3e240542",
    "text": "To my knowledge, you cannot write SC for Cardano yet. This is expected in Q2.",
    "html": "To my knowledge, you cannot write SC for Cardano yet. This is expected in Q2.",
    "sent": "2018-03-23T12:01:45.754Z",
    "fromUser": {
      "id": "543b8139db8155e6700cafa2",
      "username": "phbernard",
      "displayName": "Philippe Bernard",
      "url": "/phbernard",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/phbernard",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/423852?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/423852?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 39,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ab77f3be4ff28713a6fdb02",
    "text": "hy every one i need some help for smart contract can some one help me?",
    "html": "hy every one i need some help for smart contract can some one help me?",
    "sent": "2018-03-25T10:51:39.720Z",
    "fromUser": {
      "id": "58a33a57d73408ce4f4a56f0",
      "username": "aquddos",
      "displayName": "AbdulQuddos",
      "url": "/aquddos",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/aquddos",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/25729591?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/25729591?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 42,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ab7a36735dd17022e9abbcd",
    "text": "What do you need @aquddos ?",
    "html": "What do you need <span data-link-type=\"mention\" data-screen-name=\"aquddos\" class=\"mention\">@aquddos</span> ?",
    "sent": "2018-03-25T13:25:59.436Z",
    "fromUser": {
      "id": "5a4e6586d73408ce4f86204f",
      "username": "foogunlana",
      "displayName": "Foluso",
      "url": "/foogunlana",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/foogunlana",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5675998?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5675998?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 41,
    "urls": [],
    "mentions": [
      {
        "screenName": "aquddos",
        "userId": "58a33a57d73408ce4f4a56f0",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ab7e682f3f6d24c68b49c23",
    "text": "@foogunlana Thanks to reply ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"foogunlana\" class=\"mention\">@foogunlana</span> Thanks to reply ",
    "sent": "2018-03-25T18:12:18.202Z",
    "fromUser": {
      "id": "58a33a57d73408ce4f4a56f0",
      "username": "aquddos",
      "displayName": "AbdulQuddos",
      "url": "/aquddos",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/aquddos",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/25729591?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/25729591?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 39,
    "urls": [],
    "mentions": [
      {
        "screenName": "foogunlana",
        "userId": "5a4e6586d73408ce4f86204f",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ab7e6d935dd17022e9bcf4b",
    "text": "i wnat to know how many Eth ihave to creat token basis on my balnce or with out bla i can make token ?",
    "html": "i wnat to know how many Eth ihave to creat token basis on my balnce or with out bla i can make token ?",
    "sent": "2018-03-25T18:13:45.359Z",
    "fromUser": {
      "id": "58a33a57d73408ce4f4a56f0",
      "username": "aquddos",
      "displayName": "AbdulQuddos",
      "url": "/aquddos",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/aquddos",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/25729591?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/25729591?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 39,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ab8747d5f188ccc15f7b4d0",
    "text": "you'll want to look for intro solidity programming resources. I recommend the official docs, followed by CryptoZombies and The \"Smart Contract Best Practices\" repo on github",
    "html": "you&#39;ll want to look for intro solidity programming resources. I recommend the official docs, followed by CryptoZombies and The &quot;Smart Contract Best Practices&quot; repo on github",
    "sent": "2018-03-26T04:18:05.877Z",
    "fromUser": {
      "id": "54830a6edb8155e6700dc42f",
      "username": "shrugs",
      "displayName": "Matt Condon",
      "url": "/shrugs",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/shrugs",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1535001?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1535001?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 37,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ab8c19fe4ff28713a74c6c3",
    "text": "@aquddos There is also a good tutorial on the Ethereum website https://ethereum.org/token. Here's the official solidity docs http://solidity.readthedocs.io/en/v0.4.21/ and the best practices documentation site https://consensys.github.io/smart-contract-best-practices/",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"aquddos\" class=\"mention\">@aquddos</span> There is also a good tutorial on the Ethereum website <a href=\"https://ethereum.org/token\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://ethereum.org/token</a>. Here&#39;s the official solidity docs <a href=\"http://solidity.readthedocs.io/en/v0.4.21/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://solidity.readthedocs.io/en/v0.4.21/</a> and the best practices documentation site <a href=\"https://consensys.github.io/smart-contract-best-practices/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://consensys.github.io/smart-contract-best-practices/</a>",
    "sent": "2018-03-26T09:47:11.062Z",
    "editedAt": "2018-03-26T09:47:29.962Z",
    "fromUser": {
      "id": "5a4e6586d73408ce4f86204f",
      "username": "foogunlana",
      "displayName": "Foluso",
      "url": "/foogunlana",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/foogunlana",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5675998?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5675998?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 38,
    "urls": [
      {
        "url": "https://ethereum.org/token"
      },
      {
        "url": "http://solidity.readthedocs.io/en/v0.4.21/"
      },
      {
        "url": "https://consensys.github.io/smart-contract-best-practices/"
      }
    ],
    "mentions": [
      {
        "screenName": "aquddos",
        "userId": "58a33a57d73408ce4f4a56f0",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5abaca375f188ccc1503358d",
    "text": "Hi All, While hosting an DAPP in IPFS ,  the\" deployed \" method to access contract functions is not working, But it works fine in localhost.",
    "html": "Hi All, While hosting an DAPP in IPFS ,  the&quot; deployed &quot; method to access contract functions is not working, But it works fine in localhost.",
    "sent": "2018-03-27T22:48:23.710Z",
    "fromUser": {
      "id": "5abac94fd73408ce4f936717",
      "username": "harish-narayanasamy",
      "displayName": "Harish Narayanasamy",
      "url": "/harish-narayanasamy",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/harish-narayanasamy",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/30654951?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/30654951?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 41,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5abacbbd7c3a01610d7fa70d",
    "text": "1)  \"App.contracts.mycontract.deployed().then(function (instance) {\"",
    "html": "1)  &quot;App.contracts.mycontract.deployed().then(function (instance) {&quot;",
    "sent": "2018-03-27T22:54:53.224Z",
    "fromUser": {
      "id": "5abac94fd73408ce4f936717",
      "username": "harish-narayanasamy",
      "displayName": "Harish Narayanasamy",
      "url": "/harish-narayanasamy",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/harish-narayanasamy",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/30654951?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/30654951?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 41,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5abacc2ac4d0ae80070ab203",
    "text": "the above function can't able to access the json file in build folder.",
    "html": "the above function can&#39;t able to access the json file in build folder.",
    "sent": "2018-03-27T22:56:42.182Z",
    "fromUser": {
      "id": "5abac94fd73408ce4f936717",
      "username": "harish-narayanasamy",
      "displayName": "Harish Narayanasamy",
      "url": "/harish-narayanasamy",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/harish-narayanasamy",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/30654951?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/30654951?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 41,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5abbea81458cbde557873d91",
    "text": "@harish-narayanasamy truffle might be able to help you. ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"harish-narayanasamy\" class=\"mention\">@harish-narayanasamy</span> truffle might be able to help you. ",
    "sent": "2018-03-28T19:18:25.557Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 41,
    "urls": [],
    "mentions": [
      {
        "screenName": "harish-narayanasamy",
        "userId": "5abac94fd73408ce4f936717",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ac25a915f188ccc15219edc",
    "text": "hi, I 'm evaluating state channel implementations to possibly use it in my smart contract for use cases where there are a lot of buyer/seller interactions that don't necessarily have to be captured on the main ethreum blockchain and gas can be saved by using state channels. I 'm new to the idea of state channels and first heard about it via lightning on bitcoin. I don't yet understand exactly how these state channels save on gas costs. If anyone has info on this or point to docs that explain how gas costs are lowered by use of state channels I 'd appreciate that. It is possible this info is somewhere in the docs for these two implementations I 'm looking at but I missed. https://github.com/ConnextProject/ethcalate-2waypayment\nhttps://github.com/nginnever/general-state-channels",
    "html": "hi, I &#39;m evaluating state channel implementations to possibly use it in my smart contract for use cases where there are a lot of buyer/seller interactions that don&#39;t necessarily have to be captured on the main ethreum blockchain and gas can be saved by using state channels. I &#39;m new to the idea of state channels and first heard about it via lightning on bitcoin. I don&#39;t yet understand exactly how these state channels save on gas costs. If anyone has info on this or point to docs that explain how gas costs are lowered by use of state channels I &#39;d appreciate that. It is possible this info is somewhere in the docs for these two implementations I &#39;m looking at but I missed. <a href=\"https://github.com/ConnextProject/ethcalate-2waypayment\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/ConnextProject/ethcalate-2waypayment</a><br><a href=\"https://github.com/nginnever/general-state-channels\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/nginnever/general-state-channels</a>",
    "sent": "2018-04-02T16:30:09.467Z",
    "fromUser": {
      "id": "57087199187bb6f0eade9427",
      "username": "lakamsani",
      "displayName": "lakamsani",
      "url": "/lakamsani",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/lakamsani",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3322496?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3322496?v=4&s=128",
      "v": 26,
      "gv": "4"
    },
    "unread": false,
    "readBy": 38,
    "urls": [
      {
        "url": "https://github.com/ConnextProject/ethcalate-2waypayment"
      },
      {
        "url": "https://github.com/nginnever/general-state-channels"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ac2ffcee4ff28713a9ff924",
    "text": "What is the best tutorial to build an ERC20 based token contract with OpenZeppelin??",
    "html": "What is the best tutorial to build an ERC20 based token contract with OpenZeppelin??",
    "sent": "2018-04-03T04:15:10.076Z",
    "fromUser": {
      "id": "5a59651dd73408ce4f87f156",
      "username": "z-akira",
      "displayName": "z-akira",
      "url": "/z-akira",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/z-akira",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/35387471?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/35387471?v=4&s=128",
      "v": 18,
      "gv": "4"
    },
    "unread": false,
    "readBy": 40,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ac36b9892f5d620578b8c68",
    "text": "@z-akira https://www.google.com/search?q=tutorial+to+build+an+ERC20+based+token+contract+with+OpenZeppelin",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"z-akira\" class=\"mention\">@z-akira</span> <a href=\"https://www.google.com/search?q=tutorial+to+build+an+ERC20+based+token+contract+with+OpenZeppelin\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.google.com/search?q=tutorial+to+build+an+ERC20+based+token+contract+with+OpenZeppelin</a>",
    "sent": "2018-04-03T11:55:04.073Z",
    "fromUser": {
      "id": "54830a6edb8155e6700dc42f",
      "username": "shrugs",
      "displayName": "Matt Condon",
      "url": "/shrugs",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/shrugs",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1535001?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1535001?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 37,
    "urls": [
      {
        "url": "https://www.google.com/search?q=tutorial+to+build+an+ERC20+based+token+contract+with+OpenZeppelin"
      }
    ],
    "mentions": [
      {
        "screenName": "z-akira",
        "userId": "5a59651dd73408ce4f87f156",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ac36b9f1130fe3d369869c1",
    "text": "but yes, https://blog.zeppelin.solutions/how-to-create-token-and-initial-coin-offering-contracts-using-truffle-openzeppelin-1b7a5dae99b6 is pretty good",
    "html": "but yes, <a href=\"https://blog.zeppelin.solutions/how-to-create-token-and-initial-coin-offering-contracts-using-truffle-openzeppelin-1b7a5dae99b6\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://blog.zeppelin.solutions/how-to-create-token-and-initial-coin-offering-contracts-using-truffle-openzeppelin-1b7a5dae99b6</a> is pretty good",
    "sent": "2018-04-03T11:55:11.811Z",
    "fromUser": {
      "id": "54830a6edb8155e6700dc42f",
      "username": "shrugs",
      "displayName": "Matt Condon",
      "url": "/shrugs",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/shrugs",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1535001?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1535001?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 38,
    "urls": [
      {
        "url": "https://blog.zeppelin.solutions/how-to-create-token-and-initial-coin-offering-contracts-using-truffle-openzeppelin-1b7a5dae99b6"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ac39486270d7d37088b1502",
    "text": "https://github.com/ConsenSys/smart-contract-best-practices/pull/144 is pending for a while now",
    "html": "<span data-link-type=\"issue\" data-issue=\"144\" data-issue-repo=\"ConsenSys/smart-contract-best-practices\" class=\"issue\">ConsenSys/smart-contract-best-practices#144</span> is pending for a while now",
    "sent": "2018-04-03T14:49:42.099Z",
    "fromUser": {
      "id": "567e514616b6c7089cc0337b",
      "username": "MichalZalecki",
      "displayName": "Michał Załęcki",
      "url": "/MichalZalecki",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/MichalZalecki",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3136577?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3136577?v=4&s=128",
      "v": 12,
      "gv": "4"
    },
    "unread": false,
    "readBy": 40,
    "urls": [],
    "mentions": [],
    "issues": [
      {
        "repo": "ConsenSys/smart-contract-best-practices",
        "number": "144"
      }
    ],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ac42ed592f5d620578f5376",
    "text": "Got it, thanks @MichalZalecki!",
    "html": "Got it, thanks <span data-link-type=\"mention\" data-screen-name=\"MichalZalecki\" class=\"mention\">@MichalZalecki</span>!",
    "sent": "2018-04-04T01:48:05.354Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 36,
    "urls": [],
    "mentions": [
      {
        "screenName": "MichalZalecki",
        "userId": "567e514616b6c7089cc0337b",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5aca3b152b9dfdbc3a6b1b69",
    "text": "i wanna read the go-ethereum code , can someone help me out regarding what is the best way to approach it",
    "html": "i wanna read the go-ethereum code , can someone help me out regarding what is the best way to approach it",
    "sent": "2018-04-08T15:53:57.939Z",
    "fromUser": {
      "id": "57feeb24d73408ce4f2dd9ac",
      "username": "vaibhavchellani",
      "displayName": "Vaibhav Chellani",
      "url": "/vaibhavchellani",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/vaibhavchellani",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/19390504?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/19390504?v=4&s=128",
      "v": 25,
      "gv": "4"
    },
    "unread": false,
    "readBy": 36,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5aca3bed92f5d62057a7b87d",
    "text": "how can we list all transactions for particular address for specific contract address e.g https://ropsten.etherscan.io/token/0x8fb55768673df131cdebd5f787c738c34a01a933?a=0xe06510204d49585a35e7ee62aff936c1140ab63f",
    "html": "how can we list all transactions for particular address for specific contract address e.g <a href=\"https://ropsten.etherscan.io/token/0x8fb55768673df131cdebd5f787c738c34a01a933?a=0xe06510204d49585a35e7ee62aff936c1140ab63f\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://ropsten.etherscan.io/token/0x8fb55768673df131cdebd5f787c738c34a01a933?a=0xe06510204d49585a35e7ee62aff936c1140ab63f</a>",
    "sent": "2018-04-08T15:57:33.870Z",
    "fromUser": {
      "id": "5aca3af2d73408ce4f94d58e",
      "username": "umair050",
      "displayName": "umair050",
      "url": "/umair050",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/umair050",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/32437608?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/32437608?v=4&s=128",
      "v": 2,
      "gv": "4"
    },
    "unread": false,
    "readBy": 36,
    "urls": [
      {
        "url": "https://ropsten.etherscan.io/token/0x8fb55768673df131cdebd5f787c738c34a01a933?a=0xe06510204d49585a35e7ee62aff936c1140ab63f"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5acc8acd6d7e07082bdab34f",
    "text": "@umair050 Use etherscan.io. Assuming you use metamask, after performing transaction, click on the listed transaction in metamask.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"umair050\" class=\"mention\">@umair050</span> Use etherscan.io. Assuming you use metamask, after performing transaction, click on the listed transaction in metamask.",
    "sent": "2018-04-10T09:58:37.005Z",
    "fromUser": {
      "id": "59d90addd73408ce4f790791",
      "username": "thesachinmittal",
      "displayName": "Sachin Mittal",
      "url": "/thesachinmittal",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thesachinmittal",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22838732?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22838732?v=4&s=128",
      "v": 8,
      "gv": "4"
    },
    "unread": false,
    "readBy": 31,
    "urls": [],
    "mentions": [
      {
        "screenName": "umair050",
        "userId": "5aca3af2d73408ce4f94d58e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5acc8af827c509a774f7b63f",
    "text": "It will Redirect you to etherscan.io",
    "html": "It will Redirect you to etherscan.io",
    "sent": "2018-04-10T09:59:20.218Z",
    "fromUser": {
      "id": "59d90addd73408ce4f790791",
      "username": "thesachinmittal",
      "displayName": "Sachin Mittal",
      "url": "/thesachinmittal",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thesachinmittal",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22838732?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22838732?v=4&s=128",
      "v": 8,
      "gv": "4"
    },
    "unread": false,
    "readBy": 32,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5acd6a4c270d7d3708b44732",
    "text": "@Shrugs Thank you!",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"Shrugs\" class=\"mention\">@Shrugs</span> Thank you!",
    "sent": "2018-04-11T01:52:12.686Z",
    "fromUser": {
      "id": "5a59651dd73408ce4f87f156",
      "username": "z-akira",
      "displayName": "z-akira",
      "url": "/z-akira",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/z-akira",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/35387471?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/35387471?v=4&s=128",
      "v": 18,
      "gv": "4"
    },
    "unread": false,
    "readBy": 32,
    "urls": [],
    "mentions": [
      {
        "screenName": "Shrugs",
        "userId": "54830a6edb8155e6700dc42f",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ace30467c3a01610dd05598",
    "text": "Hi folks. I'm a California lawyer messing around with Solidity and smart contracts. Question about approach. Working on a simple bill of sale example where the solidity contract holds some really basic terms and then the longer legal doc would be ipfs. Want to keep them linked, however, maybe through a string that references the ipfs location. Any other ideas/recommendations?",
    "html": "Hi folks. I&#39;m a California lawyer messing around with Solidity and smart contracts. Question about approach. Working on a simple bill of sale example where the solidity contract holds some really basic terms and then the longer legal doc would be ipfs. Want to keep them linked, however, maybe through a string that references the ipfs location. Any other ideas/recommendations?",
    "sent": "2018-04-11T15:56:54.598Z",
    "fromUser": {
      "id": "58d2d065d73408ce4f52e458",
      "username": "mrice",
      "displayName": "Michael Rice",
      "url": "/mrice",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/mrice",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/509386?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/509386?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ace30505f188ccc15547e72",
    "text": "Here's the repo where I'm hoping to load up a bunch of common contract examples https://github.com/mrice/solidity-legal-contracts",
    "html": "Here&#39;s the repo where I&#39;m hoping to load up a bunch of common contract examples <a href=\"https://github.com/mrice/solidity-legal-contracts\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/mrice/solidity-legal-contracts</a>",
    "sent": "2018-04-11T15:57:04.124Z",
    "fromUser": {
      "id": "58d2d065d73408ce4f52e458",
      "username": "mrice",
      "displayName": "Michael Rice",
      "url": "/mrice",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/mrice",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/509386?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/509386?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 33,
    "urls": [
      {
        "url": "https://github.com/mrice/solidity-legal-contracts"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ace305b080a3850531f80fc",
    "text": "Kind of pleased with my lawyering in the bill-of-sale.md if there are any other lawyers hanging out here.....",
    "html": "Kind of pleased with my lawyering in the bill-of-sale.md if there are any other lawyers hanging out here.....",
    "sent": "2018-04-11T15:57:15.377Z",
    "fromUser": {
      "id": "58d2d065d73408ce4f52e458",
      "username": "mrice",
      "displayName": "Michael Rice",
      "url": "/mrice",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/mrice",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/509386?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/509386?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 33,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ace4908109bb04332b0f4f0",
    "text": "hey guys, we linked the best practice page from https://www.dasp.co because we think it's a really cool resource :)",
    "html": "hey guys, we linked the best practice page from <a href=\"https://www.dasp.co\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.dasp.co</a> because we think it&#39;s a really cool resource :)",
    "sent": "2018-04-11T17:42:32.730Z",
    "fromUser": {
      "id": "59ca61f2d73408ce4f776e50",
      "username": "lyon01_david_twitter",
      "displayName": "David Wong",
      "url": "/lyon01_david_twitter",
      "avatarUrl": "https://avatars-02.gitter.im/g/u/lyon01_david_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/814896091158183936/7LoDCGcP_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/814896091158183936/7LoDCGcP.jpg"
    },
    "unread": false,
    "readBy": 35,
    "urls": [
      {
        "url": "https://www.dasp.co"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ace4927109bb04332b0f604",
    "text": "www.dasp.co is a top 10 of smart contract vulnerabilities, similar to the owasp  top 10 for web apps",
    "html": "<a href=\"http://www.dasp.co\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">www.dasp.co</a> is a top 10 of smart contract vulnerabilities, similar to the owasp  top 10 for web apps",
    "sent": "2018-04-11T17:43:03.148Z",
    "fromUser": {
      "id": "59ca61f2d73408ce4f776e50",
      "username": "lyon01_david_twitter",
      "displayName": "David Wong",
      "url": "/lyon01_david_twitter",
      "avatarUrl": "https://avatars-02.gitter.im/g/u/lyon01_david_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/814896091158183936/7LoDCGcP_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/814896091158183936/7LoDCGcP.jpg"
    },
    "unread": false,
    "readBy": 37,
    "urls": [
      {
        "url": "http://www.dasp.co"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ace49395f188ccc15550250",
    "text": "Sounds like you're on the right track @mrice. I believe IPFS hashes are the standard way to track a text file. Here's a good resource I read a while ago:  \nhttps://www.reddit.com/r/ethdev/comments/6lbmhy/a_practical_guide_to_cheap_ipfs_hash_storage_in/",
    "html": "Sounds like you&#39;re on the right track <span data-link-type=\"mention\" data-screen-name=\"mrice\" class=\"mention\">@mrice</span>. I believe IPFS hashes are the standard way to track a text file. Here&#39;s a good resource I read a while ago:<br><a href=\"https://www.reddit.com/r/ethdev/comments/6lbmhy/a_practical_guide_to_cheap_ipfs_hash_storage_in/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.reddit.com/r/ethdev/comments/6lbmhy/a_practical_guide_to_cheap_ipfs_hash_storage_in/</a>",
    "sent": "2018-04-11T17:43:21.451Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 37,
    "urls": [
      {
        "url": "https://www.reddit.com/r/ethdev/comments/6lbmhy/a_practical_guide_to_cheap_ipfs_hash_storage_in/"
      }
    ],
    "mentions": [
      {
        "screenName": "mrice",
        "userId": "58d2d065d73408ce4f52e458",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ace497e6d7e07082be34da7",
    "text": "@lyon01_david_twitter thats awesome, great initiative!",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"lyon01_david_twitter\" class=\"mention\">@lyon01_david_twitter</span> thats awesome, great initiative!",
    "sent": "2018-04-11T17:44:30.177Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 37,
    "urls": [],
    "mentions": [
      {
        "screenName": "lyon01_david_twitter",
        "userId": "59ca61f2d73408ce4f776e50",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ace4996df3e0fb547c87dd0",
    "text": "Thanks for the vote of confidence and link @maurelian ",
    "html": "Thanks for the vote of confidence and link <span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> ",
    "sent": "2018-04-11T17:44:54.285Z",
    "fromUser": {
      "id": "58d2d065d73408ce4f52e458",
      "username": "mrice",
      "displayName": "Michael Rice",
      "url": "/mrice",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/mrice",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/509386?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/509386?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 37,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5adea6b415c9b031142b53fc",
    "text": "anyone have experience with gulp for js?\nthe virtual env , is it pretty much the same as python’s virtualenv?",
    "html": "anyone have experience with gulp for js?<br>the virtual env , is it pretty much the same as python’s virtualenv?",
    "sent": "2018-04-24T03:38:28.914Z",
    "fromUser": {
      "id": "59a2d743d73408ce4f732c4a",
      "username": "ChanForPres",
      "displayName": "ChanForPres",
      "url": "/ChanForPres",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ChanForPres",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/24968877?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/24968877?v=4&s=128",
      "v": 14,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5adecbbd270d7d3708fc54c9",
    "text": "@mrice Great contracts on your github! do you have any resources you would recommend?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"mrice\" class=\"mention\">@mrice</span> Great contracts on your github! do you have any resources you would recommend?",
    "sent": "2018-04-24T06:16:29.862Z",
    "fromUser": {
      "id": "561e94b8d33f749381a95bf4",
      "username": "huntpie",
      "displayName": "huntpie",
      "url": "/huntpie",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/huntpie",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15129185?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15129185?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [
      {
        "screenName": "mrice",
        "userId": "58d2d065d73408ce4f52e458",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5adecbf92d0e228d7ba63e96",
    "text": "Thanks so much @huntpie ! ",
    "html": "Thanks so much <span data-link-type=\"mention\" data-screen-name=\"huntpie\" class=\"mention\">@huntpie</span> ! ",
    "sent": "2018-04-24T06:17:29.173Z",
    "fromUser": {
      "id": "58d2d065d73408ce4f52e458",
      "username": "mrice",
      "displayName": "Michael Rice",
      "url": "/mrice",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/mrice",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/509386?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/509386?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [
      {
        "screenName": "huntpie",
        "userId": "561e94b8d33f749381a95bf4",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5adecc3b7c3a01610d143b1f",
    "text": "Not really, honestly... I came across Aaron Wright’s work at OpenLaw after I started and it’s a little farther along from a UI point of view. ",
    "html": "Not really, honestly... I came across Aaron Wright’s work at OpenLaw after I started and it’s a little farther along from a UI point of view. ",
    "sent": "2018-04-24T06:18:35.028Z",
    "fromUser": {
      "id": "58d2d065d73408ce4f52e458",
      "username": "mrice",
      "displayName": "Michael Rice",
      "url": "/mrice",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/mrice",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/509386?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/509386?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5adfdf325f188ccc159e9b09",
    "text": "What's the best practice for returning all data in a mapping?",
    "html": "What&#39;s the best practice for returning all data in a mapping?",
    "sent": "2018-04-25T01:51:46.254Z",
    "fromUser": {
      "id": "57c4ce9640f3a6eec06207e0",
      "username": "ToJen",
      "displayName": "Tomisin",
      "url": "/ToJen",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ToJen",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13075885?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13075885?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ae0d1375d7286b43a69a932",
    "text": "@ToJen I like this answer quite a bit https://ethereum.stackexchange.com/questions/15337/can-we-get-all-elements-stored-in-a-mapping-in-the-contract",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"ToJen\" class=\"mention\">@ToJen</span> I like this answer quite a bit <a href=\"https://ethereum.stackexchange.com/questions/15337/can-we-get-all-elements-stored-in-a-mapping-in-the-contract\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://ethereum.stackexchange.com/questions/15337/can-we-get-all-elements-stored-in-a-mapping-in-the-contract</a>",
    "sent": "2018-04-25T19:04:23.896Z",
    "fromUser": {
      "id": "5a4e6586d73408ce4f86204f",
      "username": "foogunlana",
      "displayName": "Foluso",
      "url": "/foogunlana",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/foogunlana",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5675998?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5675998?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [
      {
        "url": "https://ethereum.stackexchange.com/questions/15337/can-we-get-all-elements-stored-in-a-mapping-in-the-contract"
      }
    ],
    "mentions": [
      {
        "screenName": "ToJen",
        "userId": "57c4ce9640f3a6eec06207e0",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ae0d1b82d0e228d7bb0acc1",
    "text": "Basically, 1. keep a list of keys as a public variable (array) on your contract, 2. make getKeyByIndex and getLengthOfKeyArray functions on your contract, 3. Iterate off-chain (web3.js or other) --> get ith key, then get mapping value at ith key. Last time I checked, that was a good way to do it.",
    "html": "Basically, 1. keep a list of keys as a public variable (array) on your contract, 2. make getKeyByIndex and getLengthOfKeyArray functions on your contract, 3. Iterate off-chain (web3.js or other) --&gt; get ith key, then get mapping value at ith key. Last time I checked, that was a good way to do it.",
    "sent": "2018-04-25T19:06:32.115Z",
    "editedAt": "2018-04-25T19:07:58.187Z",
    "fromUser": {
      "id": "5a4e6586d73408ce4f86204f",
      "username": "foogunlana",
      "displayName": "Foluso",
      "url": "/foogunlana",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/foogunlana",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5675998?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5675998?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 4
  },
  {
    "id": "5ae0f289109bb04332ff9e8d",
    "text": "Thanks @foogunlana , I've gone through that. The mapping used there is public. I don't think a private mapping will be accessible outside of the contract through web3.js",
    "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"foogunlana\" class=\"mention\">@foogunlana</span> , I&#39;ve gone through that. The mapping used there is public. I don&#39;t think a private mapping will be accessible outside of the contract through web3.js",
    "sent": "2018-04-25T21:26:33.882Z",
    "fromUser": {
      "id": "57c4ce9640f3a6eec06207e0",
      "username": "ToJen",
      "displayName": "Tomisin",
      "url": "/ToJen",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ToJen",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13075885?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13075885?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [
      {
        "screenName": "foogunlana",
        "userId": "5a4e6586d73408ce4f86204f",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ae1e5342b9dfdbc3ad08760",
    "text": "Ah okay @ToJen. So you want to access the contents of a private mapping from web3.js? Why is it private then? If you want to selectively allow users to access it, you could use a `require` statement or `modifier` to do that. Is that what you want? Or something else?",
    "html": "Ah okay <span data-link-type=\"mention\" data-screen-name=\"ToJen\" class=\"mention\">@ToJen</span>. So you want to access the contents of a private mapping from web3.js? Why is it private then? If you want to selectively allow users to access it, you could use a <code>require</code> statement or <code>modifier</code> to do that. Is that what you want? Or something else?",
    "sent": "2018-04-26T14:41:56.874Z",
    "fromUser": {
      "id": "5a4e6586d73408ce4f86204f",
      "username": "foogunlana",
      "displayName": "Foluso",
      "url": "/foogunlana",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/foogunlana",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5675998?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5675998?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [
      {
        "screenName": "ToJen",
        "userId": "57c4ce9640f3a6eec06207e0",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ae1eb13bcdd4233a9d940e9",
    "text": "https://gist.github.com/maurelian/02fb639242460d43f6d5d3ca9cdd4614",
    "html": "<a href=\"https://gist.github.com/maurelian/02fb639242460d43f6d5d3ca9cdd4614\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gist.github.com/maurelian/02fb639242460d43f6d5d3ca9cdd4614</a>",
    "sent": "2018-04-26T15:06:59.245Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [
      {
        "url": "https://gist.github.com/maurelian/02fb639242460d43f6d5d3ca9cdd4614"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ae1eb7e76167434721b02c3",
    "text": "if using web3 instead of remix, you’d use the `public` version of the source code to define a contract object, and then instantiate a contract at the address with the `private` version. ",
    "html": "if using web3 instead of remix, you’d use the <code>public</code> version of the source code to define a contract object, and then instantiate a contract at the address with the <code>private</code> version. ",
    "sent": "2018-04-26T15:08:46.520Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ae1eb8b60ddf96c97e3efea",
    "text": "That’s a bit hacky, but a fairly easy workaround. ",
    "html": "That’s a bit hacky, but a fairly easy workaround. ",
    "sent": "2018-04-26T15:08:59.274Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ae1f09c7c3a01610d238dcb",
    "text": "Great gist @maurelian. In any case, @ToJen I hadn't considered you might be trying to do this for a contract that is already deployed. Even if you do the above, I believe you'll still need the keys of the mapping to access the values but someone correct me if there's a workaround for that too.",
    "html": "Great gist <span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span>. In any case, <span data-link-type=\"mention\" data-screen-name=\"ToJen\" class=\"mention\">@ToJen</span> I hadn&#39;t considered you might be trying to do this for a contract that is already deployed. Even if you do the above, I believe you&#39;ll still need the keys of the mapping to access the values but someone correct me if there&#39;s a workaround for that too.",
    "sent": "2018-04-26T15:30:36.285Z",
    "editedAt": "2018-04-26T15:31:46.600Z",
    "fromUser": {
      "id": "5a4e6586d73408ce4f86204f",
      "username": "foogunlana",
      "displayName": "Foluso",
      "url": "/foogunlana",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/foogunlana",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5675998?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5675998?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      },
      {
        "screenName": "ToJen",
        "userId": "57c4ce9640f3a6eec06207e0",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5ae1f314bcdd4233a9d9412a",
    "text": "FYI adding the public keyword to the source adds a getter in the bytecode.",
    "html": "FYI adding the public keyword to the source adds a getter in the bytecode.",
    "sent": "2018-04-26T15:41:08.886Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ae1f39e60ddf96c97e3f054",
    "text": "Because: \n1. getters are constant call functions\n2. constant functions can be run locally by web3js without sending a transaction to the blockchain\n3. web3js will just execute the bytecode locally, to read from the contract’s storage locally. ",
    "html": "Because: <ol>\n<li>getters are constant call functions</li>\n<li>constant functions can be run locally by web3js without sending a transaction to the blockchain</li>\n<li>web3js will just execute the bytecode locally, to read from the contract’s storage locally. </li>\n</ol>\n",
    "sent": "2018-04-26T15:43:26.004Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 28,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ae1f3be33757f57045b64af",
    "text": "So, it’s like you can pretend there are these extra convenience functions in the blockchain",
    "html": "So, it’s like you can pretend there are these extra convenience functions in the blockchain",
    "sent": "2018-04-26T15:43:58.802Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 28,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ae23da81130fe3d361e950b",
    "text": "@maurelian wouldn't that make it a different contract then? I haven't actually deployed yet @foogunlana ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> wouldn&#39;t that make it a different contract then? I haven&#39;t actually deployed yet <span data-link-type=\"mention\" data-screen-name=\"foogunlana\" class=\"mention\">@foogunlana</span> ",
    "sent": "2018-04-26T20:59:20.201Z",
    "fromUser": {
      "id": "57c4ce9640f3a6eec06207e0",
      "username": "ToJen",
      "displayName": "Tomisin",
      "url": "/ToJen",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ToJen",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13075885?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13075885?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 28,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      },
      {
        "screenName": "foogunlana",
        "userId": "5a4e6586d73408ce4f86204f",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5ae23e6a60ddf96c97e3f32b",
    "text": "It’s almost exactly the same contract, and it will store the mapping data in the same locations. The only difference is that the local version will have some extra bytecode for retrieving that data.",
    "html": "It’s almost exactly the same contract, and it will store the mapping data in the same locations. The only difference is that the local version will have some extra bytecode for retrieving that data.",
    "sent": "2018-04-26T21:02:34.884Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5aefec6103cafa797b30cfb4",
    "text": "@sandeepgupta021992\nHI GUYZ.... I WANT TO CREATE WALLET USING WEB3 PACKAGE.....I HAVE CREATED USING WEB3.ETH.PERSONEL.NEWACCOUNT BUT IT IS ONLY GIVING ME THE PUBLIC ADDRESS OF THE WALLET \nI WANT TO HAVE PRIVATE KEY OF THE WALLET AS WELL AT THE TIME OF CREATION OF WALLET\nNEED HELP",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"sandeepgupta021992\" class=\"mention\">@sandeepgupta021992</span><br>HI GUYZ.... I WANT TO CREATE WALLET USING WEB3 PACKAGE.....I HAVE CREATED USING WEB3.ETH.PERSONEL.NEWACCOUNT BUT IT IS ONLY GIVING ME THE PUBLIC ADDRESS OF THE WALLET<br>I WANT TO HAVE PRIVATE KEY OF THE WALLET AS WELL AT THE TIME OF CREATION OF WALLET<br>NEED HELP",
    "sent": "2018-05-07T06:04:17.324Z",
    "fromUser": {
      "id": "5aefcc2bd73408ce4f985667",
      "username": "sandeepgupta021992",
      "displayName": "sandeepgupta021992",
      "url": "/sandeepgupta021992",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/sandeepgupta021992",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/34575369?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/34575369?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [
      {
        "screenName": "sandeepgupta021992",
        "userId": "5aefcc2bd73408ce4f985667",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5aefeedada323a7c0400f60e",
    "text": "There should be a folder on your computer called keystore. Geth stores encrypted JSONs there (your private keys). The keystore folder path depends on your OS, so you’ll have to do some googling. https://ethereum.stackexchange.com/questions/34317/get-private-key-from-web3-personal-newaccountpassword",
    "html": "There should be a folder on your computer called keystore. Geth stores encrypted JSONs there (your private keys). The keystore folder path depends on your OS, so you’ll have to do some googling. <a href=\"https://ethereum.stackexchange.com/questions/34317/get-private-key-from-web3-personal-newaccountpassword\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://ethereum.stackexchange.com/questions/34317/get-private-key-from-web3-personal-newaccountpassword</a>",
    "sent": "2018-05-07T06:14:50.308Z",
    "fromUser": {
      "id": "5a4e6586d73408ce4f86204f",
      "username": "foogunlana",
      "displayName": "Foluso",
      "url": "/foogunlana",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/foogunlana",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5675998?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5675998?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [
      {
        "url": "https://ethereum.stackexchange.com/questions/34317/get-private-key-from-web3-personal-newaccountpassword"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5aeff85b97e5506e04a1f779",
    "text": "not getting",
    "html": "not getting",
    "sent": "2018-05-07T06:55:23.173Z",
    "fromUser": {
      "id": "5aefcc2bd73408ce4f985667",
      "username": "sandeepgupta021992",
      "displayName": "sandeepgupta021992",
      "url": "/sandeepgupta021992",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/sandeepgupta021992",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/34575369?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/34575369?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5af003566f9af87e044abb90",
    "text": "when i m passing rinkeby.infura.io with my api key in configuration then im getting JSON RPC error\ncan anyone tell me why so\ni have started geth using geth --rinkeby --rpc --rpcapi db,eth,net,web3,personal",
    "html": "when i m passing rinkeby.infura.io with my api key in configuration then im getting JSON RPC error<br>can anyone tell me why so<br>i have started geth using geth --rinkeby --rpc --rpcapi db,eth,net,web3,personal",
    "sent": "2018-05-07T07:42:14.557Z",
    "fromUser": {
      "id": "5aefcc2bd73408ce4f985667",
      "username": "sandeepgupta021992",
      "displayName": "sandeepgupta021992",
      "url": "/sandeepgupta021992",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/sandeepgupta021992",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/34575369?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/34575369?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5af19be4da323a7c040697d4",
    "text": "Hello Everyone\nCan anyone help me to make smart contract transaction using the RPC request?",
    "html": "Hello Everyone<br>Can anyone help me to make smart contract transaction using the RPC request?",
    "sent": "2018-05-08T12:45:24.484Z",
    "fromUser": {
      "id": "5ae18549d73408ce4f97251d",
      "username": "AnkitRathore175",
      "displayName": "AnkitRathore175",
      "url": "/AnkitRathore175",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/AnkitRathore175",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/38749604?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/38749604?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5af19c0b97f07c7e137990d1",
    "text": "I'm using transferFrom, but it's give errors \"Function transferFrom is not constant: transferFrom, requires to sign transaction\"",
    "html": "I&#39;m using transferFrom, but it&#39;s give errors &quot;Function transferFrom is not constant: transferFrom, requires to sign transaction&quot;",
    "sent": "2018-05-08T12:46:03.504Z",
    "fromUser": {
      "id": "5ae18549d73408ce4f97251d",
      "username": "AnkitRathore175",
      "displayName": "AnkitRathore175",
      "url": "/AnkitRathore175",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/AnkitRathore175",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/38749604?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/38749604?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5af2ca2303cafa797b3a7047",
    "text": "What's the best practices for contract migrations?\nI use truffle-migrate for now, but I'm not sure what the cons and pros of storing migrations db on the blockchain?",
    "html": "What&#39;s the best practices for contract migrations?<br>I use truffle-migrate for now, but I&#39;m not sure what the cons and pros of storing migrations db on the blockchain?",
    "sent": "2018-05-09T10:14:59.041Z",
    "fromUser": {
      "id": "55cf59f10fc9f982bead7c83",
      "username": "leonprou",
      "displayName": "Leon Prouger",
      "url": "/leonprou",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/leonprou",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7228844?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7228844?v=4&s=128",
      "v": 21,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5af32ad5602bbf5a61b73630",
    "text": "Hi,",
    "html": "Hi,",
    "sent": "2018-05-09T17:07:33.431Z",
    "fromUser": {
      "id": "59e88d19d73408ce4f7ab8c0",
      "username": "laitassou",
      "displayName": "laitassou",
      "url": "/laitassou",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/laitassou",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=128",
      "v": 38,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5af32ae343eccf1996a3d630",
    "text": "What is the nominal price of gaz ?",
    "html": "What is the nominal price of gaz ?",
    "sent": "2018-05-09T17:07:47.650Z",
    "fromUser": {
      "id": "59e88d19d73408ce4f7ab8c0",
      "username": "laitassou",
      "displayName": "laitassou",
      "url": "/laitassou",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/laitassou",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=128",
      "v": 38,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5af32affe7051e1d04c1dae3",
    "text": "I test on ropsten with 15 Gwei and transaction is processed",
    "html": "I test on ropsten with 15 Gwei and transaction is processed",
    "sent": "2018-05-09T17:08:15.149Z",
    "fromUser": {
      "id": "59e88d19d73408ce4f7ab8c0",
      "username": "laitassou",
      "displayName": "laitassou",
      "url": "/laitassou",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/laitassou",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=128",
      "v": 38,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5af32b142c48221ec78c09d4",
    "text": "https://ethgasstation.info/",
    "html": "<a href=\"https://ethgasstation.info/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://ethgasstation.info/</a>",
    "sent": "2018-05-09T17:08:36.701Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [
      {
        "url": "https://ethgasstation.info/"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5af32b1e5fb07f5a62cb76ae",
    "text": "I have an application and would have low fees ",
    "html": "I have an application and would have low fees ",
    "sent": "2018-05-09T17:08:46.794Z",
    "fromUser": {
      "id": "59e88d19d73408ce4f7ab8c0",
      "username": "laitassou",
      "displayName": "laitassou",
      "url": "/laitassou",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/laitassou",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=128",
      "v": 38,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5af32b310c7d5b7304b08782",
    "text": "^ all the info you need and more there. ",
    "html": "^ all the info you need and more there. ",
    "sent": "2018-05-09T17:09:05.434Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5af32b6662bbf1199590bc4c",
    "text": "ah ok thank you, my transactions wehre not processed at 10Gwei in ropsten this is why I asked. thank you for link",
    "html": "ah ok thank you, my transactions wehre not processed at 10Gwei in ropsten this is why I asked. thank you for link",
    "sent": "2018-05-09T17:09:58.136Z",
    "fromUser": {
      "id": "59e88d19d73408ce4f7ab8c0",
      "username": "laitassou",
      "displayName": "laitassou",
      "url": "/laitassou",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/laitassou",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=128",
      "v": 38,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5af45349d332ee5fad0a7d0d",
    "text": "Hi all, I have a question on the **dependency of the test cases**. Assume that all test cases are written in JS, how can I figure out the dependent relationship between test cases. I use the keyword `it.only(...)` to execute a single test case (it failed), but I get the opposite result (passing) when I execute the test case with other test cases together. Is there any way to detect the dependency? Thx in advance!",
    "html": "Hi all, I have a question on the <strong>dependency of the test cases</strong>. Assume that all test cases are written in JS, how can I figure out the dependent relationship between test cases. I use the keyword <code>it.only(...)</code> to execute a single test case (it failed), but I get the opposite result (passing) when I execute the test case with other test cases together. Is there any way to detect the dependency? Thx in advance!",
    "sent": "2018-05-10T14:12:25.795Z",
    "fromUser": {
      "id": "5aafb82ad73408ce4f921424",
      "username": "XBWer",
      "displayName": "Bowen Xu",
      "url": "/XBWer",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/XBWer",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/7578594?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/7578594?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5af46e454b9c3e259cc226b0",
    "text": "@XBWer hard to say, but I would suggest using the node debugger to inspect the state of the contract at the beginning of the test case in question. That should give a clue as to what other test might have gotten it into that state. ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"XBWer\" class=\"mention\">@XBWer</span> hard to say, but I would suggest using the node debugger to inspect the state of the contract at the beginning of the test case in question. That should give a clue as to what other test might have gotten it into that state. ",
    "sent": "2018-05-10T16:07:33.439Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [
      {
        "screenName": "XBWer",
        "userId": "5aafb82ad73408ce4f921424",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5af46e759505660d7ea6552e",
    "text": "If truffle is installed locally, this would do it: `$ node inspect ./node_modules/.bin/truffle test`",
    "html": "If truffle is installed locally, this would do it: <code>$ node inspect ./node_modules/.bin/truffle test</code>",
    "sent": "2018-05-10T16:08:21.295Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5af46e8b34523823c1e2683a",
    "text": "if globally, use `$ node inspect $(which truffle) test`",
    "html": "if globally, use <code>$ node inspect $(which truffle) test</code>",
    "sent": "2018-05-10T16:08:43.096Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5af46f19b1ac3a1ec9693a8b",
    "text": "Incidentally, here is a note about testing styles from a colleague of mine:\n\n```\n# Thoughts on testing smart contracts\n\nThere are two testing styles in the Delphi repo. There is the Mark style and there is the Mike style.\n\nIn Mark-style tests, new contracts are deployed explicitly, in the test code, for each test. These deployments may be done inline to the test or in a beforeEach.\n\nIn Mike-style tests, contract deployments are handled implicitly, outside the test code, by Truffle. The deployment behavior is specified in the migration files.\n\nThe benefit to Mark-style testing with inline deploys is that the tests are more legible. Implicit style is bad in tests, because legibility is particularly important there. The downside is that what actually gets tested will not necessarily be the same as what actually gets deployed.\n\nThe benefit to Mike-style testing, which leans on the migrations, is that what gets tested is the same as what gets deployed. The downside is that the tests do things implicitly and are less legible. Furthermore, the deploy pipeline gets gunked up with `if(network === 'test')` clauses.\n\nIs there a way to get the best of all worlds?\n\nAll contracts should be proxy contracts. In reality, almost nobody should be deploying production contracts using Truffle migrations--they should be using proxy factory contracts. The only people who should (must) use Truffle migrations are people deploying original code for which there is no existing template.\n\nTo get the best of all worlds the truffle deploy pipeline should deploy the repo's contracts for all networks, plus a ProxyFactory in a final migration. Then, in the tests, utility functions should be written which can create new proxies from the ProxyFactory as-needed, and which use repo config files to initialize those contracts. This way even somebody planning on using the mainnet ProxyFactory to deploy their contract can run tests against their desired config using the repo.\n\nThis way we get:\n- Clean migrations\n- Explicit tests\n- Parity between production and test environments\n\nOverall, even without proxy contracts, Mark-style explicit tests are better. It only takes a utility function in that style to get plausible production/test parity. I have realized this as my own tests have become increasingly implicit.\n\nI'm converting the dead-mans-switch repo to this style to practice it, and then will apply it elsewhere.\n```",
    "html": "Incidentally, here is a note about testing styles from a colleague of mine:<pre><code><span class=\"comment\"># Thoughts on testing smart contracts</span>\n\nThere are two testing styles <span class=\"keyword\">in</span> <span class=\"keyword\">the</span> Delphi repo. There <span class=\"keyword\">is</span> <span class=\"keyword\">the</span> Mark style <span class=\"keyword\">and</span> there <span class=\"keyword\">is</span> <span class=\"keyword\">the</span> Mike style.\n\nIn Mark-style tests, new contracts are deployed explicitly, <span class=\"keyword\">in</span> <span class=\"keyword\">the</span> test code, <span class=\"keyword\">for</span> each test. These deployments may be done inline <span class=\"keyword\">to</span> <span class=\"keyword\">the</span> test <span class=\"keyword\">or</span> <span class=\"keyword\">in</span> a beforeEach.\n\nIn Mike-style tests, contract deployments are handled implicitly, outside <span class=\"keyword\">the</span> test code, <span class=\"keyword\">by</span> Truffle. The deployment behavior <span class=\"keyword\">is</span> specified <span class=\"keyword\">in</span> <span class=\"keyword\">the</span> migration files.\n\nThe benefit <span class=\"keyword\">to</span> Mark-style testing <span class=\"keyword\">with</span> inline deploys <span class=\"keyword\">is</span> <span class=\"keyword\">that</span> <span class=\"keyword\">the</span> tests are more legible. Implicit style <span class=\"keyword\">is</span> bad <span class=\"keyword\">in</span> tests, because legibility <span class=\"keyword\">is</span> particularly important there. The downside <span class=\"keyword\">is</span> <span class=\"keyword\">that</span> what actually gets tested will <span class=\"keyword\">not</span> necessarily be <span class=\"keyword\">the</span> same <span class=\"keyword\">as</span> what actually gets deployed.\n\nThe benefit <span class=\"keyword\">to</span> Mike-style testing, which leans <span class=\"function_start\"><span class=\"keyword\">on</span></span> <span class=\"keyword\">the</span> migrations, <span class=\"keyword\">is</span> <span class=\"keyword\">that</span> what gets tested <span class=\"keyword\">is</span> <span class=\"keyword\">the</span> same <span class=\"keyword\">as</span> what gets deployed. The downside <span class=\"keyword\">is</span> <span class=\"keyword\">that</span> <span class=\"keyword\">the</span> tests do things implicitly <span class=\"keyword\">and</span> are less legible. Furthermore, <span class=\"keyword\">the</span> deploy pipeline gets gunked up <span class=\"keyword\">with</span> `<span class=\"keyword\">if</span>(network === 'test')` clauses.\n\nIs there a way <span class=\"keyword\">to</span> <span class=\"keyword\">get</span> <span class=\"keyword\">the</span> best <span class=\"keyword\">of</span> all worlds?\n\nAll contracts should be proxy contracts. In reality, almost nobody should be deploying production contracts using Truffle migrations<span class=\"comment\">--they should be using proxy factory contracts. The only people who should (must) use Truffle migrations are people deploying original code for which there is no existing template.</span>\n\nTo <span class=\"keyword\">get</span> <span class=\"keyword\">the</span> best <span class=\"keyword\">of</span> all worlds <span class=\"keyword\">the</span> truffle deploy pipeline should deploy <span class=\"keyword\">the</span> repo's contracts <span class=\"keyword\">for</span> all networks, plus a ProxyFactory <span class=\"keyword\">in</span> a final migration. Then, <span class=\"keyword\">in</span> <span class=\"keyword\">the</span> tests, utility functions should be written which can create new proxies <span class=\"keyword\">from</span> <span class=\"keyword\">the</span> ProxyFactory <span class=\"keyword\">as</span>-needed, <span class=\"keyword\">and</span> which use repo config files <span class=\"keyword\">to</span> initialize those contracts. This way even somebody planning <span class=\"function_start\"><span class=\"keyword\">on</span></span> using <span class=\"keyword\">the</span> mainnet ProxyFactory <span class=\"keyword\">to</span> deploy their contract can <span class=\"command\">run</span> tests <span class=\"keyword\">against</span> their desired config using <span class=\"keyword\">the</span> repo.\n\nThis way we <span class=\"keyword\">get</span>:\n- Clean migrations\n- Explicit tests\n- Parity <span class=\"keyword\">between</span> production <span class=\"keyword\">and</span> test environments\n\nOverall, even <span class=\"keyword\">without</span> proxy contracts, Mark-style explicit tests are better. It only takes a utility function <span class=\"keyword\">in</span> <span class=\"keyword\">that</span> style <span class=\"keyword\">to</span> <span class=\"keyword\">get</span> plausible production/test parity. I have realized this <span class=\"keyword\">as</span> <span class=\"keyword\">my</span> own tests have become increasingly implicit.\n\nI'm converting <span class=\"keyword\">the</span> dead-mans-switch repo <span class=\"keyword\">to</span> this style <span class=\"keyword\">to</span> practice <span class=\"keyword\">it</span>, <span class=\"keyword\">and</span> <span class=\"keyword\">then</span> will apply <span class=\"keyword\">it</span> elsewhere.</code></pre>",
    "sent": "2018-05-10T16:11:05.235Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b02a46652194a4a6700300e",
    "text": "Hi All,\nI have made small program in solidity and run directly it into remix.\nBut when I deployed this (ERC20Basic) there , I got error- \nThis contract does not implement all functions and thus cannot be created.\nplease find my solidity code - \npragma solidity ^0.4.21;\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) public view returns (uint256);\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n",
    "html": "<p>Hi All,<br>I have made small program in solidity and run directly it into remix.<br>But when I deployed this (ERC20Basic) there , I got error-<br>This contract does not implement all functions and thus cannot be created.<br>please find my solidity code -<br>pragma solidity ^0.4.21;</p><p>/**</p><ul>\n<li><span data-link-type=\"mention\" data-screen-name=\"title\" class=\"mention\">@title</span> ERC20Basic</li>\n<li><span data-link-type=\"mention\" data-screen-name=\"dev\" class=\"mention\">@dev</span> Simpler version of ERC20 interface</li>\n<li><span data-link-type=\"mention\" data-screen-name=\"dev\" class=\"mention\">@dev</span> see <span data-link-type=\"issue\" data-issue=\"179\" data-issue-repo=\"ethereum/EIPs\" class=\"issue\">ethereum/EIPs#179</span><br>*/<br>contract ERC20Basic {<br>function totalSupply() public view returns (uint256);<br>function balanceOf(address who) public view returns (uint256);<br>function transfer(address to, uint256 value) public returns (bool);<br>event Transfer(address indexed from, address indexed to, uint256 value);<br>}</li>\n</ul>\n<p>/**</p><ul>\n<li><span data-link-type=\"mention\" data-screen-name=\"title\" class=\"mention\">@title</span> ERC20 interface</li>\n<li><span data-link-type=\"mention\" data-screen-name=\"dev\" class=\"mention\">@dev</span> see <span data-link-type=\"issue\" data-issue=\"20\" data-issue-repo=\"ethereum/EIPs\" class=\"issue\">ethereum/EIPs#20</span><br>*/<br>contract ERC20 is ERC20Basic {<br>function allowance(address owner, address spender) public view returns (uint256);<br>function transferFrom(address from, address to, uint256 value) public returns (bool);<br>function approve(address spender, uint256 value) public returns (bool);<br>event Approval(address indexed owner, address indexed spender, uint256 value);<br>}</li>\n</ul>\n",
    "sent": "2018-05-21T10:50:14.954Z",
    "editedAt": "2018-05-21T10:51:00.037Z",
    "fromUser": {
      "id": "5ae07fe8d73408ce4f970861",
      "username": "adhikarideepak",
      "displayName": "adhikarideepak",
      "url": "/adhikarideepak",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/adhikarideepak",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/37994552?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/37994552?v=4&s=128",
      "v": 25,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [
      {
        "screenName": "title",
        "userIds": []
      },
      {
        "screenName": "dev",
        "userIds": []
      },
      {
        "screenName": "dev",
        "userIds": []
      },
      {
        "screenName": "title",
        "userIds": []
      },
      {
        "screenName": "dev",
        "userIds": []
      }
    ],
    "issues": [
      {
        "repo": "ethereum/EIPs",
        "number": "179"
      },
      {
        "repo": "ethereum/EIPs",
        "number": "20"
      }
    ],
    "meta": [],
    "v": 2
  },
  {
    "id": "5b06703dee623e2e41fc6b10",
    "text": "hi guys, do we have an issue deploying an ethereum?",
    "html": "hi guys, do we have an issue deploying an ethereum?",
    "sent": "2018-05-24T07:56:45.968Z",
    "fromUser": {
      "id": "5b02403dd73408ce4f9a10b4",
      "username": "BitcoinDrin_twitter",
      "displayName": "Aldrin Rabino (Crypto4chun)",
      "url": "/BitcoinDrin_twitter",
      "avatarUrl": "https://avatars-01.gitter.im/g/u/BitcoinDrin_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/772130866545864704/UHoir_rT_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/772130866545864704/UHoir_rT.jpg",
      "v": 3
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b06c79c4f917348feb7393d",
    "text": "@adhikarideepak the error is because you’re deploying an interface, not a proper contract. Take a look at https://github.com/ConsenSys/Tokens/tree/master/contracts/eip20",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"adhikarideepak\" class=\"mention\">@adhikarideepak</span> the error is because you’re deploying an interface, not a proper contract. Take a look at <a href=\"https://github.com/ConsenSys/Tokens/tree/master/contracts/eip20\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/ConsenSys/Tokens/tree/master/contracts/eip20</a>",
    "sent": "2018-05-24T14:09:32.515Z",
    "editedAt": "2018-05-24T14:09:48.641Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [
      {
        "url": "https://github.com/ConsenSys/Tokens/tree/master/contracts/eip20"
      }
    ],
    "mentions": [
      {
        "screenName": "adhikarideepak",
        "userId": "5ae07fe8d73408ce4f970861",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5b0848d0c5750d377c11d139",
    "text": "pragma solidity ^0.4.23;\n\ncontract UserRole {\n    address owner;\n    \n    mapping (address => uint8) userRoles;\n    \n    constructor() \n        public\n    {\n        owner = msg.sender;\n    }\n    \n    function set(address _userAddress, uint8 _role) \n        public\n        returns (bool sucesss)\n    {\n        userRoles[_userAddress] = _role;\n        return true;\n    }\n    \n    function getRole(address _userAddress) \n        public\n        view\n        returns (uint8 _role)\n    {\n        return userRoles[_userAddress];\n    }\n}\n\n",
    "html": "<p>pragma solidity ^0.4.23;</p><p>contract UserRole {<br>    address owner;</p><pre><code>mapping (address =&gt; uint8) userRoles;\n\n<span class=\"constructor\"><span class=\"keyword\">constructor</span>() \n    public\n</span>{\n    owner = msg.sender;\n}\n\n<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">set</span><span class=\"params\">(address _userAddress, uint8 _role)</span> \n    <span class=\"title\">public</span>\n    <span class=\"title\">returns</span> <span class=\"params\">(bool sucesss)</span>\n</span>{\n    userRoles[_userAddress] = _role;\n    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;\n}\n\n<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getRole</span><span class=\"params\">(address _userAddress)</span> \n    <span class=\"title\">public</span>\n    <span class=\"title\">view</span>\n    <span class=\"title\">returns</span> <span class=\"params\">(uint8 _role)</span>\n</span>{\n    <span class=\"keyword\">return</span> userRoles[_userAddress];\n}</code></pre><p>}</p>",
    "sent": "2018-05-25T17:33:04.147Z",
    "fromUser": {
      "id": "58c49d3cd73408ce4f4ffa60",
      "username": "aas312",
      "displayName": "aas312",
      "url": "/aas312",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/aas312",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/26353423?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/26353423?v=4&s=128",
      "v": 43,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b0848e77ccd4f1a695f4b6b",
    "text": "```\ncontract Base {\n    address owner;\n    UserRole userRole;\n    mapping (address => uint8) userRoles;\n    \n    constructor(address _userRoleDeployedContractAddress) \n        public\n    {\n        owner = msg.sender;\n        userRole = UserRole(_userRoleDeployedContractAddress);\n    }\n    \n    modifier isAuthorized(address _address) {\n        uint8 role = userRole.getRole(_address);\n        require(role < 10);\n        _;\n    }\n    \n    function testModifier(address someAddress)\n        public\n        isAuthorized(someAddress)\n        view\n        returns (bool result)\n    {\n        return true;\n    }\n}\n\n\n```\n",
    "html": "<pre><code>contract Base {\n    address owner;\n    UserRole userRole;\n    mapping (address =&gt; uint8) userRoles;\n\n    <span class=\"constructor\"><span class=\"keyword\">constructor</span>(address _userRoleDeployedContractAddress) \n        public\n    </span>{\n        owner = msg.sender;\n        userRole = UserRole(_userRoleDeployedContractAddress);\n    }\n\n    modifier isAuthorized(address _address) {\n        uint8 role = userRole.getRole(_address);\n        <span class=\"built_in\">require</span>(role &lt; <span class=\"number\">10</span>);\n        _;\n    }\n\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">testModifier</span><span class=\"params\">(address someAddress)</span>\n        <span class=\"title\">public</span>\n        <span class=\"title\">isAuthorized</span><span class=\"params\">(someAddress)</span>\n        <span class=\"title\">view</span>\n        <span class=\"title\">returns</span> <span class=\"params\">(bool result)</span>\n    </span>{\n        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;\n    }\n}</code></pre>",
    "sent": "2018-05-25T17:33:27.647Z",
    "fromUser": {
      "id": "58c49d3cd73408ce4f4ffa60",
      "username": "aas312",
      "displayName": "aas312",
      "url": "/aas312",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/aas312",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/26353423?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/26353423?v=4&s=128",
      "v": 43,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b0848f2ba1a351a68c3c8c6",
    "text": "I deloy the first contract UserRole ",
    "html": "I deloy the first contract UserRole ",
    "sent": "2018-05-25T17:33:38.365Z",
    "fromUser": {
      "id": "58c49d3cd73408ce4f4ffa60",
      "username": "aas312",
      "displayName": "aas312",
      "url": "/aas312",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/aas312",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/26353423?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/26353423?v=4&s=128",
      "v": 43,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b084901a45f930a65d568e5",
    "text": "and call set(address, 5)",
    "html": "and call set(address, 5)",
    "sent": "2018-05-25T17:33:53.671Z",
    "fromUser": {
      "id": "58c49d3cd73408ce4f4ffa60",
      "username": "aas312",
      "displayName": "aas312",
      "url": "/aas312",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/aas312",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/26353423?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/26353423?v=4&s=128",
      "v": 43,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b084916160c567d16d982bf",
    "text": "thenI deploy Base and pass the address of the deployed UserRole contract ",
    "html": "thenI deploy Base and pass the address of the deployed UserRole contract ",
    "sent": "2018-05-25T17:34:14.334Z",
    "fromUser": {
      "id": "58c49d3cd73408ce4f4ffa60",
      "username": "aas312",
      "displayName": "aas312",
      "url": "/aas312",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/aas312",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/26353423?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/26353423?v=4&s=128",
      "v": 43,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b08492693dc78791c8634e0",
    "text": "When i do this in remix it works",
    "html": "When i do this in remix it works",
    "sent": "2018-05-25T17:34:30.441Z",
    "fromUser": {
      "id": "58c49d3cd73408ce4f4ffa60",
      "username": "aas312",
      "displayName": "aas312",
      "url": "/aas312",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/aas312",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/26353423?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/26353423?v=4&s=128",
      "v": 43,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b08493316f6496124de7cf3",
    "text": "but in geth and parity i am getting the result of testModifier as blank",
    "html": "but in geth and parity i am getting the result of testModifier as blank",
    "sent": "2018-05-25T17:34:43.900Z",
    "fromUser": {
      "id": "58c49d3cd73408ce4f4ffa60",
      "username": "aas312",
      "displayName": "aas312",
      "url": "/aas312",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/aas312",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/26353423?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/26353423?v=4&s=128",
      "v": 43,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b084939352b9e1a4b31e1f4",
    "text": "in remix i get back true",
    "html": "in remix i get back true",
    "sent": "2018-05-25T17:34:49.020Z",
    "fromUser": {
      "id": "58c49d3cd73408ce4f4ffa60",
      "username": "aas312",
      "displayName": "aas312",
      "url": "/aas312",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/aas312",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/26353423?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/26353423?v=4&s=128",
      "v": 43,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b0849f93759c406277a1771",
    "text": "I could imagine it being either:\n1. an issue caused by checking an account that’s available in remix but not the clients\n2. an issue with how you’re accessing the data from the client",
    "html": "I could imagine it being either:<ol>\n<li>an issue caused by checking an account that’s available in remix but not the clients</li>\n<li>an issue with how you’re accessing the data from the client</li>\n</ol>\n",
    "sent": "2018-05-25T17:38:00.999Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b084a0f4f917348feb73fb2",
    "text": "perhaps try `eth.getTransactionReceipt` and see what the return data is.",
    "html": "perhaps try <code>eth.getTransactionReceipt</code> and see what the return data is.",
    "sent": "2018-05-25T17:38:23.374Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b084a1846e4f37b86fc8b89",
    "text": "should be `0x00…01`",
    "html": "should be <code>0x00…01</code>",
    "sent": "2018-05-25T17:38:32.158Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b084cd0c5750d377c11e137",
    "text": "@maurelian checking with a valid account on the client too",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> checking with a valid account on the client too",
    "sent": "2018-05-25T17:50:08.911Z",
    "fromUser": {
      "id": "58c49d3cd73408ce4f4ffa60",
      "username": "aas312",
      "displayName": "aas312",
      "url": "/aas312",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/aas312",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/26353423?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/26353423?v=4&s=128",
      "v": 43,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b084ce4c5750d377c11e168",
    "text": "This is really weird",
    "html": "This is really weird",
    "sent": "2018-05-25T17:50:28.523Z",
    "fromUser": {
      "id": "58c49d3cd73408ce4f4ffa60",
      "username": "aas312",
      "displayName": "aas312",
      "url": "/aas312",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/aas312",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/26353423?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/26353423?v=4&s=128",
      "v": 43,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b084e07ba1a351a68c3dc28",
    "text": "```\npragma solidity ^0.4.24;\n\ncontract UserRole {\n    address owner;\n    \n    mapping (string => uint8) userRoles;\n    \n    constructor() \n        public\n    {\n        owner = msg.sender;\n    }\n    \n    function set(string _username, uint8 _role) \n        public\n        returns (bool sucesss)\n    {\n        userRoles[_username] = _role;\n        return true;\n    }\n    \n    function getRole(string _username) \n        public\n        view\n        returns (uint8 _role)\n    {\n        return userRoles[_username];\n    }\n}\n\ncontract Base {\n    address owner;\n    UserRole userRole;\n    address public userRoleAddress;\n    \n    constructor(address _t) \n        public\n    {\n        owner = msg.sender;\n        userRoleAddress = _t;\n        userRole = UserRole(_t);\n    }\n    \n    \n    modifier isAuthorized(string _username) {\n        uint8 role = 5;\n        require(role < 10);\n        _;\n    }\n    \n    function testModifier(string _username)\n        public\n        isAuthorized(_username)\n        view\n        returns (uint8 result)\n    {\n        return userRole.getRole(_username);\n    }\n}\n```\n",
    "html": "<pre><code>pragma solidity ^<span class=\"number\">0.4</span>.24;\n\ncontract UserRole {\n    address owner;\n\n    mapping (<span class=\"built_in\">string</span> =&gt; uint8) userRoles;\n\n    <span class=\"constructor\"><span class=\"keyword\">constructor</span>() \n        public\n    </span>{\n        owner = msg.sender;\n    }\n\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">set</span><span class=\"params\">(string _username, uint8 _role)</span> \n        <span class=\"title\">public</span>\n        <span class=\"title\">returns</span> <span class=\"params\">(bool sucesss)</span>\n    </span>{\n        userRoles[_username] = _role;\n        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;\n    }\n\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getRole</span><span class=\"params\">(string _username)</span> \n        <span class=\"title\">public</span>\n        <span class=\"title\">view</span>\n        <span class=\"title\">returns</span> <span class=\"params\">(uint8 _role)</span>\n    </span>{\n        <span class=\"keyword\">return</span> userRoles[_username];\n    }\n}\n\ncontract Base {\n    address owner;\n    UserRole userRole;\n    address <span class=\"keyword\">public</span> userRoleAddress;\n\n    <span class=\"constructor\"><span class=\"keyword\">constructor</span>(address _t) \n        public\n    </span>{\n        owner = msg.sender;\n        userRoleAddress = _t;\n        userRole = UserRole(_t);\n    }\n\n\n    modifier isAuthorized(<span class=\"built_in\">string</span> _username) {\n        uint8 role = <span class=\"number\">5</span>;\n        <span class=\"built_in\">require</span>(role &lt; <span class=\"number\">10</span>);\n        _;\n    }\n\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">testModifier</span><span class=\"params\">(string _username)</span>\n        <span class=\"title\">public</span>\n        <span class=\"title\">isAuthorized</span><span class=\"params\">(_username)</span>\n        <span class=\"title\">view</span>\n        <span class=\"title\">returns</span> <span class=\"params\">(uint8 result)</span>\n    </span>{\n        <span class=\"keyword\">return</span> userRole.getRole(_username);\n    }\n}</code></pre>",
    "sent": "2018-05-25T17:55:19.551Z",
    "fromUser": {
      "id": "58c49d3cd73408ce4f4ffa60",
      "username": "aas312",
      "displayName": "aas312",
      "url": "/aas312",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/aas312",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/26353423?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/26353423?v=4&s=128",
      "v": 43,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b084e0f93dc78791c8643f8",
    "text": "I tried this",
    "html": "I tried this",
    "sent": "2018-05-25T17:55:27.412Z",
    "fromUser": {
      "id": "58c49d3cd73408ce4f4ffa60",
      "username": "aas312",
      "displayName": "aas312",
      "url": "/aas312",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/aas312",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/26353423?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/26353423?v=4&s=128",
      "v": 43,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b084e14361a950a66160386",
    "text": "still no luck",
    "html": "still no luck",
    "sent": "2018-05-25T17:55:32.470Z",
    "fromUser": {
      "id": "58c49d3cd73408ce4f4ffa60",
      "username": "aas312",
      "displayName": "aas312",
      "url": "/aas312",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/aas312",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/26353423?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/26353423?v=4&s=128",
      "v": 43,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b0e388a93dc78791c977e7f",
    "text": "Hello everyone,  I am looking for ethereum developers to show them my smart contract bounty program here: https://github.com/mudgen/mokens-bug-bounty",
    "html": "Hello everyone,  I am looking for ethereum developers to show them my smart contract bounty program here: <a href=\"https://github.com/mudgen/mokens-bug-bounty\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/mudgen/mokens-bug-bounty</a>",
    "sent": "2018-05-30T05:37:14.085Z",
    "fromUser": {
      "id": "5a636c5ed73408ce4f8945ba",
      "username": "mudgen_twitter",
      "displayName": "Nick Mudge",
      "url": "/mudgen_twitter",
      "avatarUrl": "https://avatars-01.gitter.im/g/u/mudgen_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/796795603749474304/ET0GfYGG_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/796795603749474304/ET0GfYGG.jpg"
    },
    "unread": false,
    "readBy": 23,
    "urls": [
      {
        "url": "https://github.com/mudgen/mokens-bug-bounty"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5b0e389893dc78791c977ea8",
    "text": "It is for my project called mokens.  It is an ERC721-based smart contract.",
    "html": "It is for my project called mokens.  It is an ERC721-based smart contract.",
    "sent": "2018-05-30T05:37:28.933Z",
    "fromUser": {
      "id": "5a636c5ed73408ce4f8945ba",
      "username": "mudgen_twitter",
      "displayName": "Nick Mudge",
      "url": "/mudgen_twitter",
      "avatarUrl": "https://avatars-01.gitter.im/g/u/mudgen_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/796795603749474304/ET0GfYGG_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/796795603749474304/ET0GfYGG.jpg"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a82266e18f388e6269627d3",
    "text": "@makoto yes, geth log",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span> yes, geth log",
    "sent": "2018-02-12T23:42:38.500Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a822678e217167e2c775755",
    "text": "geth log shows nowthing.",
    "html": "geth log shows nowthing.",
    "sent": "2018-02-12T23:42:48.554Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a822680b3c4a0d376156545",
    "text": "nothing",
    "html": "nothing",
    "sent": "2018-02-12T23:42:56.852Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a822708d74ee9f50db7e118",
    "text": "@makoto are any transactions getting sent and succeeding, prior to this one?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span> are any transactions getting sent and succeeding, prior to this one?",
    "sent": "2018-02-12T23:45:12.091Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a822713b3c4a0d37615684c",
    "text": "Interesting. The dryrun returns different error.",
    "html": "Interesting. The dryrun returns different error.",
    "sent": "2018-02-12T23:45:23.774Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a822716b3c4a0d376156865",
    "text": "```  Deploying Conference...\nError encountered, bailing. Network state unknown. Review successful transactions manually.\nsender doesn't have enough funds to send tx. The upfront cost is: 672197500000000000 and the sender's account only has: 0```",
    "html": "<code>Deploying Conference...\nError encountered, bailing. Network state unknown. Review successful transactions manually.\nsender doesn&#39;t have enough funds to send tx. The upfront cost is: 672197500000000000 and the sender&#39;s account only has: 0</code>",
    "sent": "2018-02-12T23:45:26.388Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a82273ee217167e2c7759e4",
    "text": "the dry run is using `ganache-cli` and forking the network, so you’re seeing ganache-cli’s error instead of geth’s error",
    "html": "the dry run is using <code>ganache-cli</code> and forking the network, so you’re seeing ganache-cli’s error instead of geth’s error",
    "sent": "2018-02-12T23:46:06.753Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8227407084124a346c6610",
    "text": "Though the account I am using to deploy definitely has fund",
    "html": "Though the account I am using to deploy definitely has fund",
    "sent": "2018-02-12T23:46:08.674Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a82274818f388e626962c71",
    "text": "ah",
    "html": "ah",
    "sent": "2018-02-12T23:46:16.898Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a82274bb3c4a0d376156942",
    "text": "I wonder if the fast syncmode is the culprit",
    "html": "I wonder if the fast syncmode is the culprit",
    "sent": "2018-02-12T23:46:19.671Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a82276e4a6b0dd32bc21d32",
    "text": "I was initially trying with `--light` but was not even syncing because I could not find any peers.",
    "html": "I was initially trying with <code>--light</code> but was not even syncing because I could not find any peers.",
    "sent": "2018-02-12T23:46:54.690Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a82279bf283b8e546533298",
    "text": "@makoto could you use TruffleHDWalletProvider with INFURA, perhaps? ([tutorial](http://truffleframework.com/tutorials/using-infura-custom-provider))",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span> could you use TruffleHDWalletProvider with INFURA, perhaps? (<a href=\"http://truffleframework.com/tutorials/using-infura-custom-provider\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">tutorial</a>)",
    "sent": "2018-02-12T23:47:39.378Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [
      {
        "url": "http://truffleframework.com/tutorials/using-infura-custom-provider"
      }
    ],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8227b893be87284dac2bf1",
    "text": "That's what I was using until I got my fund stolen :-(",
    "html": "That&#39;s what I was using until I got my fund stolen :-(",
    "sent": "2018-02-12T23:48:08.692Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8227e48c71e5e01d8930e9",
    "text": "eep",
    "html": "eep",
    "sent": "2018-02-12T23:48:52.676Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a82281f7084124a346c6a07",
    "text": "@makoto I was trying to use truffle/geth the other day without a fully synced node and noticed problems, maybe that’s the root of it",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span> I was trying to use truffle/geth the other day without a fully synced node and noticed problems, maybe that’s the root of it",
    "sent": "2018-02-12T23:49:51.028Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a822829b3c4a0d376156d3c",
    "text": "is your node fully synced?",
    "html": "is your node fully synced?",
    "sent": "2018-02-12T23:50:01.752Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a82285c7084124a346c6b21",
    "text": "yes, I spent the entire weekend syncing the mainnet. So painful....",
    "html": "yes, I spent the entire weekend syncing the mainnet. So painful....",
    "sent": "2018-02-12T23:50:52.706Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a82286318f388e62696312f",
    "text": "oh so there goes that hypothesis",
    "html": "oh so there goes that hypothesis",
    "sent": "2018-02-12T23:50:59.900Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8228abd74ee9f50db7ea42",
    "text": "@makoto I don’t suppose you have a fully synced testnet geth instance, and get that same error?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span> I don’t suppose you have a fully synced testnet geth instance, and get that same error?",
    "sent": "2018-02-12T23:52:11.076Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8228f77084124a346c6d44",
    "text": "I tried with `rinkeby` with `--light` mode and was working fine. I was able to daploy. However, `ropsten` with `--light` mode was not syncing at all.",
    "html": "I tried with <code>rinkeby</code> with <code>--light</code> mode and was working fine. I was able to daploy. However, <code>ropsten</code> with <code>--light</code> mode was not syncing at all.",
    "sent": "2018-02-12T23:53:27.540Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8229097084124a346c6d6d",
    "text": "I wonder if `parity` makes any difference",
    "html": "I wonder if <code>parity</code> makes any difference",
    "sent": "2018-02-12T23:53:45.234Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a82291bb3c4a0d376157120",
    "text": "@makoto ropsten’s block gas limit is substantially lower, so there might be a different problem. I am wondering if there’s some minor difference with RPC",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span> ropsten’s block gas limit is substantially lower, so there might be a different problem. I am wondering if there’s some minor difference with RPC",
    "sent": "2018-02-12T23:54:03.329Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8229314a6b0dd32bc22524",
    "text": "between main and rinkeby?",
    "html": "between main and rinkeby?",
    "sent": "2018-02-12T23:54:25.900Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8229368c71e5e01d89366b",
    "text": "between geth and ganache",
    "html": "between geth and ganache",
    "sent": "2018-02-12T23:54:30.973Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8229518c71e5e01d8936cd",
    "text": "but I don’t know why rinkeby would work where main doesn't",
    "html": "but I don’t know why rinkeby would work where main doesn&#39;t",
    "sent": "2018-02-12T23:54:57.875Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a822b5be217167e2c776f9c",
    "text": "The other option was to use `TruffleHDWalletProvider` but pass encrypted seed and add prompt to decrypto with password.",
    "html": "The other option was to use <code>TruffleHDWalletProvider</code> but pass encrypted seed and add prompt to decrypto with password.",
    "sent": "2018-02-13T00:03:39.349Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a822b8818f388e62696402b",
    "text": "@makoto does this work with your local geth instance?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span> does this work with your local geth instance?",
    "sent": "2018-02-13T00:04:24.807Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a822baed74ee9f50db7fa83",
    "text": "You mean `TruffleHDWalletProvider`? Never tried against local geth instance.",
    "html": "You mean <code>TruffleHDWalletProvider</code>? Never tried against local geth instance.",
    "sent": "2018-02-13T00:05:02.892Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a822bc77084124a346c7b36",
    "text": "But even if it does, does it make any difference?",
    "html": "But even if it does, does it make any difference?",
    "sent": "2018-02-13T00:05:27.687Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a822bd68c71e5e01d8943a4",
    "text": "just trying to narrow down what the problem might be",
    "html": "just trying to narrow down what the problem might be",
    "sent": "2018-02-13T00:05:42.270Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a822be48c71e5e01d8943c3",
    "text": "I see.",
    "html": "I see.",
    "sent": "2018-02-13T00:05:56.517Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a822c0f7084124a346c7bfe",
    "text": "So I set `providerURL` as `localhost:8545`?",
    "html": "So I set <code>providerURL</code> as <code>localhost:8545</code>?",
    "sent": "2018-02-13T00:06:39.684Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a822c2c18f388e626964373",
    "text": "@makoto `http://localhost:8545` probably",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span> <code>http://localhost:8545</code> probably",
    "sent": "2018-02-13T00:07:08.747Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8235d67084124a346ca34b",
    "text": "@gnidan  ok, deploying to local geth via truffle-privatekey-provider caused the same error.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"gnidan\" class=\"mention\">@gnidan</span>  ok, deploying to local geth via truffle-privatekey-provider caused the same error.",
    "sent": "2018-02-13T00:48:22.230Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [
      {
        "screenName": "gnidan",
        "userId": "57c6527940f3a6eec0624b81",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8235e77084124a346ca379",
    "text": "https://github.com/nosuchip/truffle-privatekey-provider/blob/master/index.js",
    "html": "<a href=\"https://github.com/nosuchip/truffle-privatekey-provider/blob/master/index.js\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/nosuchip/truffle-privatekey-provider/blob/master/index.js</a>",
    "sent": "2018-02-13T00:48:39.004Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [
      {
        "url": "https://github.com/nosuchip/truffle-privatekey-provider/blob/master/index.js"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8235f4e217167e2c779af7",
    "text": "@makoto so now I wonder what is different between geth locally vs. geth on infura",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span> so now I wonder what is different between geth locally vs. geth on infura",
    "sent": "2018-02-13T00:48:52.325Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a823610ce68c3bc747b1bf7",
    "text": "Ah, actually, I have to change truffle.js config",
    "html": "Ah, actually, I have to change truffle.js config",
    "sent": "2018-02-13T00:49:20.491Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a82361db3c4a0d37615aec8",
    "text": "have to add provider.",
    "html": "have to add provider.",
    "sent": "2018-02-13T00:49:33.184Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a82389bb3c4a0d37615b802",
    "text": "Add provider and tried with correct account.",
    "html": "Add provider and tried with correct account.",
    "sent": "2018-02-13T01:00:11.694Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8238a1b3c4a0d37615b806",
    "text": "Still getting `exceeds block gas limit`",
    "html": "Still getting <code>exceeds block gas limit</code>",
    "sent": "2018-02-13T01:00:17.150Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8238b9ce68c3bc747b2558",
    "text": "It may be that my geth mainnet never fully in sync as you initially diagnosed.",
    "html": "It may be that my geth mainnet never fully in sync as you initially diagnosed.",
    "sent": "2018-02-13T01:00:41.401Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a82392093be87284dac7944",
    "text": "@makoto you might be able to diagnose that by doing `web3.eth.getBlock(console.log)` in the geth console",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span> you might be able to diagnose that by doing <code>web3.eth.getBlock(console.log)</code> in the geth console",
    "sent": "2018-02-13T01:02:24.239Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8239a84a6b0dd32bc26f6d",
    "text": "```\n> web3.eth.getBlock(console.log)\nError: invalid argument 0: hex string without 0x prefix undefined\nundefined\n```",
    "html": "<pre><code>&gt; web3.eth.getBlock(<span class=\"built_in\">console</span>.log)\n<span class=\"built_in\">Error</span>: invalid argument <span class=\"number\">0</span>: hex <span class=\"built_in\">string</span> without <span class=\"number\">0</span>x prefix <span class=\"literal\">undefined</span>\n<span class=\"literal\">undefined</span></code></pre>",
    "sent": "2018-02-13T01:04:40.950Z",
    "editedAt": "2018-02-13T01:04:56.556Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a8239c418f388e626967ab3",
    "text": "oh oops @makoto I mean `getBlockNumber`",
    "html": "oh oops <span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span> I mean <code>getBlockNumber</code>",
    "sent": "2018-02-13T01:05:08.144Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 30,
    "urls": [],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a823b344a6b0dd32bc27575",
    "text": "It says null(0)",
    "html": "It says null(0)",
    "sent": "2018-02-13T01:11:16.891Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 30,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a823b67ce68c3bc747b3072",
    "text": "```\n> web3.eth.getBlockNumber(console.log)\nnull 0\nundefined\n> web3.version\n{\n  api: \"0.20.1\",\n  ethereum: \"0x3f\",\n  network: \"1\",\n  node: \"Geth/v1.7.3-stable/darwin-amd64/go1.9.4\",\n  whisper: undefined,\n  getEthereum: function(callback),\n  getNetwork: function(callback),\n  getNode: function(callback),\n  getWhisper: function(callback)\n}\n```",
    "html": "<pre><code>&gt; web3.eth.getBlockNumber(console.log)\nnull <span class=\"number\">0</span>\nundefined\n&gt; web3.version\n{\n  api: <span class=\"string\">\"0.20.1\"</span>,\n  ethereum: <span class=\"string\">\"0x3f\"</span>,\n  network: <span class=\"string\">\"1\"</span>,\n  node: <span class=\"string\">\"Geth/v1.7.3-stable/darwin-amd64/go1.9.4\"</span>,\n  whisper: undefined,\n  getEthereum: <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(callback)</span></span>,\n  getNetwork: <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(callback)</span></span>,\n  getNode: <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(callback)</span></span>,\n  getWhisper: <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(callback)</span></span>\n}</code></pre>",
    "sent": "2018-02-13T01:12:07.658Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 30,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8244f418f388e62696aabe",
    "text": "@makoto the `null` refers to “error” in the callback, so that’s good that it’s `null`... the `0` means the block number known to geth is `0`",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span> the <code>null</code> refers to “error” in the callback, so that’s good that it’s <code>null</code>... the <code>0</code> means the block number known to geth is <code>0</code>",
    "sent": "2018-02-13T01:52:52.539Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 31,
    "urls": [],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a824895b3c4a0d37615fc1f",
    "text": "Does that mean the sync is not complete?",
    "html": "Does that mean the sync is not complete?",
    "sent": "2018-02-13T02:08:21.475Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 31,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a824a6bce68c3bc747b6a79",
    "text": "@gnidan I think I finally fixed it by compiling the latest geth from master, trash the db and restart with light mode. `web3.eth.getBlockNumber(console.log)` is now showing the latest block number",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"gnidan\" class=\"mention\">@gnidan</span> I think I finally fixed it by compiling the latest geth from master, trash the db and restart with light mode. <code>web3.eth.getBlockNumber(console.log)</code> is now showing the latest block number",
    "sent": "2018-02-13T02:16:11.579Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 31,
    "urls": [],
    "mentions": [
      {
        "screenName": "gnidan",
        "userId": "57c6527940f3a6eec0624b81",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a824a8c7084124a346cf642",
    "text": "@makoto ah, does the problem go away with `truffle migrate` now?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span> ah, does the problem go away with <code>truffle migrate</code> now?",
    "sent": "2018-02-13T02:16:44.886Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 31,
    "urls": [],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a824b1e8c71e5e01d89c372",
    "text": "Yes. It managed to create a transaction. Currently waiting for confirmations",
    "html": "Yes. It managed to create a transaction. Currently waiting for confirmations",
    "sent": "2018-02-13T02:19:10.346Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 30,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a84674a5cc18726453b99d3",
    "text": "hi guys I have some contract and would get advice about security flaws ",
    "html": "hi guys I have some contract and would get advice about security flaws ",
    "sent": "2018-02-14T16:43:54.154Z",
    "fromUser": {
      "id": "59e88d19d73408ce4f7ab8c0",
      "username": "laitassou",
      "displayName": "laitassou",
      "url": "/laitassou",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/laitassou",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=128",
      "v": 38,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a854a6093be87284dbd13f5",
    "text": "Hello",
    "html": "Hello",
    "sent": "2018-02-15T08:52:48.325Z",
    "fromUser": {
      "id": "59e88d19d73408ce4f7ab8c0",
      "username": "laitassou",
      "displayName": "laitassou",
      "url": "/laitassou",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/laitassou",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=128",
      "v": 38,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8574b9b3c4a0d37627fb7e",
    "text": "How to share image here is gitter ? can't drag & drop ?",
    "html": "How to share image here is gitter ? can&#39;t drag &amp; drop ?",
    "sent": "2018-02-15T11:53:29.314Z",
    "fromUser": {
      "id": "59e88d19d73408ce4f7ab8c0",
      "username": "laitassou",
      "displayName": "laitassou",
      "url": "/laitassou",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/laitassou",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=128",
      "v": 38,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a85ac8cb3c4a0d37629810c",
    "text": "@laitassou you can copy paste. \nbut this group isn't really a place for adhoc security reviews. If you have a specific question, about a specific piece of code,  that would be best.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"laitassou\" class=\"mention\">@laitassou</span> you can copy paste.<br>but this group isn&#39;t really a place for adhoc security reviews. If you have a specific question, about a specific piece of code,  that would be best.",
    "sent": "2018-02-15T15:51:40.357Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [
      {
        "screenName": "laitassou",
        "userId": "59e88d19d73408ce4f7ab8c0",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a85ad4918f388e626a9e9d4",
    "text": "Hey guys, who can tell me, why if I call set function in Caller contract I`ve got an:\nerror: VM Exception while processing transaction: invalid opcode \n``` \ncontract Nub {\n    uint256 nub;\n    \n    \n    function setNub(uint256 _nub)  {\n        nub = _nub;\n    }\n    function getNub() public constant returns(uint256){\n        return nub;\n    }\n}\n\ncontract Caller {\n    Nub nub;\n    function get() public constant returns(uint256){\n        Nub nub = Nub(0xad062f09238a011401a3005400144e6f0729640d);\n        return nub.getNub();\n    }\n    function set()  {\n         Nub nub = Nub(0xad062f09238a011401a3005400144e6f0729640d);\n         nub.setNub(4);\n    }\n    \n}\n``` ",
    "html": "Hey guys, who can tell me, why if I call set function in Caller contract I`ve got an:<br>error: VM Exception while processing transaction: invalid opcode <pre><code>contract Nub {\n    uint256 nub;\n\n\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setNub</span><span class=\"params\">(uint256 _nub)</span>  </span>{\n        nub = _nub;\n    }\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getNub</span><span class=\"params\">()</span> <span class=\"title\">public</span> <span class=\"title\">constant</span> <span class=\"title\">returns</span><span class=\"params\">(uint256)</span></span>{\n        <span class=\"keyword\">return</span> nub;\n    }\n}\n\ncontract Caller {\n    Nub nub;\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get</span><span class=\"params\">()</span> <span class=\"title\">public</span> <span class=\"title\">constant</span> <span class=\"title\">returns</span><span class=\"params\">(uint256)</span></span>{\n        Nub nub = Nub(<span class=\"number\">0xad062f09238a011401a3005400144e6f0729640d</span>);\n        <span class=\"keyword\">return</span> nub.getNub();\n    }\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">set</span><span class=\"params\">()</span>  </span>{\n         Nub nub = Nub(<span class=\"number\">0xad062f09238a011401a3005400144e6f0729640d</span>);\n         nub.setNub(<span class=\"number\">4</span>);\n    }\n\n}</code></pre>",
    "sent": "2018-02-15T15:54:49.569Z",
    "editedAt": "2018-02-15T15:55:36.483Z",
    "fromUser": {
      "id": "5a85a236d73408ce4f8d475f",
      "username": "yefimets",
      "displayName": "Misha Yefimets",
      "url": "/yefimets",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/yefimets",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/31955761?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/31955761?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 3
  },
  {
    "id": "5a85ad5018f388e626a9ea4c",
    "text": "Thanks a lot",
    "html": "Thanks a lot",
    "sent": "2018-02-15T15:54:56.113Z",
    "fromUser": {
      "id": "5a85a236d73408ce4f8d475f",
      "username": "yefimets",
      "displayName": "Misha Yefimets",
      "url": "/yefimets",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/yefimets",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/31955761?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/31955761?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a85adcf93be87284dbfa317",
    "text": "```\nbrowser/invalid.sol:20:10: Warning: This declaration shadows an existing declaration.\n         Nub nub = Nub(0xad062f09238a011401a3005400144e6f0729640d);\n         ^-----^\nbrowser/invalid.sol:14:5: The shadowed declaration is here:\n    Nub nub;\n    ^-----^\n```",
    "html": "<pre><code>browser/invalid.<span class=\"string\">sol:</span><span class=\"number\">20</span>:<span class=\"number\">10</span>: <span class=\"string\">Warning:</span> This declaration shadows an existing declaration.\n         Nub nub = Nub(<span class=\"number\">0xad062f09238a011401a3005400144e6f0729640d</span>);\n         ^-----^\nbrowser/invalid.<span class=\"string\">sol:</span><span class=\"number\">14</span>:<span class=\"number\">5</span>: The shadowed declaration is <span class=\"string\">here:</span>\n    Nub nub;\n    ^-----^</code></pre>",
    "sent": "2018-02-15T15:57:03.880Z",
    "editedAt": "2018-02-15T15:57:13.063Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a85ade95cc187264542e691",
    "text": "seems like a possible explanation?",
    "html": "seems like a possible explanation?",
    "sent": "2018-02-15T15:57:29.871Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 32,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a85ae6993be87284dbfa79a",
    "text": "I'm wondering if that address even exists in your environment?",
    "html": "I&#39;m wondering if that address even exists in your environment?",
    "sent": "2018-02-15T15:59:37.362Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 33,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a85ae8b93be87284dbfa894",
    "text": "Yes",
    "html": "Yes",
    "sent": "2018-02-15T16:00:11.195Z",
    "fromUser": {
      "id": "5a85a236d73408ce4f8d475f",
      "username": "yefimets",
      "displayName": "Misha Yefimets",
      "url": "/yefimets",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/yefimets",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/31955761?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/31955761?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 33,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a85ae9418f388e626a9f321",
    "text": "that address exist",
    "html": "that address exist",
    "sent": "2018-02-15T16:00:20.100Z",
    "fromUser": {
      "id": "5a85a236d73408ce4f8d475f",
      "username": "yefimets",
      "displayName": "Misha Yefimets",
      "url": "/yefimets",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/yefimets",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/31955761?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/31955761?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 34,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a85aeb593be87284dbfa986",
    "text": "IDK, but when I redeploy Nub in remix, and update the address in Caller, it works.",
    "html": "IDK, but when I redeploy Nub in remix, and update the address in Caller, it works.",
    "sent": "2018-02-15T16:00:53.945Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 35,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a85aed593be87284dbfaacb",
    "text": "thank so mush, I will test",
    "html": "thank so mush, I will test",
    "sent": "2018-02-15T16:01:25.412Z",
    "fromUser": {
      "id": "5a85a236d73408ce4f8d475f",
      "username": "yefimets",
      "displayName": "Misha Yefimets",
      "url": "/yefimets",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/yefimets",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/31955761?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/31955761?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 35,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a85aee15cc187264542eda1",
    "text": "hope that it will fixed bug",
    "html": "hope that it will fixed bug",
    "sent": "2018-02-15T16:01:37.400Z",
    "fromUser": {
      "id": "5a85a236d73408ce4f8d475f",
      "username": "yefimets",
      "displayName": "Misha Yefimets",
      "url": "/yefimets",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/yefimets",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/31955761?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/31955761?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 37,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a85af26b3c4a0d376299544",
    "text": "This is a much more efficient approach too: \n\n```\ncontract Caller {\n    Nub nub = Nub(0x0dcd2f752394c41875e259e00bb44fd505297caf);\n    function get() public constant returns(uint256){\n        return nub.getNub();\n    }\n    function set()  {\n         nub.setNub(4);\n    }\n}\n```",
    "html": "This is a much more efficient approach too: <pre><code>contract Caller {\n    Nub nub = Nub(<span class=\"number\">0x0dcd2f752394c41875e259e00bb44fd505297caf</span>);\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get</span><span class=\"params\">()</span> <span class=\"title\">public</span> <span class=\"title\">constant</span> <span class=\"title\">returns</span><span class=\"params\">(uint256)</span></span>{\n        <span class=\"keyword\">return</span> nub.getNub();\n    }\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">set</span><span class=\"params\">()</span>  </span>{\n         nub.setNub(<span class=\"number\">4</span>);\n    }\n}</code></pre>",
    "sent": "2018-02-15T16:02:46.285Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 37,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a85afb74a6b0dd32bd641bf",
    "text": "set() same error :(",
    "html": "set() same error :(",
    "sent": "2018-02-15T16:05:11.061Z",
    "fromUser": {
      "id": "5a85a236d73408ce4f8d475f",
      "username": "yefimets",
      "displayName": "Misha Yefimets",
      "url": "/yefimets",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/yefimets",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/31955761?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/31955761?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 39,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a85afc3ce68c3bc748e7ff6",
    "text": "what your compiler version? ",
    "html": "what your compiler version? ",
    "sent": "2018-02-15T16:05:23.493Z",
    "fromUser": {
      "id": "5a85a236d73408ce4f8d475f",
      "username": "yefimets",
      "displayName": "Misha Yefimets",
      "url": "/yefimets",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/yefimets",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/31955761?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/31955761?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 39,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a85afca4a6b0dd32bd64224",
    "text": "does its matter?",
    "html": "does its matter?",
    "sent": "2018-02-15T16:05:30.734Z",
    "fromUser": {
      "id": "5a85a236d73408ce4f8d475f",
      "username": "yefimets",
      "displayName": "Misha Yefimets",
      "url": "/yefimets",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/yefimets",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/31955761?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/31955761?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 40,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a85b0bdb3c4a0d37629a11d",
    "text": "or maybe gas params?",
    "html": "or maybe gas params?",
    "sent": "2018-02-15T16:09:33.900Z",
    "fromUser": {
      "id": "5a85a236d73408ce4f8d475f",
      "username": "yefimets",
      "displayName": "Misha Yefimets",
      "url": "/yefimets",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/yefimets",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/31955761?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/31955761?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 40,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a85b5c3e217167e2c8b51e6",
    "text": "@maurelian  sorry, but what do you think is wrong?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span>  sorry, but what do you think is wrong?",
    "sent": "2018-02-15T16:30:59.770Z",
    "editedAt": "2018-02-15T16:31:12.029Z",
    "fromUser": {
      "id": "5a85a236d73408ce4f8d475f",
      "username": "yefimets",
      "displayName": "Misha Yefimets",
      "url": "/yefimets",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/yefimets",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/31955761?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/31955761?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 40,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a889ae56fba1a703a658090",
    "text": "If I want to retrieve blockchain data without meta mask, what do I use on the backend of my website to retrieve the state of a blockchain?",
    "html": "If I want to retrieve blockchain data without meta mask, what do I use on the backend of my website to retrieve the state of a blockchain?",
    "sent": "2018-02-17T21:13:09.514Z",
    "fromUser": {
      "id": "5a889a9ed73408ce4f8d9655",
      "username": "Econymous",
      "displayName": "Econymous",
      "url": "/Econymous",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Econymous",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/29104160?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/29104160?v=4&s=128",
      "v": 30,
      "gv": "4"
    },
    "unread": false,
    "readBy": 37,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a88e4c98f1c77ef3a1e8c57",
    "text": "@Sixophrenia the best way to go about this is to add events for every state change in the contract ( event logging described here https://blog.qtum.org/how-solidity-events-are-implemented-diving-into-the-ethereum-vm-part-6-30e07b3037b9 ), and you can use Express and decode the logs to extract your data",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"Sixophrenia\" class=\"mention\">@Sixophrenia</span> the best way to go about this is to add events for every state change in the contract ( event logging described here <a href=\"https://blog.qtum.org/how-solidity-events-are-implemented-diving-into-the-ethereum-vm-part-6-30e07b3037b9\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://blog.qtum.org/how-solidity-events-are-implemented-diving-into-the-ethereum-vm-part-6-30e07b3037b9</a> ), and you can use Express and decode the logs to extract your data",
    "sent": "2018-02-18T02:28:25.334Z",
    "fromUser": {
      "id": "591a05c7d73408ce4f5fc01b",
      "username": "djphillyg",
      "displayName": "Phillip Goldberg",
      "url": "/djphillyg",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/djphillyg",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/13560374?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/13560374?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 38,
    "urls": [
      {
        "url": "https://blog.qtum.org/how-solidity-events-are-implemented-diving-into-the-ethereum-vm-part-6-30e07b3037b9"
      }
    ],
    "mentions": [
      {
        "screenName": "Sixophrenia",
        "userId": "5a889a9ed73408ce4f8d9655",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a895ea1c3c5f8b90dcf8bd6",
    "text": "Hello All, I need some urgent help. I am trying to deploy HelloWorld contract in my private blockchain (Proof of Authority consensus using Puppeth) on go-ethereum. The command truffle migrate --network mypoa --reset takes me until deploying migrations.... I have tried varying gas limit in truffle.js, please help",
    "html": "Hello All, I need some urgent help. I am trying to deploy HelloWorld contract in my private blockchain (Proof of Authority consensus using Puppeth) on go-ethereum. The command truffle migrate --network mypoa --reset takes me until deploying migrations.... I have tried varying gas limit in truffle.js, please help",
    "sent": "2018-02-18T11:08:17.010Z",
    "fromUser": {
      "id": "5a895df9d73408ce4f8da304",
      "username": "myethereum",
      "displayName": "myethereum",
      "url": "/myethereum",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/myethereum",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/35741657?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/35741657?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 39,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8960b00202dc012e4e4153",
    "text": "Running migration: 1_initial_migration.js\n  Deploying Migrations...\n  ... 0x691d82cc68ab38c840f2dd66ca811b4627057d9fd08ec664044be1d845ec97da\n\n> INFO [02-18|16:29:16] Submitted contract creation              fullhash=0x691d82cc68ab38c840f2dd66ca811b4627057d9fd08ec664044be1d845ec97da contract=0x06E06f8A8F3Fc360C4C6971bc6f9049Cd6C1d854\n\n",
    "html": "<p>Running migration: 1_initial_migration.js<br>  Deploying Migrations...<br>  ... 0x691d82cc68ab38c840f2dd66ca811b4627057d9fd08ec664044be1d845ec97da</p><blockquote>\n<p>INFO [02-18|16:29:16] Submitted contract creation              fullhash=0x691d82cc68ab38c840f2dd66ca811b4627057d9fd08ec664044be1d845ec97da contract=0x06E06f8A8F3Fc360C4C6971bc6f9049Cd6C1d854</p></blockquote>\n",
    "sent": "2018-02-18T11:17:04.569Z",
    "fromUser": {
      "id": "5a895df9d73408ce4f8da304",
      "username": "myethereum",
      "displayName": "myethereum",
      "url": "/myethereum",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/myethereum",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/35741657?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/35741657?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 41,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8c9efb6f8b4b99469df5a6",
    "text": "Still waiting for a smart contract for noobs 2018 :sparkles: ",
    "html": "Still waiting for a smart contract for noobs 2018 :sparkles: ",
    "sent": "2018-02-20T22:19:39.252Z",
    "fromUser": {
      "id": "57870239c2f0db084a22e4ed",
      "username": "LaroXD",
      "displayName": "Lohit Aryan",
      "url": "/LaroXD",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/LaroXD",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20450775?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20450775?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 42,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8caa828f1c77ef3a3361cd",
    "text": "@LaroXD there is one. you're talking about one you can learn from? there is one.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"LaroXD\" class=\"mention\">@LaroXD</span> there is one. you&#39;re talking about one you can learn from? there is one.",
    "sent": "2018-02-20T23:08:50.315Z",
    "fromUser": {
      "id": "5a889a9ed73408ce4f8d9655",
      "username": "Econymous",
      "displayName": "Econymous",
      "url": "/Econymous",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Econymous",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/29104160?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/29104160?v=4&s=128",
      "v": 30,
      "gv": "4"
    },
    "unread": false,
    "readBy": 41,
    "urls": [],
    "mentions": [
      {
        "screenName": "LaroXD",
        "userId": "57870239c2f0db084a22e4ed",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8caa8a0202dc012e61864d",
    "text": "THanks @djphillyg ",
    "html": "THanks <span data-link-type=\"mention\" data-screen-name=\"djphillyg\" class=\"mention\">@djphillyg</span> ",
    "sent": "2018-02-20T23:08:58.989Z",
    "fromUser": {
      "id": "5a889a9ed73408ce4f8d9655",
      "username": "Econymous",
      "displayName": "Econymous",
      "url": "/Econymous",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Econymous",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/29104160?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/29104160?v=4&s=128",
      "v": 30,
      "gv": "4"
    },
    "unread": false,
    "readBy": 43,
    "urls": [],
    "mentions": [
      {
        "screenName": "djphillyg",
        "userId": "591a05c7d73408ce4f5fc01b",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8cbc67888332ee3aae6fff",
    "text": "I am almost done going through all the docs and I started with basic implementation from eth site but looking for more indepth material.",
    "html": "I am almost done going through all the docs and I started with basic implementation from eth site but looking for more indepth material.",
    "sent": "2018-02-21T00:25:11.243Z",
    "fromUser": {
      "id": "57870239c2f0db084a22e4ed",
      "username": "LaroXD",
      "displayName": "Lohit Aryan",
      "url": "/LaroXD",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/LaroXD",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20450775?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20450775?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 42,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8d6207888332ee3ab1b1a5",
    "text": "where can I find drizzle tutorials",
    "html": "where can I find drizzle tutorials",
    "sent": "2018-02-21T12:11:51.106Z",
    "fromUser": {
      "id": "5a8d5de7d73408ce4f8e26f3",
      "username": "deepskandpal",
      "displayName": "Deepanshu Kandpal",
      "url": "/deepskandpal",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/deepskandpal",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10810284?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10810284?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 42,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8e8b678f1c77ef3a3d8c38",
    "text": "@maurelian  Hi, I can't past images here",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span>  Hi, I can&#39;t past images here",
    "sent": "2018-02-22T09:20:39.625Z",
    "fromUser": {
      "id": "59e88d19d73408ce4f7ab8c0",
      "username": "laitassou",
      "displayName": "laitassou",
      "url": "/laitassou",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/laitassou",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=128",
      "v": 38,
      "gv": "4"
    },
    "unread": false,
    "readBy": 39,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8e8d0f53c1dbb7436004c8",
    "text": "You can just use this snippet\n```\n![alt](http://)\n```",
    "html": "You can just use this snippet<pre><code>![<span class=\"link_label\">alt</span>](<span class=\"link_url\">http://</span>)</code></pre>",
    "sent": "2018-02-22T09:27:43.637Z",
    "fromUser": {
      "id": "5a8d9ad0d73408ce4f8e3189",
      "username": "mirgj",
      "displayName": "mirgj",
      "url": "/mirgj",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/mirgj",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/17768831?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/17768831?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 38,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a901e5ae4ff28713ab88299",
    "text": "does it makes sense to have an ownable contract with a method that can send its balance to his owner? Or is somehow possibile to do it anyway and it doesn't make much sense make it explicit?",
    "html": "does it makes sense to have an ownable contract with a method that can send its balance to his owner? Or is somehow possibile to do it anyway and it doesn&#39;t make much sense make it explicit?",
    "sent": "2018-02-23T13:59:54.576Z",
    "fromUser": {
      "id": "5a8d9ad0d73408ce4f8e3189",
      "username": "mirgj",
      "displayName": "mirgj",
      "url": "/mirgj",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/mirgj",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/17768831?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/17768831?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 42,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a9035e8e4ff28713ab917e6",
    "text": "function withdraw() onlyOwner { owner.transfer(this.balance); } ?",
    "html": "function withdraw() onlyOwner { owner.transfer(this.balance); } ?",
    "sent": "2018-02-23T15:40:24.964Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 39,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a9035fa6f8b4b9946b1ce3b",
    "text": "@mirgj :)",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"mirgj\" class=\"mention\">@mirgj</span> :)",
    "sent": "2018-02-23T15:40:42.160Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 40,
    "urls": [],
    "mentions": [
      {
        "screenName": "mirgj",
        "userId": "5a8d9ad0d73408ce4f8e3189",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a9038d48f1c77ef3a470003",
    "text": "@chuacw thanks, but the question was different :) it make sense at contract-design level? \n",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"chuacw\" class=\"mention\">@chuacw</span> thanks, but the question was different :) it make sense at contract-design level? ",
    "sent": "2018-02-23T15:52:52.720Z",
    "fromUser": {
      "id": "5a8d9ad0d73408ce4f8e3189",
      "username": "mirgj",
      "displayName": "mirgj",
      "url": "/mirgj",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/mirgj",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/17768831?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/17768831?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 41,
    "urls": [],
    "mentions": [
      {
        "screenName": "chuacw",
        "userId": "59cf1180d73408ce4f77fc7e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a903a348f1c77ef3a4708a2",
    "text": "@mirgj  what do you mean it makes sense at contract-design level???",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"mirgj\" class=\"mention\">@mirgj</span>  what do you mean it makes sense at contract-design level???",
    "sent": "2018-02-23T15:58:44.668Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 42,
    "urls": [],
    "mentions": [
      {
        "screenName": "mirgj",
        "userId": "5a8d9ad0d73408ce4f8e3189",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a903a3fe4ff28713ab93231",
    "text": "I'm not sure I understand what your entire question is now.",
    "html": "I&#39;m not sure I understand what your entire question is now.",
    "sent": "2018-02-23T15:58:55.505Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 41,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a903caf888332ee3ac1bd54",
    "text": "@chuacw we're inside _smart-contract-best-practices_ and I wanted to know the best practice. I already have such method inside my contract. My question was more like if it has to be explicit to have a withdraw function or it's implicit. Probably the question doesn't make much sense (I just figured it out ahah) and any case is different :smile: ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"chuacw\" class=\"mention\">@chuacw</span> we&#39;re inside <em>smart-contract-best-practices</em> and I wanted to know the best practice. I already have such method inside my contract. My question was more like if it has to be explicit to have a withdraw function or it&#39;s implicit. Probably the question doesn&#39;t make much sense (I just figured it out ahah) and any case is different :smile: ",
    "sent": "2018-02-23T16:09:19.241Z",
    "fromUser": {
      "id": "5a8d9ad0d73408ce4f8e3189",
      "username": "mirgj",
      "displayName": "mirgj",
      "url": "/mirgj",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/mirgj",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/17768831?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/17768831?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 43,
    "urls": [],
    "mentions": [
      {
        "screenName": "chuacw",
        "userId": "59cf1180d73408ce4f77fc7e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a903cdc888332ee3ac1be6e",
    "text": "@mirgj  great that you  figured it out. it depends on the requirements of the business case for the smart contract.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"mirgj\" class=\"mention\">@mirgj</span>  great that you  figured it out. it depends on the requirements of the business case for the smart contract.",
    "sent": "2018-02-23T16:10:04.791Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 45,
    "urls": [],
    "mentions": [
      {
        "screenName": "mirgj",
        "userId": "5a8d9ad0d73408ce4f8e3189",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a903d010202dc012e75d64f",
    "text": "yup... cheers :+1: ",
    "html": "yup... cheers :+1: ",
    "sent": "2018-02-23T16:10:41.761Z",
    "fromUser": {
      "id": "5a8d9ad0d73408ce4f8e3189",
      "username": "mirgj",
      "displayName": "mirgj",
      "url": "/mirgj",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/mirgj",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/17768831?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/17768831?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 45,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a911423e4ff28713abd40c1",
    "text": "Hello guys! Is it possible to write a js test with updatable time using truffle core provider? ",
    "html": "Hello guys! Is it possible to write a js test with updatable time using truffle core provider? ",
    "sent": "2018-02-24T07:28:35.108Z",
    "fromUser": {
      "id": "5587efd415522ed4b3e25eb7",
      "username": "MioGreen",
      "displayName": "Mikhail Zelenin",
      "url": "/MioGreen",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/MioGreen",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/631319?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/631319?v=4&s=128",
      "v": 2,
      "gv": "4"
    },
    "unread": false,
    "readBy": 46,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a96d404e4d1c63604a69782",
    "text": "Hey @MioGreen, wow... slow response, sorry. \nyes, there is a custom RPC method call evm_increaseTime. See here: https://ethereum.stackexchange.com/questions/21509/truffle-testrpc-time-manipulation#21517",
    "html": "Hey <span data-link-type=\"mention\" data-screen-name=\"MioGreen\" class=\"mention\">@MioGreen</span>, wow... slow response, sorry.<br>yes, there is a custom RPC method call evm_increaseTime. See here: <a href=\"https://ethereum.stackexchange.com/questions/21509/truffle-testrpc-time-manipulation#21517\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://ethereum.stackexchange.com/questions/21509/truffle-testrpc-time-manipulation#21517</a>",
    "sent": "2018-02-28T16:08:36.418Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 43,
    "urls": [
      {
        "url": "https://ethereum.stackexchange.com/questions/21509/truffle-testrpc-time-manipulation#21517"
      }
    ],
    "mentions": [
      {
        "screenName": "MioGreen",
        "userId": "5587efd415522ed4b3e25eb7",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a997f0a35dd17022e129912",
    "text": "What are the best practices when dealing with tests and account balances? By changing the balance of the test accounts, a test suite can have a side effect on the next test suites.",
    "html": "What are the best practices when dealing with tests and account balances? By changing the balance of the test accounts, a test suite can have a side effect on the next test suites.",
    "sent": "2018-03-02T16:42:50.244Z",
    "fromUser": {
      "id": "543b8139db8155e6700cafa2",
      "username": "phbernard",
      "displayName": "Philippe Bernard",
      "url": "/phbernard",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/phbernard",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/423852?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/423852?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 41,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a9bbcd78f1c77ef3a7e648c",
    "text": "@phbernard  Does this help? https://ethereum.stackexchange.com/questions/29250/truffle-tests-not-resetting-account-states. It looks like you should be able to refresh testrpc right before a test suite.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"phbernard\" class=\"mention\">@phbernard</span>  Does this help? <a href=\"https://ethereum.stackexchange.com/questions/29250/truffle-tests-not-resetting-account-states\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://ethereum.stackexchange.com/questions/29250/truffle-tests-not-resetting-account-states</a>. It looks like you should be able to refresh testrpc right before a test suite.",
    "sent": "2018-03-04T09:31:03.161Z",
    "editedAt": "2018-03-04T09:31:54.301Z",
    "fromUser": {
      "id": "5a4e6586d73408ce4f86204f",
      "username": "foogunlana",
      "displayName": "Foluso",
      "url": "/foogunlana",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/foogunlana",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5675998?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5675998?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 40,
    "urls": [
      {
        "url": "https://ethereum.stackexchange.com/questions/29250/truffle-tests-not-resetting-account-states"
      }
    ],
    "mentions": [
      {
        "screenName": "phbernard",
        "userId": "543b8139db8155e6700cafa2",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a9bbe28e4ff28713af04e37",
    "text": "Though the syntax might have changed since it's ganache instead",
    "html": "Though the syntax might have changed since it&#39;s ganache instead",
    "sent": "2018-03-04T09:36:40.066Z",
    "fromUser": {
      "id": "5a4e6586d73408ce4f86204f",
      "username": "foogunlana",
      "displayName": "Foluso",
      "url": "/foogunlana",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/foogunlana",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5675998?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5675998?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 40,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a9bbec4f3f6d24c6834f3ee",
    "text": "Damn! I missed this SO question. Thank you @foogunlana for the tip.",
    "html": "Damn! I missed this SO question. Thank you <span data-link-type=\"mention\" data-screen-name=\"foogunlana\" class=\"mention\">@foogunlana</span> for the tip.",
    "sent": "2018-03-04T09:39:16.681Z",
    "fromUser": {
      "id": "543b8139db8155e6700cafa2",
      "username": "phbernard",
      "displayName": "Philippe Bernard",
      "url": "/phbernard",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/phbernard",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/423852?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/423852?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 40,
    "urls": [],
    "mentions": [
      {
        "screenName": "foogunlana",
        "userId": "5a4e6586d73408ce4f86204f",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a9bbef653c1dbb743a04586",
    "text": "No problem. Let me know if it actually works!",
    "html": "No problem. Let me know if it actually works!",
    "sent": "2018-03-04T09:40:06.206Z",
    "fromUser": {
      "id": "5a4e6586d73408ce4f86204f",
      "username": "foogunlana",
      "displayName": "Foluso",
      "url": "/foogunlana",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/foogunlana",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5675998?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5675998?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 41,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a9c5a0ae4ff28713af2fe6b",
    "text": "Hello everyone, \nis it possible to load deployed contract by address on remix and control functions of the contract?\nI could load but could not call functions at all.\nplease guide me.",
    "html": "Hello everyone,<br>is it possible to load deployed contract by address on remix and control functions of the contract?<br>I could load but could not call functions at all.<br>please guide me.",
    "sent": "2018-03-04T20:41:46.943Z",
    "fromUser": {
      "id": "5a7178b8d73408ce4f8af93e",
      "username": "AntonCorbijn",
      "displayName": "Anton",
      "url": "/AntonCorbijn",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AntonCorbijn",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/32306632?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/32306632?v=4&s=128",
      "v": 2,
      "gv": "4"
    },
    "unread": false,
    "readBy": 38,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a9c79f78f1c77ef3a819a61",
    "text": "@AntonCorbijn Depending on the web3 instance you are using, you are probably not the contract owner/don't have permissions or something similar",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"AntonCorbijn\" class=\"mention\">@AntonCorbijn</span> Depending on the web3 instance you are using, you are probably not the contract owner/don&#39;t have permissions or something similar",
    "sent": "2018-03-04T22:57:59.160Z",
    "fromUser": {
      "id": "5a32b6bed73408ce4f83598c",
      "username": "vidorge",
      "displayName": "Vidor Gencel",
      "url": "/vidorge",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/vidorge",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/989725?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/989725?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 40,
    "urls": [],
    "mentions": [
      {
        "screenName": "AntonCorbijn",
        "userId": "5a7178b8d73408ce4f8af93e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5c026b517037a212a7f68c",
    "text": "Thanks @maurelian ! I actually wrote 2 contracts to test my understanding last night, and just saw your code. Victim @ [0x3aE1A22Ccdd641e4dD24A13Fbb8ec570FEA17C8E](https://ropsten.etherscan.io/address/0x3aE1A22Ccdd641e4dD24A13Fbb8ec570FEA17C8E#code) and Kill @ [0x6566d9bE7b2cA98Cc3e9346b9770E021f6183c0B](https://ropsten.etherscan.io/address/0x6566d9bE7b2cA98Cc3e9346b9770E021f6183c0B#code). They're on Ropsten and comes with source!",
    "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> ! I actually wrote 2 contracts to test my understanding last night, and just saw your code. Victim @ <a href=\"https://ropsten.etherscan.io/address/0x3aE1A22Ccdd641e4dD24A13Fbb8ec570FEA17C8E#code\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">0x3aE1A22Ccdd641e4dD24A13Fbb8ec570FEA17C8E</a> and Kill @ <a href=\"https://ropsten.etherscan.io/address/0x6566d9bE7b2cA98Cc3e9346b9770E021f6183c0B#code\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">0x6566d9bE7b2cA98Cc3e9346b9770E021f6183c0B</a>. They&#39;re on Ropsten and comes with source!",
    "sent": "2018-01-15T01:22:51.697Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 28,
    "urls": [
      {
        "url": "https://ropsten.etherscan.io/address/0x3aE1A22Ccdd641e4dD24A13Fbb8ec570FEA17C8E#code"
      },
      {
        "url": "https://ropsten.etherscan.io/address/0x6566d9bE7b2cA98Cc3e9346b9770E021f6183c0B#code"
      }
    ],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5e6d6e51915d962afe15cc",
    "text": "Hello. Can anyone enlighten me the use case when someone want to use Claimable (where it first transfer to pending ownership which user has to claim) over normal Ownable? This is similar pattern to Pull / Push payment pattern but I am wondering why you need this pattern to just change ownership as there is no re-entrancy issues. https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/ownership/Claimable.sol ",
    "html": "Hello. Can anyone enlighten me the use case when someone want to use Claimable (where it first transfer to pending ownership which user has to claim) over normal Ownable? This is similar pattern to Pull / Push payment pattern but I am wondering why you need this pattern to just change ownership as there is no re-entrancy issues. <a href=\"https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/ownership/Claimable.sol\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/ownership/Claimable.sol</a> ",
    "sent": "2018-01-16T21:23:58.021Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [
      {
        "url": "https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/ownership/Claimable.sol"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5e6e19b48e8c3566eace11",
    "text": "Good question. It is a bit like Pull/Push, but as you point out, you're not doing a send or external call, so not sure what the benefit is. ",
    "html": "Good question. It is a bit like Pull/Push, but as you point out, you&#39;re not doing a send or external call, so not sure what the benefit is. ",
    "sent": "2018-01-16T21:26:49.973Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5e6e29290a1f45619838d1",
    "text": "I guess it enables the pendingOwner to refuse ownership",
    "html": "I guess it enables the pendingOwner to refuse ownership",
    "sent": "2018-01-16T21:27:05.571Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5e6ea481cd9a5d7ea2cae9",
    "text": "I know why. It prevents to send to an address no one has access by mistake.",
    "html": "I know why. It prevents to send to an address no one has access by mistake.",
    "sent": "2018-01-16T21:29:08.368Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5e6ead517037a212b50e54",
    "text": "ah",
    "html": "ah",
    "sent": "2018-01-16T21:29:17.932Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5e6eba97cedeb0482e0e0e",
    "text": "That's actually quite neat.",
    "html": "That&#39;s actually quite neat.",
    "sent": "2018-01-16T21:29:30.848Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5e6fe4517037a212b5185f",
    "text": ":+1: ",
    "html": ":+1: ",
    "sent": "2018-01-16T21:34:28.006Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5ede425a9ebe4f7597c904",
    "text": "how can i convert uint to string in solidity",
    "html": "how can i convert uint to string in solidity",
    "sent": "2018-01-17T05:25:22.018Z",
    "fromUser": {
      "id": "59f1aad5d73408ce4f7bcba8",
      "username": "26rahulsingh",
      "displayName": "26rahulsingh",
      "url": "/26rahulsingh",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/26rahulsingh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8557747?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8557747?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 28,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5f6d76b48e8c3566f00b3f",
    "text": "@26rahulsingh if at all possible, you should do that off-chain in the interface or server side. ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"26rahulsingh\" class=\"mention\">@26rahulsingh</span> if at all possible, you should do that off-chain in the interface or server side. ",
    "sent": "2018-01-17T15:36:22.310Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [
      {
        "screenName": "26rahulsingh",
        "userId": "59f1aad5d73408ce4f7bcba8",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5f6d82290a1f45619d6cf6",
    "text": "no sense paying for that kind of computation",
    "html": "no sense paying for that kind of computation",
    "sent": "2018-01-17T15:36:34.614Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5f8621ba39a53f1a290ddb",
    "text": "Hello friends, I've been trying to figure out the pros/cons of this for a while building my app and wanted to get your input. I'm sure it's a common question...\n\nI'm building an app that would normally require a database. A simplified example would be, say something like a file hosting service. Someone uploads a file, and others can pay ether to download said file. The file has metadata associated with it (file name, description, etc, etc.). \n\nIn the DApp I need a way to list the files. At a minimum. Ideally, would be able to categorize them, search them, etc.  Initially, I was thinking to store these inside a Factory contract (FileFactory.sol, File.sol) but it seems like it's going to be a pain listing these let alone searching, etc. \n\nDoes anyone have any suggestions? Alternative would be to use a normal DB and reference the File.sol contracts by address. But it kind of defeats the purpose of a DApp if you need a centralized DB. ",
    "html": "<p>Hello friends, I&#39;ve been trying to figure out the pros/cons of this for a while building my app and wanted to get your input. I&#39;m sure it&#39;s a common question...</p><p>I&#39;m building an app that would normally require a database. A simplified example would be, say something like a file hosting service. Someone uploads a file, and others can pay ether to download said file. The file has metadata associated with it (file name, description, etc, etc.). </p><p>In the DApp I need a way to list the files. At a minimum. Ideally, would be able to categorize them, search them, etc.  Initially, I was thinking to store these inside a Factory contract (FileFactory.sol, File.sol) but it seems like it&#39;s going to be a pain listing these let alone searching, etc. </p><p>Does anyone have any suggestions? Alternative would be to use a normal DB and reference the File.sol contracts by address. But it kind of defeats the purpose of a DApp if you need a centralized DB. </p>",
    "sent": "2018-01-17T17:21:37.952Z",
    "editedAt": "2018-01-17T17:26:24.690Z",
    "fromUser": {
      "id": "5a414eddd73408ce4f84cb83",
      "username": "AndyHinEtc_twitter",
      "displayName": "Andy Hin",
      "url": "/AndyHinEtc_twitter",
      "avatarUrl": "https://avatars-05.gitter.im/g/u/AndyHinEtc_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/656661623373963265/hsemF0fk_bigger.png",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/656661623373963265/hsemF0fk.png"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a60b93eb48e8c3566f79a3a",
    "text": "Use IPFS?",
    "html": "Use IPFS?",
    "sent": "2018-01-18T15:11:58.033Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a60f74fce68c3bc74d487c1",
    "text": "It doesn't entirely defeat the purpose of a dapp to have a centralized DB; the important part of a dapp is that the trusted source of truth is the blockchain. So as long as someone can always determine if your centralized service is behaving badly (and can ideally move their activity to some other service), that's perfectly reasonable for most applications. 100% decentralized, unstoppable apps are only really required for things that _need_ to have 0 central points of failure.",
    "html": "It doesn&#39;t entirely defeat the purpose of a dapp to have a centralized DB; the important part of a dapp is that the trusted source of truth is the blockchain. So as long as someone can always determine if your centralized service is behaving badly (and can ideally move their activity to some other service), that&#39;s perfectly reasonable for most applications. 100% decentralized, unstoppable apps are only really required for things that <em>need</em> to have 0 central points of failure.",
    "sent": "2018-01-18T19:36:47.250Z",
    "fromUser": {
      "id": "54830a6edb8155e6700dc42f",
      "username": "shrugs",
      "displayName": "Matt Condon",
      "url": "/shrugs",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/shrugs",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1535001?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1535001?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a611b080cef4fed2ebf786e",
    "text": "Hello. Are there anyone deploying smart contract remotely via Infura using https://github.com/trufflesuite/truffle-hdwallet-provider rather than your local geth? I was passing (unencrypted mnemonic) to the provider then it was compromised and lost some Ether(how the hacker got access to my file systems, no idea) so very keen to learn how other people protect ether on their deployment environment. ",
    "html": "Hello. Are there anyone deploying smart contract remotely via Infura using <a href=\"https://github.com/trufflesuite/truffle-hdwallet-provider\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/trufflesuite/truffle-hdwallet-provider</a> rather than your local geth? I was passing (unencrypted mnemonic) to the provider then it was compromised and lost some Ether(how the hacker got access to my file systems, no idea) so very keen to learn how other people protect ether on their deployment environment. ",
    "sent": "2018-01-18T22:09:12.525Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 28,
    "urls": [
      {
        "url": "https://github.com/trufflesuite/truffle-hdwallet-provider"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a611b1851915d962afe33a7",
    "text": "FYI, this is how I currently pass mnemonic to deploy https://github.com/makoto/blockparty/blob/master/truffle.js#L8",
    "html": "FYI, this is how I currently pass mnemonic to deploy <a href=\"https://github.com/makoto/blockparty/blob/master/truffle.js#L8\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/makoto/blockparty/blob/master/truffle.js#L8</a>",
    "sent": "2018-01-18T22:09:28.284Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 28,
    "urls": [
      {
        "url": "https://github.com/makoto/blockparty/blob/master/truffle.js#L8"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a61204b5a9ebe4f75a53585",
    "text": "Hmm, assuming you're using hd-wallet-provider, the mnemonic never leaves the system; only signed messages. That said, secrets could be grabbed from bash history, and files sitting on disk.",
    "html": "Hmm, assuming you&#39;re using hd-wallet-provider, the mnemonic never leaves the system; only signed messages. That said, secrets could be grabbed from bash history, and files sitting on disk.",
    "sent": "2018-01-18T22:31:39.703Z",
    "fromUser": {
      "id": "54830a6edb8155e6700dc42f",
      "username": "shrugs",
      "displayName": "Matt Condon",
      "url": "/shrugs",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/shrugs",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1535001?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1535001?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a61205bce68c3bc74d58a50",
    "text": "Is this script only running on your local machine? Also really sorry this happened :'(",
    "html": "Is this script only running on your local machine? Also really sorry this happened :&#39;(",
    "sent": "2018-01-18T22:31:55.903Z",
    "fromUser": {
      "id": "54830a6edb8155e6700dc42f",
      "username": "shrugs",
      "displayName": "Matt Condon",
      "url": "/shrugs",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/shrugs",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1535001?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1535001?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a619ce3290a1f4561a96fbe",
    "text": "Yes, only runs from my local machine.",
    "html": "Yes, only runs from my local machine.",
    "sent": "2018-01-19T07:23:15.105Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a619d39517037a212c6aaf5",
    "text": "The Eth was transferred when I was at an airport so guessing someone had access to my file system there.",
    "html": "The Eth was transferred when I was at an airport so guessing someone had access to my file system there.",
    "sent": "2018-01-19T07:24:41.887Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a619d9f9cdc721e4f9e5573",
    "text": "Like you said the only signed transaction went over network so not sure if enabling VPN had any difference",
    "html": "Like you said the only signed transaction went over network so not sure if enabling VPN had any difference",
    "sent": "2018-01-19T07:26:23.169Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a61cb8b5a9ebe4f75a87f49",
    "text": "hi everyone, it's good to be part of this room. I would like to know some best practices for Token contracts",
    "html": "hi everyone, it&#39;s good to be part of this room. I would like to know some best practices for Token contracts",
    "sent": "2018-01-19T10:42:19.204Z",
    "fromUser": {
      "id": "529c69deed5ab0b3bf04d1c5",
      "username": "abdul",
      "displayName": "Abdul Qabiz",
      "url": "/abdul",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/abdul",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/64568?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/64568?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a61cbb35a9ebe4f75a8800c",
    "text": "is it good idea to check for \"transferEnabled\" or similar stuff in token's transfer* methods?",
    "html": "is it good idea to check for &quot;transferEnabled&quot; or similar stuff in token&#39;s transfer* methods?",
    "sent": "2018-01-19T10:42:59.127Z",
    "fromUser": {
      "id": "529c69deed5ab0b3bf04d1c5",
      "username": "abdul",
      "displayName": "Abdul Qabiz",
      "url": "/abdul",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/abdul",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/64568?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/64568?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a61cbe5290a1f4561aa7cee",
    "text": "I believe, if someone has bought a token, they own it, they can transfer or even burn if they wish; as contract owner I shouldn't interfere in the process? ",
    "html": "I believe, if someone has bought a token, they own it, they can transfer or even burn if they wish; as contract owner I shouldn&#39;t interfere in the process? ",
    "sent": "2018-01-19T10:43:49.290Z",
    "fromUser": {
      "id": "529c69deed5ab0b3bf04d1c5",
      "username": "abdul",
      "displayName": "Abdul Qabiz",
      "url": "/abdul",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/abdul",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/64568?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/64568?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 28,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a61cbece01412265064b2f2",
    "text": "What's best practice around it?",
    "html": "What&#39;s best practice around it?",
    "sent": "2018-01-19T10:43:56.171Z",
    "fromUser": {
      "id": "529c69deed5ab0b3bf04d1c5",
      "username": "abdul",
      "displayName": "Abdul Qabiz",
      "url": "/abdul",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/abdul",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/64568?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/64568?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 28,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a61dcac5ade18be39970406",
    "text": "@makoto I’ve seen people accidentally making their mnemonics public by either committing a unwanted change to .gitignore and pushing or by having those in a private repo and then making it a submodule of a public repo and commiting it as well",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span> I’ve seen people accidentally making their mnemonics public by either committing a unwanted change to .gitignore and pushing or by having those in a private repo and then making it a submodule of a public repo and commiting it as well",
    "sent": "2018-01-19T11:55:24.414Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 28,
    "urls": [],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a61dcb6e014122650651bd5",
    "text": "I’m sorry that happened 😞",
    "html": "I’m sorry that happened 😞",
    "sent": "2018-01-19T11:55:34.506Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a61dcd69cdc721e4f9fc2ef",
    "text": "@abdul have you checked out ConsenSys’ Tokens repo?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"abdul\" class=\"mention\">@abdul</span> have you checked out ConsenSys’ Tokens repo?",
    "sent": "2018-01-19T11:56:06.900Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [
      {
        "screenName": "abdul",
        "userId": "529c69deed5ab0b3bf04d1c5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a61dcf05ade18be39970649",
    "text": "https://github.com/ConsenSys/Tokens?files=1",
    "html": "<a href=\"https://github.com/ConsenSys/Tokens?files=1\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/ConsenSys/Tokens?files=1</a>",
    "sent": "2018-01-19T11:56:32.557Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [
      {
        "url": "https://github.com/ConsenSys/Tokens?files=1"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a61dd3a5ade18be399708f8",
    "text": "It is always up-to-date with ConsenSys Diligence’s best practices ",
    "html": "It is always up-to-date with ConsenSys Diligence’s best practices ",
    "sent": "2018-01-19T11:57:46.507Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a61dd5e5a9ebe4f75a8e8a0",
    "text": "We are in the process of adding EIP-721 tokens (NFTs)",
    "html": "We are in the process of adding EIP-721 tokens (NFTs)",
    "sent": "2018-01-19T11:58:22.912Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 30,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a61dd799cdc721e4f9fc7e8",
    "text": "And possibly in a very near future an updated EIP for EIP-20",
    "html": "And possibly in a very near future an updated EIP for EIP-20",
    "sent": "2018-01-19T11:58:49.660Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 30,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a61dd8f5ade18be39970ab2",
    "text": "If that’s what you meant by “transferEnabled”",
    "html": "If that’s what you meant by “transferEnabled”",
    "sent": "2018-01-19T11:59:11.339Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 30,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a620e4bae53c159030af73f",
    "text": "@GNSPS I will look at your ConsenSys's Token repo. I do follow consensys for a lot of things, and really thankful for all articles and knowledge sharing. I wanted to know something else.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"GNSPS\" class=\"mention\">@GNSPS</span> I will look at your ConsenSys&#39;s Token repo. I do follow consensys for a lot of things, and really thankful for all articles and knowledge sharing. I wanted to know something else.",
    "sent": "2018-01-19T15:27:07.297Z",
    "fromUser": {
      "id": "529c69deed5ab0b3bf04d1c5",
      "username": "abdul",
      "displayName": "Abdul Qabiz",
      "url": "/abdul",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/abdul",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/64568?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/64568?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 30,
    "urls": [],
    "mentions": [
      {
        "screenName": "GNSPS",
        "userId": "54bd42addb8155e6700ed45e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a620ea2290a1f4561ac1fa0",
    "text": "@GNSPS I think it's wrong idea for a contract owner to be able to freeze or lock or disable token transfers. I have seen it in contracts, even in example on ethereum.org[1] -- freezeAccount(..) sort of thing\n\n[1] https://ethereum.org/token#the-code",
    "html": "<p><span data-link-type=\"mention\" data-screen-name=\"GNSPS\" class=\"mention\">@GNSPS</span> I think it&#39;s wrong idea for a contract owner to be able to freeze or lock or disable token transfers. I have seen it in contracts, even in example on ethereum.org[1] -- freezeAccount(..) sort of thing</p><p>[1] <a href=\"https://ethereum.org/token#the-code\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://ethereum.org/token#the-code</a></p>",
    "sent": "2018-01-19T15:28:34.729Z",
    "fromUser": {
      "id": "529c69deed5ab0b3bf04d1c5",
      "username": "abdul",
      "displayName": "Abdul Qabiz",
      "url": "/abdul",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/abdul",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/64568?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/64568?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 31,
    "urls": [
      {
        "url": "https://ethereum.org/token#the-code"
      }
    ],
    "mentions": [
      {
        "screenName": "GNSPS",
        "userId": "54bd42addb8155e6700ed45e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a620ef29cdc721e4fa10ad2",
    "text": "I am in middle of writing a token contract for an upcoming ICO, and I ended up having those locks in my contract but I am going to remove. I think, once token is issued, it should be property of the user who purchased it. He is current owner, and a contract owner shouldn't be able to limit a token holder from transfering or evening burning tokens. ",
    "html": "I am in middle of writing a token contract for an upcoming ICO, and I ended up having those locks in my contract but I am going to remove. I think, once token is issued, it should be property of the user who purchased it. He is current owner, and a contract owner shouldn&#39;t be able to limit a token holder from transfering or evening burning tokens. ",
    "sent": "2018-01-19T15:29:54.969Z",
    "fromUser": {
      "id": "529c69deed5ab0b3bf04d1c5",
      "username": "abdul",
      "displayName": "Abdul Qabiz",
      "url": "/abdul",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/abdul",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/64568?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/64568?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 31,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a620f185ade18be39984cbf",
    "text": "That's what I wanted to know, if there is a best practice or wisdom someone can share.",
    "html": "That&#39;s what I wanted to know, if there is a best practice or wisdom someone can share.",
    "sent": "2018-01-19T15:30:32.417Z",
    "fromUser": {
      "id": "529c69deed5ab0b3bf04d1c5",
      "username": "abdul",
      "displayName": "Abdul Qabiz",
      "url": "/abdul",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/abdul",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/64568?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/64568?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 32,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a6240c0290a1f4561ad5deb",
    "text": "I do think so myself ",
    "html": "I do think so myself ",
    "sent": "2018-01-19T19:02:24.042Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 33,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a6240cb517037a212cab275",
    "text": "It’s a complete loss of trustlessness",
    "html": "It’s a complete loss of trustlessness",
    "sent": "2018-01-19T19:02:35.331Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 33,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a6240d7e01412265067b3d1",
    "text": "But there are some people who don’t ",
    "html": "But there are some people who don’t ",
    "sent": "2018-01-19T19:02:47.120Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 36,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a6240e5ae53c159030c473c",
    "text": "And want to centralize their token a lot",
    "html": "And want to centralize their token a lot",
    "sent": "2018-01-19T19:03:01.821Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 36,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a6240f5ae53c159030c4785",
    "text": "It might still be a valid use case ",
    "html": "It might still be a valid use case ",
    "sent": "2018-01-19T19:03:17.252Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 36,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a62411dae53c159030c484c",
    "text": "Just not a decentralized one (depending on the pause mechanism it could be various degrees of centralized, as well 😄)",
    "html": "Just not a decentralized one (depending on the pause mechanism it could be various degrees of centralized, as well 😄)",
    "sent": "2018-01-19T19:03:57.558Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 36,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a627a3dae53c159030d8a84",
    "text": "Hi @maurelian, I just read through http://amavridou.com/papers/mavridou2018SC.pdf , and prior, one other thing I learned to prevent re-entrancy was \"optimistic accounting\" in which any accounting state changes are done before a value transfer. This article talked about a \"locking\" modifier to prevent re-entrancy as well, which I liked. I was curious what the take on was for best use cases? Is \"optimistic accounting\" or this \"locking\" modifier better in some cases or another? (Let me know if you need more context.)",
    "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span>, I just read through <a href=\"http://amavridou.com/papers/mavridou2018SC.pdf\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://amavridou.com/papers/mavridou2018SC.pdf</a> , and prior, one other thing I learned to prevent re-entrancy was &quot;optimistic accounting&quot; in which any accounting state changes are done before a value transfer. This article talked about a &quot;locking&quot; modifier to prevent re-entrancy as well, which I liked. I was curious what the take on was for best use cases? Is &quot;optimistic accounting&quot; or this &quot;locking&quot; modifier better in some cases or another? (Let me know if you need more context.)",
    "sent": "2018-01-19T23:07:41.457Z",
    "fromUser": {
      "id": "59511a72d73408ce4f6a3063",
      "username": "thekscar",
      "displayName": "Karen",
      "url": "/thekscar",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thekscar",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 37,
    "urls": [
      {
        "url": "http://amavridou.com/papers/mavridou2018SC.pdf"
      }
    ],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a6338c9ce68c3bc74dfc04c",
    "text": "Hi @kds0718 that's the first I've heard the term 'optimistic accounting', but it sounds like a catchier name for 'make state changes last' or 'check-effect-interactions'. ",
    "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"kds0718\" class=\"mention\">@kds0718</span> that&#39;s the first I&#39;ve heard the term &#39;optimistic accounting&#39;, but it sounds like a catchier name for &#39;make state changes last&#39; or &#39;check-effect-interactions&#39;. ",
    "sent": "2018-01-20T12:40:41.049Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 38,
    "urls": [],
    "mentions": [
      {
        "screenName": "kds0718",
        "userId": "59511a72d73408ce4f6a3063",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a6338f4e0141226506be190",
    "text": "We've got some documentation on that here: https://consensys.github.io/smart-contract-best-practices/recommendations/#avoid-state-changes-after-external-calls\n\nI've rarely seen the 'lock' or mutex modifiers in practical application, but that could work as well. ",
    "html": "<p>We&#39;ve got some documentation on that here: <a href=\"https://consensys.github.io/smart-contract-best-practices/recommendations/#avoid-state-changes-after-external-calls\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://consensys.github.io/smart-contract-best-practices/recommendations/#avoid-state-changes-after-external-calls</a></p><p>I&#39;ve rarely seen the &#39;lock&#39; or mutex modifiers in practical application, but that could work as well. </p>",
    "sent": "2018-01-20T12:41:24.041Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 39,
    "urls": [
      {
        "url": "https://consensys.github.io/smart-contract-best-practices/recommendations/#avoid-state-changes-after-external-calls"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a6369235ade18be399eb952",
    "text": "Ok, yes, that's what I was referring to, thank you!",
    "html": "Ok, yes, that&#39;s what I was referring to, thank you!",
    "sent": "2018-01-20T16:06:59.766Z",
    "fromUser": {
      "id": "59511a72d73408ce4f6a3063",
      "username": "thekscar",
      "displayName": "Karen",
      "url": "/thekscar",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thekscar",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 40,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a6487faae53c1590315c604",
    "text": "Hi",
    "html": "Hi",
    "sent": "2018-01-21T12:30:50.256Z",
    "fromUser": {
      "id": "59e88d19d73408ce4f7ab8c0",
      "username": "laitassou",
      "displayName": "laitassou",
      "url": "/laitassou",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/laitassou",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=128",
      "v": 38,
      "gv": "4"
    },
    "unread": false,
    "readBy": 40,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a64882e5a9ebe4f75b53296",
    "text": "price of gaz is a real concern, I was developping a dapp and price of gas to write a bytes32 is nearly 8$",
    "html": "price of gaz is a real concern, I was developping a dapp and price of gas to write a bytes32 is nearly 8$",
    "sent": "2018-01-21T12:31:42.596Z",
    "fromUser": {
      "id": "59e88d19d73408ce4f7ab8c0",
      "username": "laitassou",
      "displayName": "laitassou",
      "url": "/laitassou",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/laitassou",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=128",
      "v": 38,
      "gv": "4"
    },
    "unread": false,
    "readBy": 40,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a6488755ade18be39a33f2d",
    "text": "This is a barrier to have users using such services\n\n\n\n",
    "html": "This is a barrier to have users using such services",
    "sent": "2018-01-21T12:32:53.605Z",
    "fromUser": {
      "id": "59e88d19d73408ce4f7ab8c0",
      "username": "laitassou",
      "displayName": "laitassou",
      "url": "/laitassou",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/laitassou",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=128",
      "v": 38,
      "gv": "4"
    },
    "unread": false,
    "readBy": 41,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a66bf6a517037a212dfd21a",
    "text": "I am trying to find a way to create reliable smart contract ",
    "html": "I am trying to find a way to create reliable smart contract ",
    "sent": "2018-01-23T04:51:54.822Z",
    "fromUser": {
      "id": "5a65d8b8d73408ce4f89851b",
      "username": "TattiCoin_twitter",
      "displayName": "Tatti",
      "url": "/TattiCoin_twitter",
      "avatarUrl": "https://avatars-01.gitter.im/g/u/TattiCoin_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/955271342860963840/Hnk54-PQ_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/955271342860963840/Hnk54-PQ.jpg"
    },
    "unread": false,
    "readBy": 41,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a66bf8a98927d574523d62b",
    "text": "https://wizard.oracles.org is something that I wanted to use but the main net is down ",
    "html": "<a href=\"https://wizard.oracles.org\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://wizard.oracles.org</a> is something that I wanted to use but the main net is down ",
    "sent": "2018-01-23T04:52:26.351Z",
    "fromUser": {
      "id": "5a65d8b8d73408ce4f89851b",
      "username": "TattiCoin_twitter",
      "displayName": "Tatti",
      "url": "/TattiCoin_twitter",
      "avatarUrl": "https://avatars-01.gitter.im/g/u/TattiCoin_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/955271342860963840/Hnk54-PQ_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/955271342860963840/Hnk54-PQ.jpg"
    },
    "unread": false,
    "readBy": 44,
    "urls": [
      {
        "url": "https://wizard.oracles.org"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a66bf9e5a9ebe4f75c0c201",
    "text": "any other similar option I may have? TIA",
    "html": "any other similar option I may have? TIA",
    "sent": "2018-01-23T04:52:46.707Z",
    "fromUser": {
      "id": "5a65d8b8d73408ce4f89851b",
      "username": "TattiCoin_twitter",
      "displayName": "Tatti",
      "url": "/TattiCoin_twitter",
      "avatarUrl": "https://avatars-01.gitter.im/g/u/TattiCoin_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/955271342860963840/Hnk54-PQ_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/955271342860963840/Hnk54-PQ.jpg"
    },
    "unread": false,
    "readBy": 44,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a670e0b5a9ebe4f75c25aa9",
    "text": "please can anyone help in creating an ico token the script i wrote in not having the complete functions according to remix browser",
    "html": "please can anyone help in creating an ico token the script i wrote in not having the complete functions according to remix browser",
    "sent": "2018-01-23T10:27:23.662Z",
    "fromUser": {
      "id": "5a32527fd73408ce4f83493f",
      "username": "dagogodboss",
      "displayName": "dagogodboss",
      "url": "/dagogodboss",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/dagogodboss",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/12684836?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/12684836?v=4&s=128",
      "v": 2,
      "gv": "4"
    },
    "unread": false,
    "readBy": 44,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a67546be014122650802ab4",
    "text": "@dagogodboss Is this on a testnet? Honestly, if you don't know what you're doing, you shouldn't be deploying contracts to the main network.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"dagogodboss\" class=\"mention\">@dagogodboss</span> Is this on a testnet? Honestly, if you don&#39;t know what you&#39;re doing, you shouldn&#39;t be deploying contracts to the main network.",
    "sent": "2018-01-23T15:27:39.766Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 44,
    "urls": [],
    "mentions": [
      {
        "screenName": "dagogodboss",
        "userId": "5a32527fd73408ce4f83493f",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a74937fe217167e2c33ea7c",
    "text": "Is there anyone know how to interact get Balance function to web3.js ?",
    "html": "Is there anyone know how to interact get Balance function to web3.js ?",
    "sent": "2018-02-02T16:36:15.330Z",
    "fromUser": {
      "id": "5a4e4c3dd73408ce4f861b33",
      "username": "phamdat721101",
      "displayName": "phamdat721101",
      "url": "/phamdat721101",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/phamdat721101",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/33027589?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/33027589?v=4&s=128",
      "v": 4,
      "gv": "4"
    },
    "unread": false,
    "readBy": 32,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a75229c4a6b0dd32b81b719",
    "text": "@phamdat721101 `web3.eth.getBalance(addr)` please check the documentation first for things like that :)",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"phamdat721101\" class=\"mention\">@phamdat721101</span> <code>web3.eth.getBalance(addr)</code> please check the documentation first for things like that :)",
    "sent": "2018-02-03T02:46:52.360Z",
    "fromUser": {
      "id": "54830a6edb8155e6700dc42f",
      "username": "shrugs",
      "displayName": "Matt Condon",
      "url": "/shrugs",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/shrugs",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1535001?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1535001?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 32,
    "urls": [],
    "mentions": [
      {
        "screenName": "phamdat721101",
        "userId": "5a4e4c3dd73408ce4f861b33",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a820fd1e217167e2c76e144",
    "text": "Hello. Has anyone deployed to mainnet via geth using truffle lately?",
    "html": "Hello. Has anyone deployed to mainnet via geth using truffle lately?",
    "sent": "2018-02-12T22:06:09.737Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 9,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a820fe7e217167e2c76e1aa",
    "text": "I tried to deploy to mainnet and got `Error: exceeds block gas limit` ? This usually indicates that my code is too big, but gasUsed was only 2,725,960 when deployed to rinkeby so does not make much sense.",
    "html": "I tried to deploy to mainnet and got <code>Error: exceeds block gas limit</code> ? This usually indicates that my code is too big, but gasUsed was only 2,725,960 when deployed to rinkeby so does not make much sense.",
    "sent": "2018-02-12T22:06:31.790Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 9,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a82101e7084124a346be49e",
    "text": "I used to deploy directly to infura but  trying to switch back to deploy via local node.",
    "html": "I used to deploy directly to infura but  trying to switch back to deploy via local node.",
    "sent": "2018-02-12T22:07:26.712Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 9,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a821c5f93be87284dabf472",
    "text": "@makoto isn't it the case that each block has a gas limit that's shared among all transactions? Therefore if your tx happened to fall towards the end of a block, might it have been rejected?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span> isn&#39;t it the case that each block has a gas limit that&#39;s shared among all transactions? Therefore if your tx happened to fall towards the end of a block, might it have been rejected?",
    "sent": "2018-02-12T22:59:43.508Z",
    "fromUser": {
      "id": "59e6529ad73408ce4f7a733d",
      "username": "wildmolasses",
      "displayName": "Ed Mazurek",
      "url": "/wildmolasses",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/wildmolasses",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5423313?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5423313?v=4&s=128",
      "v": 8,
      "gv": "4"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a821cc1ce68c3bc747aaf0b",
    "text": "oh, that's an interesting conjecture.... but I think in that case miner's would just not try to include it in the block. ",
    "html": "oh, that&#39;s an interesting conjecture.... but I think in that case miner&#39;s would just not try to include it in the block. ",
    "sent": "2018-02-12T23:01:21.287Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a821ceb18f388e62695f739",
    "text": "@makoto I asked @gnidan from the truffle team:\n\n> I ran into a problem semi-recently where I realized the default gas limit was set too high (it’s currently set too close to the block gas limit)\n> you could advise him that he should just set `gas` to something lower in his `truffle.js`\n> (making an issue for this because it’s now come up a few times… will see about getting it into our next (v4.0.7) release)",
    "html": "<p><span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span> I asked <span data-link-type=\"mention\" data-screen-name=\"gnidan\" class=\"mention\">@gnidan</span> from the truffle team:</p><blockquote>\n<p>I ran into a problem semi-recently where I realized the default gas limit was set too high (it’s currently set too close to the block gas limit)<br>you could advise him that he should just set <code>gas</code> to something lower in his <code>truffle.js</code><br>(making an issue for this because it’s now come up a few times… will see about getting it into our next (v4.0.7) release)</p></blockquote>\n",
    "sent": "2018-02-12T23:02:03.294Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 9,
    "urls": [],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      },
      {
        "screenName": "gnidan",
        "userId": "57c6527940f3a6eec0624b81",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a821d39f283b8e54652ff63",
    "text": "@maurelian thanks, great point",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> thanks, great point",
    "sent": "2018-02-12T23:03:21.663Z",
    "fromUser": {
      "id": "59e6529ad73408ce4f7a733d",
      "username": "wildmolasses",
      "displayName": "Ed Mazurek",
      "url": "/wildmolasses",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/wildmolasses",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5423313?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5423313?v=4&s=128",
      "v": 8,
      "gv": "4"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a821e5d7084124a346c3c8f",
    "text": "[![image.png](https://files.gitter.im/ConsenSys/smart-contract-best-practices/Ycro/thumb/image.png)](https://files.gitter.im/ConsenSys/smart-contract-best-practices/Ycro/image.png)",
    "html": "<a href=\"https://files.gitter.im/ConsenSys/smart-contract-best-practices/Ycro/image.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/ConsenSys/smart-contract-best-practices/Ycro/thumb/image.png\" alt=\"image.png\" rel=\"nofollow\"></a>",
    "sent": "2018-02-12T23:08:13.690Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 9,
    "urls": [
      {
        "url": "https://files.gitter.im/ConsenSys/smart-contract-best-practices/Ycro/thumb/image.png"
      },
      {
        "url": "https://files.gitter.im/ConsenSys/smart-contract-best-practices/Ycro/image.png"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a821e66ce68c3bc747ab60b",
    "text": "You made me have to look it up.",
    "html": "You made me have to look it up.",
    "sent": "2018-02-12T23:08:22.069Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 9,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a821e9ce217167e2c772fe0",
    "text": "So, it seems like the block would be invalid if you try to include a txn that _might_ put the gas usage over the block limit. ",
    "html": "So, it seems like the block would be invalid if you try to include a txn that <em>might</em> put the gas usage over the block limit. ",
    "sent": "2018-02-12T23:09:16.393Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 9,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a821f6b4a6b0dd32bc1f26e",
    "text": "fyi: tracking the work to use `estimateGas` in this ticket: https://github.com/trufflesuite/truffle-contract/issues/25",
    "html": "fyi: tracking the work to use <code>estimateGas</code> in this ticket: <span data-link-type=\"issue\" data-issue=\"25\" data-issue-repo=\"trufflesuite/truffle-contract\" class=\"issue\">trufflesuite/truffle-contract#25</span>",
    "sent": "2018-02-12T23:12:43.076Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 9,
    "urls": [],
    "mentions": [],
    "issues": [
      {
        "repo": "trufflesuite/truffle-contract",
        "number": "25"
      }
    ],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8222468c71e5e01d891517",
    "text": "@emazurek The migration fails instantly so I don't think it gets even go to transaction pool nor anything (I was tailing geth log and nothing has been written)",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"emazurek\" class=\"mention\">@emazurek</span> The migration fails instantly so I don&#39;t think it gets even go to transaction pool nor anything (I was tailing geth log and nothing has been written)",
    "sent": "2018-02-12T23:24:54.661Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 9,
    "urls": [],
    "mentions": [
      {
        "screenName": "emazurek",
        "userId": "59e6529ad73408ce4f7a733d",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8222854a6b0dd32bc202a3",
    "text": "@maurelian @gnidan I have been trying to fiddle `gas` value for the last one hour and no chance.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> <span data-link-type=\"mention\" data-screen-name=\"gnidan\" class=\"mention\">@gnidan</span> I have been trying to fiddle <code>gas</code> value for the last one hour and no chance.",
    "sent": "2018-02-12T23:25:57.004Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 9,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      },
      {
        "screenName": "gnidan",
        "userId": "57c6527940f3a6eec0624b81",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a822347b3c4a0d37615549e",
    "text": "Another thing I don't understand is the file which is blowing up",
    "html": "Another thing I don&#39;t understand is the file which is blowing up",
    "sent": "2018-02-12T23:29:11.427Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 9,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a82234b18f388e626961969",
    "text": "```  Deploying Conference...\n  ... undefined\nError encountered, bailing. Network state unknown. Review successful transactions manually.\nError: exceeds block gas limit\n    at Object.InvalidResponse (/usr/local/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/errors.js:38:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/requestmanager.js:86:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/~/truffle-migrate/index.js:225:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/~/truffle-provider/wrapper.js:134:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/httpprovider.js:128:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:64:1)\n    at XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:354:1)\n    at XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:509:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:469:1)\n    at emitNone (events.js:111:20)\nmakoto@Makotos-Air: [~/work/blockparty -  (ethldn201802)] $ ls /usr/local/lib/node_modules/truffle/build/webpack:/~/truffle-migrate/index.js\nls: /usr/local/lib/node_modules/truffle/build/webpack:/~/truffle-migrate/index.js: No such file or directory```",
    "html": "<code>Deploying Conference...\n  ... undefined\nError encountered, bailing. Network state unknown. Review successful transactions manually.\nError: exceeds block gas limit\n    at Object.InvalidResponse (/usr/local/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/errors.js:38:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/requestmanager.js:86:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/~/truffle-migrate/index.js:225:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/~/truffle-provider/wrapper.js:134:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/httpprovider.js:128:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:64:1)\n    at XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:354:1)\n    at XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:509:1)\n    at IncomingMessage.&lt;anonymous&gt; (/usr/local/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:469:1)\n    at emitNone (events.js:111:20)\nmakoto@Makotos-Air: [~/work/blockparty -  (ethldn201802)] $ ls /usr/local/lib/node_modules/truffle/build/webpack:/~/truffle-migrate/index.js\nls: /usr/local/lib/node_modules/truffle/build/webpack:/~/truffle-migrate/index.js: No such file or directory</code>",
    "sent": "2018-02-12T23:29:15.184Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a82234b4a6b0dd32bc20696",
    "text": "@makoto what’s your `truffe version`?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span> what’s your <code>truffe version</code>?",
    "sent": "2018-02-12T23:29:15.464Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a822353e217167e2c7745bd",
    "text": "ah latest",
    "html": "ah latest",
    "sent": "2018-02-12T23:29:23.799Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a822360ce68c3bc747acbf8",
    "text": "yes",
    "html": "yes",
    "sent": "2018-02-12T23:29:36.880Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a82236ab3c4a0d37615551c",
    "text": "I wanted to inspect `/usr/local/lib/node_modules/truffle/build/webpack:/~/truffle-migrate/index.js` but such files does not exist.",
    "html": "I wanted to inspect <code>/usr/local/lib/node_modules/truffle/build/webpack:/~/truffle-migrate/index.js</code> but such files does not exist.",
    "sent": "2018-02-12T23:29:46.876Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a822375b3c4a0d37615552a",
    "text": "Is this some sort of webpack magic?",
    "html": "Is this some sort of webpack magic?",
    "sent": "2018-02-12T23:29:57.414Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a82238ace68c3bc747acc89",
    "text": "@makoto it is - it’s part of cli.bundled.js, but the source lives in the trufflesuite/truffle-migrate repo",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span> it is - it’s part of cli.bundled.js, but the source lives in the trufflesuite/truffle-migrate repo",
    "sent": "2018-02-12T23:30:18.343Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a82239693be87284dac16e6",
    "text": "that’s not likely to help - what’s your current `config.gas` value?",
    "html": "that’s not likely to help - what’s your current <code>config.gas</code> value?",
    "sent": "2018-02-12T23:30:30.752Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8223b493be87284dac1718",
    "text": "You mean in `truffle.js` file?",
    "html": "You mean in <code>truffle.js</code> file?",
    "sent": "2018-02-12T23:31:00.172Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8223b9e217167e2c77479a",
    "text": "@makoto yep",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span> yep",
    "sent": "2018-02-12T23:31:05.876Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8223e1e217167e2c7747f5",
    "text": "```\nmainnet: {\n  gas: 3550000,\n  host: \"localhost\",\n  gasPrice: 1000000000, // 1 gwei\n  port: 8545,\n  from: \"0x4b3A4F3F42BA61141A4F7101F77dC141AE15c59A\",\n  network_id: 1\n}\n```",
    "html": "<pre><code><span class=\"tag\">mainnet</span>: {\n  <span class=\"attribute\">gas</span>: <span class=\"number\">3550000</span>,\n  <span class=\"attribute\">host</span>: <span class=\"string\">\"localhost\"</span>,\n  <span class=\"attribute\">gasPrice</span>: <span class=\"number\">1000000000</span>, <span class=\"comment\">// 1 gwei</span>\n  <span class=\"attribute\">port</span>: <span class=\"number\">8545</span>,\n  <span class=\"attribute\">from</span>: <span class=\"string\">\"0x4b3A4F3F42BA61141A4F7101F77dC141AE15c59A\"</span>,\n  <span class=\"attribute\">network_id</span>: <span class=\"number\">1</span>\n}</code></pre>",
    "sent": "2018-02-12T23:31:45.008Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8223fdb3c4a0d3761557a3",
    "text": "I try to change `gas` to various number but nothing was working.",
    "html": "I try to change <code>gas</code> to various number but nothing was working.",
    "sent": "2018-02-12T23:32:13.229Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8223fd7084124a346c57e0",
    "text": "interesting, that is definitely below the block gas limit. are you specifying gas limit somewhere in `geth`?",
    "html": "interesting, that is definitely below the block gas limit. are you specifying gas limit somewhere in <code>geth</code>?",
    "sent": "2018-02-12T23:32:13.578Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a82241fce68c3bc747ad021",
    "text": "I don't think so `geth   --syncmode \"fast\"  --unlock 0x4b3A4F3F42BA61141A4F7101F77dC141AE15c59A  --rpc --rpcapi \"eth,net,web3\"` ",
    "html": "I don&#39;t think so <code>geth   --syncmode &quot;fast&quot;  --unlock 0x4b3A4F3F42BA61141A4F7101F77dC141AE15c59A  --rpc --rpcapi &quot;eth,net,web3&quot;</code> ",
    "sent": "2018-02-12T23:32:47.118Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8224a0e217167e2c774d66",
    "text": "@makoto I wonder if the gas limit error is a red herring – I believe `--unlock` requires a `--password` arg, whose value is a filename for a file that contains the password",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span> I wonder if the gas limit error is a red herring – I believe <code>--unlock</code> requires a <code>--password</code> arg, whose value is a filename for a file that contains the password",
    "sent": "2018-02-12T23:34:56.019Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8224b9d74ee9f50db7d595",
    "text": "It prompts to type password though.",
    "html": "It prompts to type password though.",
    "sent": "2018-02-12T23:35:21.993Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8224ce8c71e5e01d8921b3",
    "text": "it prompts right before this failure?",
    "html": "it prompts right before this failure?",
    "sent": "2018-02-12T23:35:42.950Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8224f14a6b0dd32bc20ffe",
    "text": "I start geth in different tab to traffle migration command so yes ",
    "html": "I start geth in different tab to traffle migration command so yes ",
    "sent": "2018-02-12T23:36:17.600Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8224fd4a6b0dd32bc21015",
    "text": "even if so, I wonder if `truffle-migrate` is still failing because it doesn’t know to wait for the password entry",
    "html": "even if so, I wonder if <code>truffle-migrate</code> is still failing because it doesn’t know to wait for the password entry",
    "sent": "2018-02-12T23:36:29.404Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a82252df283b8e54653288d",
    "text": "If I start geth without unlocking, the migration fails with `Error: authentication needed: password or unlock`",
    "html": "If I start geth without unlocking, the migration fails with <code>Error: authentication needed: password or unlock</code>",
    "sent": "2018-02-12T23:37:17.518Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a822532b3c4a0d376155e8e",
    "text": "I just tried",
    "html": "I just tried",
    "sent": "2018-02-12T23:37:22.804Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a82253bf283b8e5465328ae",
    "text": "did you try both `--unlock` and `--password`?",
    "html": "did you try both <code>--unlock</code> and <code>--password</code>?",
    "sent": "2018-02-12T23:37:31.471Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8225538c71e5e01d8923d3",
    "text": "This time I just did `geth   --syncmode \"fast\"  --rpc --rpcapi \"eth,net,web3\" --rpccorsdomain '*'`",
    "html": "This time I just did <code>geth   --syncmode &quot;fast&quot;  --rpc --rpcapi &quot;eth,net,web3&quot; --rpccorsdomain &#39;*&#39;</code>",
    "sent": "2018-02-12T23:37:55.769Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a82256fe217167e2c77515c",
    "text": "makes sense that that would fail with that auth error",
    "html": "makes sense that that would fail with that auth error",
    "sent": "2018-02-12T23:38:23.985Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8225e1ce68c3bc747ad99e",
    "text": "I just tried passing `--password` with password file but getting exactly the same gas limit error.",
    "html": "I just tried passing <code>--password</code> with password file but getting exactly the same gas limit error.",
    "sent": "2018-02-12T23:40:17.026Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a822643ce68c3bc747adb53",
    "text": "@makoto do you see any RPC logs related to that transaction?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span> do you see any RPC logs related to that transaction?",
    "sent": "2018-02-12T23:41:55.788Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a82265db3c4a0d376156415",
    "text": "@makoto another thing to try: run `truffle migrate --network mainnet --dry-run`",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span> another thing to try: run <code>truffle migrate --network mainnet --dry-run</code>",
    "sent": "2018-02-12T23:42:21.790Z",
    "fromUser": {
      "id": "57c6527940f3a6eec0624b81",
      "username": "gnidan",
      "displayName": "g. nicholas d'andrea",
      "url": "/gnidan",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/gnidan",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/151065?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/151065?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a8226664a6b0dd32bc21890",
    "text": "You mean geth log?",
    "html": "You mean geth log?",
    "sent": "2018-02-12T23:42:30.461Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a82266ae217167e2c775668",
    "text": "Let me try",
    "html": "Let me try",
    "sent": "2018-02-12T23:42:34.396Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5747cc61a861c927fdb203",
    "text": "eh... I need to study more",
    "html": "eh... I need to study more",
    "sent": "2018-01-11T11:17:32.295Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 6,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5747da61a861c927fdb290",
    "text": "something1 = await dothis();",
    "html": "something1 = await dothis();",
    "sent": "2018-01-11T11:17:46.324Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 7,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5747e3b48e8c3566c8f45d",
    "text": "something2 = something1....",
    "html": "something2 = something1....",
    "sent": "2018-01-11T11:17:55.990Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 7,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5747e9ae53c15903d511fd",
    "text": "something3 = await something2()....",
    "html": "something3 = await something2()....",
    "sent": "2018-01-11T11:18:01.430Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 7,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a57480261a861c927fdb4a6",
    "text": "em... This is better.",
    "html": "em... This is better.",
    "sent": "2018-01-11T11:18:26.143Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 7,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574802290a1f4561768428",
    "text": "wrap the whole thing in an async function instead of just a function",
    "html": "wrap the whole thing in an async function instead of just a function",
    "sent": "2018-01-11T11:18:26.828Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 7,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574812ba39a53f1a01b885",
    "text": "got it",
    "html": "got it",
    "sent": "2018-01-11T11:18:42.690Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 6,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5748645a9ebe4f757382df",
    "text": "I write this test just want to test what i think.\ngetting something from other contract.\n\nnow I just finish getting values.\nbut I don't know when I deployed what should I do.",
    "html": "<p>I write this test just want to test what i think.<br>getting something from other contract.</p><p>now I just finish getting values.<br>but I don&#39;t know when I deployed what should I do.</p>",
    "sent": "2018-01-11T11:20:04.467Z",
    "editedAt": "2018-01-11T11:20:31.090Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 6,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 3
  },
  {
    "id": "5a57488361a861c927fdb67c",
    "text": "What do you want to do? test the contract? Do something?",
    "html": "What do you want to do? test the contract? Do something?",
    "sent": "2018-01-11T11:20:35.230Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 7,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5748aa290a1f45617687a8",
    "text": "for example\nI want to write a contract, which can get cryptokitties info with kitty id",
    "html": "for example<br>I want to write a contract, which can get cryptokitties info with kitty id",
    "sent": "2018-01-11T11:21:14.168Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 7,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5748c083152df26d5a4de6",
    "text": "is the information public? do you know the contract variables layout?",
    "html": "is the information public? do you know the contract variables layout?",
    "sent": "2018-01-11T11:21:36.830Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 7,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5748c9b48e8c3566c8f8f9",
    "text": "yes, of course",
    "html": "yes, of course",
    "sent": "2018-01-11T11:21:45.210Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5748d6290a1f45617688f4",
    "text": "or, are you reverse engineering? :smile: ",
    "html": "or, are you reverse engineering? :smile: ",
    "sent": "2018-01-11T11:21:58.989Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5748e1290a1f4561768933",
    "text": "then what do you want to do?",
    "html": "then what do you want to do?",
    "sent": "2018-01-11T11:22:09.821Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5748e4b48e8c3566c8f987",
    "text": "I found it in KittyCore.sol",
    "html": "I found it in KittyCore.sol",
    "sent": "2018-01-11T11:22:12.810Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5748f0ce68c3bc74a556c4",
    "text": "Write the contract, then show me the code, and tell me what you need to do.",
    "html": "Write the contract, then show me the code, and tell me what you need to do.",
    "sent": "2018-01-11T11:22:24.365Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5748f461a861c927fdb8a9",
    "text": "or what you want to do.",
    "html": "or what you want to do.",
    "sent": "2018-01-11T11:22:28.393Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 9,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5748f9ae53c15903d518f4",
    "text": "write a game, make kitties like runner",
    "html": "write a game, make kitties like runner",
    "sent": "2018-01-11T11:22:33.168Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 9,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5748fb6117191e6151ae11",
    "text": "then I'll check.",
    "html": "then I&#39;ll check.",
    "sent": "2018-01-11T11:22:35.296Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 9,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574905d0514c785b18e5c2",
    "text": "I don't know what is runner.",
    "html": "I don&#39;t know what is runner.",
    "sent": "2018-01-11T11:22:45.323Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 9,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574913ce68c3bc74a5575c",
    "text": "runner-race ?",
    "html": "runner-race ?",
    "sent": "2018-01-11T11:22:59.358Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 9,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a57491d83152df26d5a4f86",
    "text": "I have no idea what that means.",
    "html": "I have no idea what that means.",
    "sent": "2018-01-11T11:23:09.651Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 9,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a57492d290a1f4561768a30",
    "text": "person who run in race ?",
    "html": "person who run in race ?",
    "sent": "2018-01-11T11:23:25.429Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a57493583152df26d5a4ff9",
    "text": "oh...",
    "html": "oh...",
    "sent": "2018-01-11T11:23:33.119Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a57493bd0514c785b18e67f",
    "text": "So you want the cats to run in a race?",
    "html": "So you want the cats to run in a race?",
    "sent": "2018-01-11T11:23:39.175Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574955b48e8c3566c8fbc9",
    "text": "athlete maybe",
    "html": "athlete maybe",
    "sent": "2018-01-11T11:24:05.324Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5749576117191e6151afcb",
    "text": "yes",
    "html": "yes",
    "sent": "2018-01-11T11:24:07.338Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5749666117191e6151b011",
    "text": "the speed may determind by cat gene",
    "html": "the speed may determind by cat gene",
    "sent": "2018-01-11T11:24:22.722Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574977ba39a53f1a01c06e",
    "text": "speed, strong,  and so on",
    "html": "speed, strong,  and so on",
    "sent": "2018-01-11T11:24:39.027Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a57497861a861c927fdbab4",
    "text": "ok, so?",
    "html": "ok, so?",
    "sent": "2018-01-11T11:24:40.861Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a57498183152df26d5a51b9",
    "text": "just for fun, hahah ",
    "html": "just for fun, hahah ",
    "sent": "2018-01-11T11:24:49.298Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5749825a9ebe4f757389dd",
    "text": "What's the problem then? You seem to know what they need to do.",
    "html": "What&#39;s the problem then? You seem to know what they need to do.",
    "sent": "2018-01-11T11:24:50.299Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a57499aba39a53f1a01c130",
    "text": "I don't know how to code it, or config my local enviroment",
    "html": "I don&#39;t know how to code it, or config my local enviroment",
    "sent": "2018-01-11T11:25:14.757Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5749ae83152df26d5a52a0",
    "text": "how to get things with local contrat from the mainnet",
    "html": "how to get things with local contrat from the mainnet",
    "sent": "2018-01-11T11:25:34.527Z",
    "editedAt": "2018-01-11T11:25:44.619Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a5749c5ba39a53f1a01c227",
    "text": "You don't know how to code it??? Then do you know how to code it in any other language? C++? C#? Java?",
    "html": "You don&#39;t know how to code it??? Then do you know how to code it in any other language? C++? C#? Java?",
    "sent": "2018-01-11T11:25:57.961Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5749db61a861c927fdbcb8",
    "text": "nono, I mean get ctytokitties from mainnet.",
    "html": "nono, I mean get ctytokitties from mainnet.",
    "sent": "2018-01-11T11:26:19.702Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5749f65a9ebe4f75738c3e",
    "text": "what does get cryptokitties from mainnet mean?",
    "html": "what does get cryptokitties from mainnet mean?",
    "sent": "2018-01-11T11:26:46.639Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5749fcae53c15903d51ebf",
    "text": "you see, I can get it by url.\nhttps://www.cryptokitties.co/kitty/443493",
    "html": "you see, I can get it by url.<br><a href=\"https://www.cryptokitties.co/kitty/443493\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.cryptokitties.co/kitty/443493</a>",
    "sent": "2018-01-11T11:26:52.869Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [
      {
        "url": "https://www.cryptokitties.co/kitty/443493"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5749ffae53c15903d51ec9",
    "text": "Do you know the contract adddress?",
    "html": "Do you know the contract adddress?",
    "sent": "2018-01-11T11:26:55.114Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574a12ae53c15903d51f51",
    "text": "I can check it on ethscan",
    "html": "I can check it on ethscan",
    "sent": "2018-01-11T11:27:14.746Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574a1c5a9ebe4f75738d6c",
    "text": "https://etherscan.io/address/0x06012c8cf97bead5deae237070f9587f8e7a266d#code",
    "html": "<a href=\"https://etherscan.io/address/0x06012c8cf97bead5deae237070f9587f8e7a266d#code\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://etherscan.io/address/0x06012c8cf97bead5deae237070f9587f8e7a266d#code</a>",
    "sent": "2018-01-11T11:27:24.963Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [
      {
        "url": "https://etherscan.io/address/0x06012c8cf97bead5deae237070f9587f8e7a266d#code"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574a315a9ebe4f75738de3",
    "text": "ok, then what do you want to do next?",
    "html": "ok, then what do you want to do next?",
    "sent": "2018-01-11T11:27:45.984Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574a376117191e6151b576",
    "text": "but I want to get it from contract code",
    "html": "but I want to get it from contract code",
    "sent": "2018-01-11T11:27:51.698Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574a79290a1f45617691ce",
    "text": "what is \"it\"? Get what?",
    "html": "what is &quot;it&quot;? Get what?",
    "sent": "2018-01-11T11:28:57.599Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574a87ae53c15903d5219b",
    "text": "after I get cat info with contract code from main net, ehtereum main net. I can play a random number on it. Then generate a rank. And then the winner is comming. ",
    "html": "after I get cat info with contract code from main net, ehtereum main net. I can play a random number on it. Then generate a rank. And then the winner is comming. ",
    "sent": "2018-01-11T11:29:11.968Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574a9c6117191e6151b6e2",
    "text": "Please try not to jump too far ahead. Get \"what?",
    "html": "Please try not to jump too far ahead. Get &quot;what?",
    "sent": "2018-01-11T11:29:32.319Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574aaace68c3bc74a56129",
    "text": "cat info: id, owner, gene",
    "html": "cat info: id, owner, gene",
    "sent": "2018-01-11T11:29:46.970Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574abb290a1f4561769333",
    "text": "ok, then you need to find the variable index first.",
    "html": "ok, then you need to find the variable index first.",
    "sent": "2018-01-11T11:30:03.711Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574ada61a861c927fdc231",
    "text": "```\nstruct Kitty {\n    uint256 genes;\n    uint64 birthTime;\n    uint64 cooldownEndBlock;\n    uint32 matronId;\n    uint32 sireId;\n    uint32 siringWithId;\n    uint16 cooldownIndex;\n    uint16 generation;\n}\n```",
    "html": "<pre><code><span class=\"title\">struct</span> Kitty {\n    <span class=\"title\">uint256</span> genes;\n    <span class=\"title\">uint64</span> birthTime;\n    <span class=\"title\">uint64</span> cooldownEndBlock;\n    <span class=\"title\">uint32</span> matronId;\n    <span class=\"title\">uint32</span> sireId;\n    <span class=\"title\">uint32</span> siringWithId;\n    <span class=\"title\">uint16</span> cooldownIndex;\n    <span class=\"title\">uint16</span> generation;\n}</code></pre>",
    "sent": "2018-01-11T11:30:34.354Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574b04290a1f4561769541",
    "text": "that is the structure, not the variable index.",
    "html": "that is the structure, not the variable index.",
    "sent": "2018-01-11T11:31:16.409Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574b0d83152df26d5a59fa",
    "text": "Again, if you need to do something, write the code first.",
    "html": "Again, if you need to do something, write the code first.",
    "sent": "2018-01-11T11:31:25.606Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574b4cb48e8c3566c906a0",
    "text": "yes   The problem is \nI can get kitty info using `kittyInstance.getKitty.call(cat_id);`from local truffle project, because I copied kittyCore.sol into my local project.\nAnd in my local test, I can get kitty info of course.",
    "html": "yes   The problem is<br>I can get kitty info using <code>kittyInstance.getKitty.call(cat_id);</code>from local truffle project, because I copied kittyCore.sol into my local project.<br>And in my local test, I can get kitty info of course.",
    "sent": "2018-01-11T11:32:28.656Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574b6361a861c927fdc4f9",
    "text": "ok, so the problem is?",
    "html": "ok, so the problem is?",
    "sent": "2018-01-11T11:32:51.802Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574b6e61a861c927fdc54f",
    "text": "I have trouble understand what you just wrote.",
    "html": "I have trouble understand what you just wrote.",
    "sent": "2018-01-11T11:33:02.052Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574b7161a861c927fdc558",
    "text": "so How to verify I can get kitty info on the main net",
    "html": "so How to verify I can get kitty info on the main net",
    "sent": "2018-01-11T11:33:05.182Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574b77d0514c785b18f297",
    "text": "main net etherreum node.",
    "html": "main net etherreum node.",
    "sent": "2018-01-11T11:33:11.957Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574b906117191e6151bdfb",
    "text": "Write code into a file.... then node yourFilename",
    "html": "Write code into a file.... then node yourFilename",
    "sent": "2018-01-11T11:33:36.320Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574b96ba39a53f1a01caaf",
    "text": "http://localhost:8545 is local node",
    "html": "<a href=\"http://localhost:8545\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://localhost:8545</a> is local node",
    "sent": "2018-01-11T11:33:42.528Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [
      {
        "url": "http://localhost:8545"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574bbcba39a53f1a01cbbf",
    "text": "http://infura.balbalblal is one of main net node access.",
    "html": "<a href=\"http://infura.balbalblal\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://infura.balbalblal</a> is one of main net node access.",
    "sent": "2018-01-11T11:34:20.698Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [
      {
        "url": "http://infura.balbalblal"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574bc4ae53c15903d52af1",
    "text": "follow ReadContractStorage, delete everything after line 70, then add your own code.",
    "html": "follow ReadContractStorage, delete everything after line 70, then add your own code.",
    "sent": "2018-01-11T11:34:28.209Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574bc783152df26d5a5e51",
    "text": "This is what I mean local and main net",
    "html": "This is what I mean local and main net",
    "sent": "2018-01-11T11:34:31.783Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574bea290a1f4561769898",
    "text": "eh... One of limitation is don't use web3",
    "html": "eh... One of limitation is don&#39;t use web3",
    "sent": "2018-01-11T11:35:06.203Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574bfcae53c15903d52d07",
    "text": "I don't think you understand.",
    "html": "I don&#39;t think you understand.",
    "sent": "2018-01-11T11:35:24.725Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574c0483152df26d5a5f4b",
    "text": "If you don't use web3, there is no way you can read the data.",
    "html": "If you don&#39;t use web3, there is no way you can read the data.",
    "sent": "2018-01-11T11:35:32.855Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574c17b48e8c3566c90b51",
    "text": "So this is what I want to verify",
    "html": "So this is what I want to verify",
    "sent": "2018-01-11T11:35:51.424Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574c346117191e6151c346",
    "text": "You need something like this....",
    "html": "You need something like this....",
    "sent": "2018-01-11T11:36:20.283Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574c51b48e8c3566c90cc7",
    "text": "```\n  const Web3 = require('web3');\n  var web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545/'));\n```\n\n",
    "html": "<pre><code>  <span class=\"keyword\">const</span> Web3 = <span class=\"built_in\">require</span>(<span class=\"string\">'web3'</span>);\n  <span class=\"keyword\">var</span> web3 = <span class=\"keyword\">new</span> Web3(<span class=\"keyword\">new</span> Web3.providers.HttpProvider(<span class=\"string\">'http://localhost:8545/'</span>));</code></pre>",
    "sent": "2018-01-11T11:36:49.942Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574c7083152df26d5a616d",
    "text": "You should have said this in the first place, instead of all the other stuff you wrote.\n",
    "html": "You should have said this in the first place, instead of all the other stuff you wrote.",
    "sent": "2018-01-11T11:37:20.511Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574c9861a861c927fdcbec",
    "text": "yes, I understand, web3js document said it.",
    "html": "yes, I understand, web3js document said it.",
    "sent": "2018-01-11T11:38:00.965Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574ccdb48e8c3566c90f84",
    "text": "I wish i could do like this, in one contract\n```\nimport 'kittyCore.sol'\n\ncontract Mycontract {\n    function getKittyInfo(uint256 kitty_id) return (uint256) {\n        uint256 kitty_gene = KittyCore.getKitty(kitty_id).gene;\n        return kitty_gene;\n    }\n}\n```",
    "html": "I wish i could do like this, in one contract<pre><code>import <span class=\"string\">'kittyCore.sol'</span>\n\ncontract Mycontract {\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getKittyInfo</span><span class=\"params\">(uint256 kitty_id)</span></span> <span class=\"keyword\">return</span> (uint256) {\n        uint256 kitty_gene = KittyCore.getKitty(kitty_id).gene;\n        <span class=\"keyword\">return</span> kitty_gene;\n    }\n}</code></pre>",
    "sent": "2018-01-11T11:38:53.554Z",
    "editedAt": "2018-01-11T11:40:45.270Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 3
  },
  {
    "id": "5a574d81ae53c15903d535b0",
    "text": "You can.\nJust copy everything from kittyCore.sol into the same file, and remove the import clause.\n",
    "html": "You can.<br>Just copy everything from kittyCore.sol into the same file, and remove the import clause.",
    "sent": "2018-01-11T11:41:53.506Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574dc1ae53c15903d5374a",
    "text": "Is this the only way to realize it in contract ?",
    "html": "Is this the only way to realize it in contract ?",
    "sent": "2018-01-11T11:42:57.780Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574dcdb48e8c3566c91527",
    "text": "I mean ... not joke on me ?",
    "html": "I mean ... not joke on me ?",
    "sent": "2018-01-11T11:43:09.391Z",
    "editedAt": "2018-01-11T11:47:07.075Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a57500fb48e8c3566c9205c",
    "text": "eh... :worried: \nI don't know whether or not make you angry or something unhappy.\nThanks all the same. I learned a lot from what you said. ",
    "html": "eh... :worried:<br>I don&#39;t know whether or not make you angry or something unhappy.<br>Thanks all the same. I learned a lot from what you said. ",
    "sent": "2018-01-11T11:52:47.227Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a57512cd0514c785b191200",
    "text": "Your bug in TestStorage is that the constructor name does not match the contract.",
    "html": "Your bug in TestStorage is that the constructor name does not match the contract.",
    "sent": "2018-01-11T11:57:32.470Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a575138ba39a53f1a01e6ee",
    "text": "The constructor name is testStorage. It should be TestStorage.",
    "html": "The constructor name is testStorage. It should be TestStorage.",
    "sent": "2018-01-11T11:57:44.912Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a575143ba39a53f1a01e711",
    "text": "Once you fix that bug, your test code should work.",
    "html": "Once you fix that bug, your test code should work.",
    "sent": "2018-01-11T11:57:55.976Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a575186ba39a53f1a01e8aa",
    "text": "oh...jesus...",
    "html": "oh...jesus...",
    "sent": "2018-01-11T11:59:02.237Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a57519883152df26d5a7d77",
    "text": "I'm so foolish.",
    "html": "I&#39;m so foolish.",
    "sent": "2018-01-11T11:59:20.942Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5751bad0514c785b1914b9",
    "text": "```\n5\n00000000000000000000000xbccc714d56bc0da0fd33d96d2a87b680dd6d0df6\n0000000000000000000000000000000000000000000000000000000000000005\n0x58\nDEC: 88\n```",
    "html": "<pre><code>5\n00000000000000000000000<span class=\"tag\">xbccc714d56bc0da0fd33d96d2a87b680dd6d0df6</span>\n0000000000000000000000000000000000000000000000000000000000000005\n0<span class=\"tag\">x58</span>\n<span class=\"rule\"><span class=\"attribute\">DEC</span>:<span class=\"value\"> <span class=\"number\">88</span></span></span></code></pre>",
    "sent": "2018-01-11T11:59:54.049Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a575235290a1f456176b891",
    "text": "You still need to64 on the key and index before it'll work though.",
    "html": "You still need to64 on the key and index before it&#39;ll work though.",
    "sent": "2018-01-11T12:01:57.838Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a575244ba39a53f1a01ec63",
    "text": "yes",
    "html": "yes",
    "sent": "2018-01-11T12:02:12.373Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a57525f5a9ebe4f7573b93c",
    "text": "Line 2 ann Line 3 are output of zhe key and index",
    "html": "Line 2 ann Line 3 are output of zhe key and index",
    "sent": "2018-01-11T12:02:39.080Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a57912683152df26d5c0535",
    "text": "Nice to see so much action here overnight.",
    "html": "Nice to see so much action here overnight.",
    "sent": "2018-01-11T16:30:30.436Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a57a2c683152df26d5c7809",
    "text": "If I have a case in which I do not want any address (contract or EOA) to be able to call the fallback function of a contract, is it more appropriate to use `assert(false)` or `require(false)` as conditions? Or should I be thinking about this another way? ",
    "html": "If I have a case in which I do not want any address (contract or EOA) to be able to call the fallback function of a contract, is it more appropriate to use <code>assert(false)</code> or <code>require(false)</code> as conditions? Or should I be thinking about this another way? ",
    "sent": "2018-01-11T17:45:42.036Z",
    "fromUser": {
      "id": "59511a72d73408ce4f6a3063",
      "username": "thekscar",
      "displayName": "Karen",
      "url": "/thekscar",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thekscar",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a581aedb48e8c3566cd727a",
    "text": "@kds0718 You shouldn't. The fallback function needs to be called when selfdestruct is called.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"kds0718\" class=\"mention\">@kds0718</span> You shouldn&#39;t. The fallback function needs to be called when selfdestruct is called.",
    "sent": "2018-01-12T02:18:21.969Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [
      {
        "screenName": "kds0718",
        "userId": "59511a72d73408ce4f6a3063",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a584a79ae53c15903da3c33",
    "text": "@chuacw Thanks. I know `selfdestruct()` is included in the fallback sometimes, but to my knowledge (and from a quick test in remix), it looks like it is not dependent on the fallback -- it can be included in any other function created on the contract...is this what you meant or...?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"chuacw\" class=\"mention\">@chuacw</span> Thanks. I know <code>selfdestruct()</code> is included in the fallback sometimes, but to my knowledge (and from a quick test in remix), it looks like it is not dependent on the fallback -- it can be included in any other function created on the contract...is this what you meant or...?",
    "sent": "2018-01-12T05:41:13.696Z",
    "fromUser": {
      "id": "59511a72d73408ce4f6a3063",
      "username": "thekscar",
      "displayName": "Karen",
      "url": "/thekscar",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thekscar",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [
      {
        "screenName": "chuacw",
        "userId": "59cf1180d73408ce4f77fc7e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5892bdce68c3bc74abb3de",
    "text": "@kds0718  if other contracts call selfdestruct and the destination is your contract, your contract will fail.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"kds0718\" class=\"mention\">@kds0718</span>  if other contracts call selfdestruct and the destination is your contract, your contract will fail.",
    "sent": "2018-01-12T10:49:33.240Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [
      {
        "screenName": "kds0718",
        "userId": "59511a72d73408ce4f6a3063",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a58ad78ae53c15903dc2b6a",
    "text": "Is it foolish to create a mapping  to a dynamic array? I want to map msg.sender to a string[] ",
    "html": "Is it foolish to create a mapping  to a dynamic array? I want to map msg.sender to a string[] ",
    "sent": "2018-01-12T12:43:36.882Z",
    "fromUser": {
      "id": "59a67412d73408ce4f738ef8",
      "username": "aido179",
      "displayName": "Aidan Breen",
      "url": "/aido179",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aido179",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5263723?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5263723?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a58af5fce68c3bc74ac4cfd",
    "text": "Nevermind..it looks like it's just not possible. \n> UnimplementedFeatureError: Nested dynamic arrays not implemented here.",
    "html": "<p>Nevermind..it looks like it&#39;s just not possible. </p><blockquote>\n<p>UnimplementedFeatureError: Nested dynamic arrays not implemented here.</p></blockquote>\n",
    "sent": "2018-01-12T12:51:43.838Z",
    "fromUser": {
      "id": "59a67412d73408ce4f738ef8",
      "username": "aido179",
      "displayName": "Aidan Breen",
      "url": "/aido179",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/aido179",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5263723?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5263723?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a58b3fd61a861c9270515bb",
    "text": "@kds0718 @chuacw:  If you call `selfdestruct(someAddress)`, it's not that the fallback will fail, it's just that no code will be executed at all. \nIf you don't want your fallback function to run,  just don't write one. That ensures that a simple ether send will fail. ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"kds0718\" class=\"mention\">@kds0718</span> <span data-link-type=\"mention\" data-screen-name=\"chuacw\" class=\"mention\">@chuacw</span>:  If you call <code>selfdestruct(someAddress)</code>, it&#39;s not that the fallback will fail, it&#39;s just that no code will be executed at all.<br>If you don&#39;t want your fallback function to run,  just don&#39;t write one. That ensures that a simple ether send will fail. ",
    "sent": "2018-01-12T13:11:25.914Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 28,
    "urls": [],
    "mentions": [
      {
        "screenName": "kds0718",
        "userId": "59511a72d73408ce4f6a3063",
        "userIds": []
      },
      {
        "screenName": "chuacw",
        "userId": "59cf1180d73408ce4f77fc7e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a58b428290a1f45617de812",
    "text": "https://consensys.github.io/smart-contract-best-practices/recommendations/#remember-that-ether-can-be-forcibly-sent-to-an-account",
    "html": "<a href=\"https://consensys.github.io/smart-contract-best-practices/recommendations/#remember-that-ether-can-be-forcibly-sent-to-an-account\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://consensys.github.io/smart-contract-best-practices/recommendations/#remember-that-ether-can-be-forcibly-sent-to-an-account</a>",
    "sent": "2018-01-12T13:12:08.149Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [
      {
        "url": "https://consensys.github.io/smart-contract-best-practices/recommendations/#remember-that-ether-can-be-forcibly-sent-to-an-account"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a58bef1ce68c3bc74aca090",
    "text": "@maurelian @kds0718 wants to add an assert(false) or require(false) in the fallback function. I'm thinking that in that case, selfdestruct(contractaddress) will fail then. Not correct?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> <span data-link-type=\"mention\" data-screen-name=\"kds0718\" class=\"mention\">@kds0718</span> wants to add an assert(false) or require(false) in the fallback function. I&#39;m thinking that in that case, selfdestruct(contractaddress) will fail then. Not correct?",
    "sent": "2018-01-12T13:58:09.802Z",
    "editedAt": "2018-01-12T13:58:50.138Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 28,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      },
      {
        "screenName": "kds0718",
        "userId": "59511a72d73408ce4f6a3063",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a58d25f83152df26d625086",
    "text": "@aido179, you should be able to implement mapping(address => bytes32[]) if that's functional for you",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"aido179\" class=\"mention\">@aido179</span>, you should be able to implement mapping(address =&gt; bytes32[]) if that&#39;s functional for you",
    "sent": "2018-01-12T15:21:03.769Z",
    "fromUser": {
      "id": "58e664ecd73408ce4f5694ed",
      "username": "jessicagmarshall",
      "displayName": "Jessica Marshall",
      "url": "/jessicagmarshall",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jessicagmarshall",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12129939?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12129939?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 28,
    "urls": [],
    "mentions": [
      {
        "screenName": "aido179",
        "userId": "59a67412d73408ce4f738ef8",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a58d2af1dcb91f1774199bb",
    "text": "@chuacw no. There is no execution whatsoever by the recipient when funds are sent using `selfdestruct`",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"chuacw\" class=\"mention\">@chuacw</span> no. There is no execution whatsoever by the recipient when funds are sent using <code>selfdestruct</code>",
    "sent": "2018-01-12T15:22:23.061Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 28,
    "urls": [],
    "mentions": [
      {
        "screenName": "chuacw",
        "userId": "59cf1180d73408ce4f77fc7e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a58d3856117191e6159af3b",
    "text": "@aido179 bytes32 and strings are fairly interchangeable: https://ethereum.stackexchange.com/questions/11556/use-string-type-or-bytes32",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"aido179\" class=\"mention\">@aido179</span> bytes32 and strings are fairly interchangeable: <a href=\"https://ethereum.stackexchange.com/questions/11556/use-string-type-or-bytes32\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://ethereum.stackexchange.com/questions/11556/use-string-type-or-bytes32</a>",
    "sent": "2018-01-12T15:25:57.048Z",
    "fromUser": {
      "id": "58e664ecd73408ce4f5694ed",
      "username": "jessicagmarshall",
      "displayName": "Jessica Marshall",
      "url": "/jessicagmarshall",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jessicagmarshall",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12129939?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12129939?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [
      {
        "url": "https://ethereum.stackexchange.com/questions/11556/use-string-type-or-bytes32"
      }
    ],
    "mentions": [
      {
        "screenName": "aido179",
        "userId": "59a67412d73408ce4f738ef8",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a58d3b61dcb91f177419fd2",
    "text": "@maurelian  thanks!",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span>  thanks!",
    "sent": "2018-01-12T15:26:46.228Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 28,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a58d3e661a861c92705d9ce",
    "text": "Sure thing. He's a code sample for quick testing: \n```\npragma solidity ^0.4.10;\n\ncontract NoFallback {\n    function getBalance() public view returns(uint) {\n        return this.balance;\n    }\n}\n\ncontract SelfDestructor {\n    NoFallback nf;    \n    function SelfDestructor(NoFallback _nf) public payable {\n        nf = _nf;\n    }\n    \n    function die() public {\n        selfdestruct(nf);\n    }    \n}\n```",
    "html": "Sure thing. He&#39;s a code sample for quick testing: <pre><code>pragma solidity ^<span class=\"number\">0.4</span>.10;\n\ncontract NoFallback {\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getBalance</span><span class=\"params\">()</span> <span class=\"title\">public</span> <span class=\"title\">view</span> <span class=\"title\">returns</span><span class=\"params\">(uint)</span> </span>{\n        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.balance;\n    }\n}\n\ncontract SelfDestructor {\n    NoFallback nf;    \n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SelfDestructor</span><span class=\"params\">(NoFallback _nf)</span> <span class=\"title\">public</span> <span class=\"title\">payable</span> </span>{\n        nf = _nf;\n    }\n\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">die</span><span class=\"params\">()</span> <span class=\"title\">public</span> </span>{\n        selfdestruct(nf);\n    }    \n}</code></pre>",
    "sent": "2018-01-12T15:27:34.840Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 28,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5bd17b5a9ebe4f758810f5",
    "text": "what is the best way to access a contract that was deployed by another contract on the client using truffle-contract?",
    "html": "what is the best way to access a contract that was deployed by another contract on the client using truffle-contract?",
    "sent": "2018-01-14T21:54:03.624Z",
    "fromUser": {
      "id": "5a512879d73408ce4f869754",
      "username": "MaxBlaushild",
      "displayName": "Max Blaushild",
      "url": "/MaxBlaushild",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/MaxBlaushild",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10455413?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10455413?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5bd737290a1f45618acd59",
    "text": "@MaxBlaushild more likely to get an answer here: https://gitter.im/ConsenSys/truffle",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"MaxBlaushild\" class=\"mention\">@MaxBlaushild</span> more likely to get an answer here: <a href=\"https://gitter.im/ConsenSys/truffle\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gitter.im/ConsenSys/truffle</a>",
    "sent": "2018-01-14T22:18:31.281Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 28,
    "urls": [
      {
        "url": "https://gitter.im/ConsenSys/truffle"
      }
    ],
    "mentions": [
      {
        "screenName": "MaxBlaushild",
        "userId": "5a512879d73408ce4f869754",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a45387dc072deaf0b10bb5d",
    "text": "personal.unlockAccount(address, \"password\", 300)",
    "html": "personal.unlockAccount(address, &quot;password&quot;, 300)",
    "sent": "2017-12-28T18:31:25.240Z",
    "fromUser": {
      "id": "59ce6717d73408ce4f77ebe4",
      "username": "micahriggan",
      "displayName": "micahriggan",
      "url": "/micahriggan",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/micahriggan",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3626473?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3626473?v=4&s=128",
      "v": 16,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a4538b3b48e8c356676590b",
    "text": "Usually you'd unlock account[0] or eth.coinbase",
    "html": "Usually you&#39;d unlock account[0] or eth.coinbase",
    "sent": "2017-12-28T18:32:19.229Z",
    "fromUser": {
      "id": "59ce6717d73408ce4f77ebe4",
      "username": "micahriggan",
      "displayName": "micahriggan",
      "url": "/micahriggan",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/micahriggan",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3626473?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3626473?v=4&s=128",
      "v": 16,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a456017edd2230811ea8c2b",
    "text": "@KenoLeon the key is to be able to ensure that there no way an untrusted party can force you the loop to become arbitrarily large. There's some discussion about it here: https://consensys.github.io/smart-contract-best-practices/known_attacks/#dos-with-block-gas-limit\n\nIf you feel like it doesn't address your questions, please ask further here so we can expand it. :)",
    "html": "<p><span data-link-type=\"mention\" data-screen-name=\"KenoLeon\" class=\"mention\">@KenoLeon</span> the key is to be able to ensure that there no way an untrusted party can force you the loop to become arbitrarily large. There&#39;s some discussion about it here: <a href=\"https://consensys.github.io/smart-contract-best-practices/known_attacks/#dos-with-block-gas-limit\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://consensys.github.io/smart-contract-best-practices/known_attacks/#dos-with-block-gas-limit</a></p><p>If you feel like it doesn&#39;t address your questions, please ask further here so we can expand it. :)</p>",
    "sent": "2017-12-28T21:20:23.206Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [
      {
        "url": "https://consensys.github.io/smart-contract-best-practices/known_attacks/#dos-with-block-gas-limit"
      }
    ],
    "mentions": [
      {
        "screenName": "KenoLeon",
        "userId": "59ab56a1d73408ce4f741299",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a4563810163b028108b1571",
    "text": "@maurelian Thanks, it does address part of my question, i.e. iterating is expensive and could cause gas overflows, what I am still not entirely sure is the alternative pattern for say iterating over a mapping of addresses, so doing it off chain or changing the logic from say an airdrop to withdrawals is what I can come up with, not sure there's a better one, thanks again.   ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> Thanks, it does address part of my question, i.e. iterating is expensive and could cause gas overflows, what I am still not entirely sure is the alternative pattern for say iterating over a mapping of addresses, so doing it off chain or changing the logic from say an airdrop to withdrawals is what I can come up with, not sure there&#39;s a better one, thanks again.   ",
    "sent": "2017-12-28T21:34:57.555Z",
    "fromUser": {
      "id": "59ab56a1d73408ce4f741299",
      "username": "KenoLeon",
      "displayName": "Keno Leon",
      "url": "/KenoLeon",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/KenoLeon",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10525682?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10525682?v=4&s=128",
      "v": 4,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a456448ba39a53f1ab11c45",
    "text": "Yeah, I don't think there's really an alternative, in that case you can just provide a `_start` and `_finish` index to a for loop.",
    "html": "Yeah, I don&#39;t think there&#39;s really an alternative, in that case you can just provide a <code>_start</code> and <code>_finish</code> index to a for loop.",
    "sent": "2017-12-28T21:38:16.287Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a4595110163b028108bda3b",
    "text": "Should we add a section on preparing for an audit, and doing an audit to the best practices?",
    "html": "Should we add a section on preparing for an audit, and doing an audit to the best practices?",
    "sent": "2017-12-29T01:06:25.236Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a45fc36ba39a53f1ab358e1",
    "text": "On runnning truffle compile,I am getting this error \"Error: ENOENT: no such file or directory\"? Any help would be great.",
    "html": "On runnning truffle compile,I am getting this error &quot;Error: ENOENT: no such file or directory&quot;? Any help would be great.",
    "sent": "2017-12-29T08:26:30.691Z",
    "fromUser": {
      "id": "5a45fafbd73408ce4f8540ee",
      "username": "sarthakmis",
      "displayName": "sarthakmis",
      "url": "/sarthakmis",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/sarthakmis",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/31609472?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/31609472?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a473213e43a7a150cbdf0c4",
    "text": "Are you importing a file somewhere that doesn't exist?",
    "html": "Are you importing a file somewhere that doesn&#39;t exist?",
    "sent": "2017-12-30T06:28:35.771Z",
    "fromUser": {
      "id": "59ce6717d73408ce4f77ebe4",
      "username": "micahriggan",
      "displayName": "micahriggan",
      "url": "/micahriggan",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/micahriggan",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3626473?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3626473?v=4&s=128",
      "v": 16,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a4737fb0163b028109276b2",
    "text": "No.......",
    "html": "No.......",
    "sent": "2017-12-30T06:53:47.114Z",
    "fromUser": {
      "id": "5a45fafbd73408ce4f8540ee",
      "username": "sarthakmis",
      "displayName": "sarthakmis",
      "url": "/sarthakmis",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/sarthakmis",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/31609472?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/31609472?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a47e32829ec6ac3119e6e2e",
    "text": "@laitassou that's a familar error, but pretty tricky to debug. You might have better luck in https://gitter.im/ConsenSys/truffle",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"laitassou\" class=\"mention\">@laitassou</span> that&#39;s a familar error, but pretty tricky to debug. You might have better luck in <a href=\"https://gitter.im/ConsenSys/truffle\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gitter.im/ConsenSys/truffle</a>",
    "sent": "2017-12-30T19:04:08.131Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [
      {
        "url": "https://gitter.im/ConsenSys/truffle"
      }
    ],
    "mentions": [
      {
        "screenName": "laitassou",
        "userId": "59e88d19d73408ce4f7ab8c0",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a47e45bedd2230811f49dee",
    "text": "@micahriggan thanks for helping the community here. Much appreciated.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"micahriggan\" class=\"mention\">@micahriggan</span> thanks for helping the community here. Much appreciated.",
    "sent": "2017-12-30T19:09:15.241Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [
      {
        "screenName": "micahriggan",
        "userId": "59ce6717d73408ce4f77ebe4",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a4aa45eb48e8c35668b939a",
    "text": "@maurelian  thanks you I resolved the problem, this is due to a constructor parameter in base classe",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span>  thanks you I resolved the problem, this is due to a constructor parameter in base classe",
    "sent": "2018-01-01T21:13:02.200Z",
    "fromUser": {
      "id": "59e88d19d73408ce4f7ab8c0",
      "username": "laitassou",
      "displayName": "laitassou",
      "url": "/laitassou",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/laitassou",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=128",
      "v": 38,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a4aa46b03838b2f2a5c716f",
    "text": "@laitassou\nHi \nIs there a way to encrypt some message using contract owner ?\nthanks",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"laitassou\" class=\"mention\">@laitassou</span><br>Hi<br>Is there a way to encrypt some message using contract owner ?<br>thanks",
    "sent": "2018-01-01T21:13:15.144Z",
    "fromUser": {
      "id": "59e88d19d73408ce4f7ab8c0",
      "username": "laitassou",
      "displayName": "laitassou",
      "url": "/laitassou",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/laitassou",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=128",
      "v": 38,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [
      {
        "screenName": "laitassou",
        "userId": "59e88d19d73408ce4f7ab8c0",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a4ab03303838b2f2a5ca644",
    "text": "@laitassou maybe you're looking for eth.personalSign()",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"laitassou\" class=\"mention\">@laitassou</span> maybe you&#39;re looking for eth.personalSign()",
    "sent": "2018-01-01T22:03:31.485Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [
      {
        "screenName": "laitassou",
        "userId": "59e88d19d73408ce4f7ab8c0",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a4ab7ab03838b2f2a5ccac4",
    "text": "What I need exactly is to encrypt some personal data of users",
    "html": "What I need exactly is to encrypt some personal data of users",
    "sent": "2018-01-01T22:35:23.038Z",
    "fromUser": {
      "id": "59e88d19d73408ce4f7ab8c0",
      "username": "laitassou",
      "displayName": "laitassou",
      "url": "/laitassou",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/laitassou",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=128",
      "v": 38,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a4ab7eab48e8c35668be743",
    "text": "and only when some users pay for example they can decrypt that personal data",
    "html": "and only when some users pay for example they can decrypt that personal data",
    "sent": "2018-01-01T22:36:26.844Z",
    "fromUser": {
      "id": "59e88d19d73408ce4f7ab8c0",
      "username": "laitassou",
      "displayName": "laitassou",
      "url": "/laitassou",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/laitassou",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=128",
      "v": 38,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a4ab82684fb74b94027fca6",
    "text": "for example I want to encrypt phonenumber of users and when only some other users pay for a service they  can decrypt it",
    "html": "for example I want to encrypt phonenumber of users and when only some other users pay for a service they  can decrypt it",
    "sent": "2018-01-01T22:37:26.810Z",
    "fromUser": {
      "id": "59e88d19d73408ce4f7ab8c0",
      "username": "laitassou",
      "displayName": "laitassou",
      "url": "/laitassou",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/laitassou",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=128",
      "v": 38,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a4ab98d84fb74b940280174",
    "text": "perhaps I should store phonenumber like this  h = web3.sha3(phonenumber) ?",
    "html": "perhaps I should store phonenumber like this  h = web3.sha3(phonenumber) ?",
    "sent": "2018-01-01T22:43:25.677Z",
    "fromUser": {
      "id": "59e88d19d73408ce4f7ab8c0",
      "username": "laitassou",
      "displayName": "laitassou",
      "url": "/laitassou",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/laitassou",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=128",
      "v": 38,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a4b6828b48e8c35668ea7c4",
    "text": "@laitassou https://consensys.github.io/smart-contract-best-practices/recommendations/#remember-that-on-chain-data-is-public\n\nIf I understand what you're proposing, there's no way to do that. \nFor the contract to decrypt data, you would need to store both the encrypted data, and the key to decrypt the data on-chain.",
    "html": "<p><span data-link-type=\"mention\" data-screen-name=\"laitassou\" class=\"mention\">@laitassou</span> <a href=\"https://consensys.github.io/smart-contract-best-practices/recommendations/#remember-that-on-chain-data-is-public\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://consensys.github.io/smart-contract-best-practices/recommendations/#remember-that-on-chain-data-is-public</a></p><p>If I understand what you&#39;re proposing, there&#39;s no way to do that.<br>For the contract to decrypt data, you would need to store both the encrypted data, and the key to decrypt the data on-chain.</p>",
    "sent": "2018-01-02T11:08:24.416Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [
      {
        "url": "https://consensys.github.io/smart-contract-best-practices/recommendations/#remember-that-on-chain-data-is-public"
      }
    ],
    "mentions": [
      {
        "screenName": "laitassou",
        "userId": "59e88d19d73408ce4f7ab8c0",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a4b686303838b2f2a5f9ce5",
    "text": "ok thanks  @maurelian , sounds good I see ",
    "html": "ok thanks  <span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> , sounds good I see ",
    "sent": "2018-01-02T11:09:23.943Z",
    "fromUser": {
      "id": "59e88d19d73408ce4f7ab8c0",
      "username": "laitassou",
      "displayName": "laitassou",
      "url": "/laitassou",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/laitassou",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/18515729?v=4&s=128",
      "v": 38,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a4c7bf681cd9a5d7ea247c6",
    "text": "Just tried http://securify.ch for fun.  It's recommending pull over push pattern again ",
    "html": "Just tried <a href=\"http://securify.ch\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://securify.ch</a> for fun.  It&#39;s recommending pull over push pattern again ",
    "sent": "2018-01-03T06:45:10.375Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [
      {
        "url": "http://securify.ch"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a4c7c0d97cedeb0482d8e3d",
    "text": "[![Screen Shot 2018-01-03 at 06.44.27.png](https://files.gitter.im/ConsenSys/smart-contract-best-practices/U1hm/thumb/Screen-Shot-2018-01-03-at-06.44.27.png)](https://files.gitter.im/ConsenSys/smart-contract-best-practices/U1hm/Screen-Shot-2018-01-03-at-06.44.27.png)",
    "html": "<a href=\"https://files.gitter.im/ConsenSys/smart-contract-best-practices/U1hm/Screen-Shot-2018-01-03-at-06.44.27.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/ConsenSys/smart-contract-best-practices/U1hm/thumb/Screen-Shot-2018-01-03-at-06.44.27.png\" alt=\"Screen Shot 2018-01-03 at 06.44.27.png\" rel=\"nofollow\"></a>",
    "sent": "2018-01-03T06:45:33.346Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [
      {
        "url": "https://files.gitter.im/ConsenSys/smart-contract-best-practices/U1hm/thumb/Screen-Shot-2018-01-03-at-06.44.27.png"
      },
      {
        "url": "https://files.gitter.im/ConsenSys/smart-contract-best-practices/U1hm/Screen-Shot-2018-01-03-at-06.44.27.png"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a4c7c6a19147ac3231b2ce7",
    "text": "I am not sure why miner reordering cause an issue here.",
    "html": "I am not sure why miner reordering cause an issue here.",
    "sent": "2018-01-03T06:47:06.440Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a4c7d2851915d962afd9663",
    "text": "This is the actual violation against blockparty code base ",
    "html": "This is the actual violation against blockparty code base ",
    "sent": "2018-01-03T06:50:16.792Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a4c7d3581cd9a5d7ea247d3",
    "text": "[![Screen Shot 2018-01-03 at 06.49.41.png](https://files.gitter.im/ConsenSys/smart-contract-best-practices/OdA1/thumb/Screen-Shot-2018-01-03-at-06.49.41.png)](https://files.gitter.im/ConsenSys/smart-contract-best-practices/OdA1/Screen-Shot-2018-01-03-at-06.49.41.png)",
    "html": "<a href=\"https://files.gitter.im/ConsenSys/smart-contract-best-practices/OdA1/Screen-Shot-2018-01-03-at-06.49.41.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/ConsenSys/smart-contract-best-practices/OdA1/thumb/Screen-Shot-2018-01-03-at-06.49.41.png\" alt=\"Screen Shot 2018-01-03 at 06.49.41.png\" rel=\"nofollow\"></a>",
    "sent": "2018-01-03T06:50:29.796Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [
      {
        "url": "https://files.gitter.im/ConsenSys/smart-contract-best-practices/OdA1/thumb/Screen-Shot-2018-01-03-at-06.49.41.png"
      },
      {
        "url": "https://files.gitter.im/ConsenSys/smart-contract-best-practices/OdA1/Screen-Shot-2018-01-03-at-06.49.41.png"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a4c7d5a51915d962afd9665",
    "text": "I can rewrite as the securify suggests but this will limit possibility of sending to charity etc.",
    "html": "I can rewrite as the securify suggests but this will limit possibility of sending to charity etc.",
    "sent": "2018-01-03T06:51:06.105Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a4c969784fb74b940306bee",
    "text": "Hi ! This is my fallback function -> function () payable public {\nrequire(!crowdsaleClosed);\nuint amount = msg.value;\nuint b_bal = amount.div(price);\n_balanceOf[owner] = _balanceOf[owner].sub(b_bal);\n_balanceOf[msg.sender] = _balanceOf[msg.sender].add(b_bal);\namountRaised = amountRaised.add(amount);\nFundTransfer(msg.sender, amount, true);\n}\n\nIt runs out of gas because of so many operations. How can I perform these operations when someone sends ether to the contract?",
    "html": "<p>Hi ! This is my fallback function -&gt; function () payable public {<br>require(!crowdsaleClosed);<br>uint amount = msg.value;<br>uint b_bal = amount.div(price);<br>_balanceOf[owner] = _balanceOf[owner].sub(b_bal);<br>_balanceOf[msg.sender] = _balanceOf[msg.sender].add(b_bal);<br>amountRaised = amountRaised.add(amount);<br>FundTransfer(msg.sender, amount, true);<br>}</p><p>It runs out of gas because of so many operations. How can I perform these operations when someone sends ether to the contract?</p>",
    "sent": "2018-01-03T08:38:47.599Z",
    "fromUser": {
      "id": "59b0d559d73408ce4f74ad1f",
      "username": "avishkarabhishek786",
      "displayName": "Abhishek Sinha",
      "url": "/avishkarabhishek786",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/avishkarabhishek786",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/27818433?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/27818433?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a4cec0b03838b2f2a67004c",
    "text": "Hey @makoto!  The first screenshot is about txn ordering dependence, not pull/push. The only issue I see with your example is if the receiver is a contract with a failing fallback function. What about using the pattern I suggested in that last post to queue up a withdrawal in case of failure?",
    "html": "Hey <span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span>!  The first screenshot is about txn ordering dependence, not pull/push. The only issue I see with your example is if the receiver is a contract with a failing fallback function. What about using the pattern I suggested in that last post to queue up a withdrawal in case of failure?",
    "sent": "2018-01-03T14:43:23.681Z",
    "editedAt": "2018-01-03T14:43:29.011Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a4cec325355812e5748be78",
    "text": "Also FWIW, `addr.transfer()` is the same as `require(addr.send())`",
    "html": "Also FWIW, <code>addr.transfer()</code> is the same as <code>require(addr.send())</code>",
    "sent": "2018-01-03T14:44:02.348Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a4ced0d68d092bb621c2d83",
    "text": "@avishkarabhishek786 please please take the time to wrap your code in 3 backticks so it's more readable when asking a question. \n\n```\nfunction () payable public {\n  require(!crowdsaleClosed);\n  uint amount = msg.value;\n  uint b_bal = amount.div(price);\n  _balanceOf[owner] = _balanceOf[owner].sub(b_bal);\n  _balanceOf[msg.sender] = _balanceOf[msg.sender].add(b_bal);\n  amountRaised = amountRaised.add(amount);\n  FundTransfer(msg.sender, amount, true);\n}\n```",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"avishkarabhishek786\" class=\"mention\">@avishkarabhishek786</span> please please take the time to wrap your code in 3 backticks so it&#39;s more readable when asking a question. <pre><code><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> <span class=\"title\">payable</span> <span class=\"title\">public</span> </span>{\n  <span class=\"built_in\">require</span>(!crowdsaleClosed);\n  uint amount = msg.value;\n  uint b_bal = amount.div(price);\n  _balanceOf[owner] = _balanceOf[owner].sub(b_bal);\n  _balanceOf[msg.sender] = _balanceOf[msg.sender].add(b_bal);\n  amountRaised = amountRaised.add(amount);\n  FundTransfer(msg.sender, amount, <span class=\"literal\">true</span>);\n}</code></pre>",
    "sent": "2018-01-03T14:47:41.651Z",
    "editedAt": "2018-01-03T14:48:26.118Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [
      {
        "screenName": "avishkarabhishek786",
        "userId": "59b0d559d73408ce4f74ad1f",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a4ced2529ec6ac311b399d3",
    "text": "If it runs out of gas, then you need to include more gas with your transaction.",
    "html": "If it runs out of gas, then you need to include more gas with your transaction.",
    "sent": "2018-01-03T14:48:05.957Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a4df42dedd22308110ee9f9",
    "text": "@maurelian The first screenshot explains that it's txn ordering dependence, but it's solution was to use pull not push if I understand correctly",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> The first screenshot explains that it&#39;s txn ordering dependence, but it&#39;s solution was to use pull not push if I understand correctly",
    "sent": "2018-01-04T09:30:21.374Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a4e287c68d092bb62226a8b",
    "text": "@makoto it's confusing to me",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span> it&#39;s confusing to me",
    "sent": "2018-01-04T13:13:32.700Z",
    "editedAt": "2018-01-04T13:14:17.841Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a4e29b568d092bb6222714b",
    "text": "Partly because of their terminology \"transactions may affect ether receiver\"... but I now understand it as \".... may affect who the ether is sent to...\". \nIt seems like a pretty naive warning though, probably just looking for `addr.send()`.  I think you know when you can disregard in the name of UX. ",
    "html": "Partly because of their terminology &quot;transactions may affect ether receiver&quot;... but I now understand it as &quot;.... may affect who the ether is sent to...&quot;.<br>It seems like a pretty naive warning though, probably just looking for <code>addr.send()</code>.  I think you know when you can disregard in the name of UX. ",
    "sent": "2018-01-04T13:18:45.538Z",
    "editedAt": "2018-01-04T13:19:04.708Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a4e3c03b48e8c35669cddc9",
    "text": "Yeah, I found their explanation confusing, too",
    "html": "Yeah, I found their explanation confusing, too",
    "sent": "2018-01-04T14:36:51.302Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a535e6403838b2f2a84c6cf",
    "text": "Hi, all. I'm new to smart-contract. \nI encountered a problem. How to get state variables where it is a `mapping`",
    "html": "Hi, all. I&#39;m new to smart-contract.<br>I encountered a problem. How to get state variables where it is a <code>mapping</code>",
    "sent": "2018-01-08T12:04:52.588Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a535e78ce68c3bc7490efb4",
    "text": "Could someone help me ? Thx.",
    "html": "Could someone help me ? Thx.",
    "sent": "2018-01-08T12:05:12.132Z",
    "editedAt": "2018-01-08T12:07:51.757Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a54e94fd0514c785b0ccdbb",
    "text": "I have the same question as @ElliotCui ",
    "html": "I have the same question as <span data-link-type=\"mention\" data-screen-name=\"ElliotCui\" class=\"mention\">@ElliotCui</span> ",
    "sent": "2018-01-09T16:09:51.055Z",
    "fromUser": {
      "id": "5a54e91bd73408ce4f872fe3",
      "username": "gwmccubbin",
      "displayName": "Gregory McCubbin",
      "url": "/gwmccubbin",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/gwmccubbin",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4922591?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4922591?v=4&s=128",
      "v": 8,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [
      {
        "screenName": "ElliotCui",
        "userId": "5a535e0bd73408ce4f86e49b",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a54fad2b48e8c3566bcf263",
    "text": "@ElliotCui are you trying to get it from within your contract, or externally?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"ElliotCui\" class=\"mention\">@ElliotCui</span> are you trying to get it from within your contract, or externally?",
    "sent": "2018-01-09T17:24:34.285Z",
    "fromUser": {
      "id": "59ce6717d73408ce4f77ebe4",
      "username": "micahriggan",
      "displayName": "micahriggan",
      "url": "/micahriggan",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/micahriggan",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3626473?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3626473?v=4&s=128",
      "v": 16,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [
      {
        "screenName": "ElliotCui",
        "userId": "5a535e0bd73408ce4f86e49b",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a54fadf5a9ebe4f75675715",
    "text": "Like from javascript",
    "html": "Like from javascript",
    "sent": "2018-01-09T17:24:47.826Z",
    "fromUser": {
      "id": "59ce6717d73408ce4f77ebe4",
      "username": "micahriggan",
      "displayName": "micahriggan",
      "url": "/micahriggan",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/micahriggan",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3626473?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3626473?v=4&s=128",
      "v": 16,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5587f4ba39a53f1af8e29c",
    "text": "@micahriggan \nI tried to get state variables from external. But failed.\nThe example I used is from this website: \nhttps://medium.com/aigang-network/how-to-read-ethereum-contract-storage-44252c8af925 \nand\nhttps://ropsten.etherscan.io/address/0xf1f5896ace3a78c347eb7eab503450bc93bd0c3b#code\n\nThe example runs out the result, but I can't get the result on my local mac.\n\n@gwmccubbin Maybe this will give you help.",
    "html": "<p><span data-link-type=\"mention\" data-screen-name=\"micahriggan\" class=\"mention\">@micahriggan</span><br>I tried to get state variables from external. But failed.<br>The example I used is from this website:<br><a href=\"https://medium.com/aigang-network/how-to-read-ethereum-contract-storage-44252c8af925\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://medium.com/aigang-network/how-to-read-ethereum-contract-storage-44252c8af925</a><br>and<br><a href=\"https://ropsten.etherscan.io/address/0xf1f5896ace3a78c347eb7eab503450bc93bd0c3b#code\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://ropsten.etherscan.io/address/0xf1f5896ace3a78c347eb7eab503450bc93bd0c3b#code</a></p><p>The example runs out the result, but I can&#39;t get the result on my local mac.</p><p><span data-link-type=\"mention\" data-screen-name=\"gwmccubbin\" class=\"mention\">@gwmccubbin</span> Maybe this will give you help.</p>",
    "sent": "2018-01-10T03:26:44.420Z",
    "editedAt": "2018-01-10T03:27:16.777Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 4,
    "urls": [
      {
        "url": "https://medium.com/aigang-network/how-to-read-ethereum-contract-storage-44252c8af925"
      },
      {
        "url": "https://ropsten.etherscan.io/address/0xf1f5896ace3a78c347eb7eab503450bc93bd0c3b#code"
      }
    ],
    "mentions": [
      {
        "screenName": "micahriggan",
        "userId": "59ce6717d73408ce4f77ebe4",
        "userIds": []
      },
      {
        "screenName": "gwmccubbin",
        "userId": "5a54e91bd73408ce4f872fe3",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a55a613232e79134de9dbdd",
    "text": "May I write a smart contract in such a logic:\n1、I collect some crypto currency from persons, may be players.\n2、Run some logic in smart content, which is published, will be known by all  the people.\n3、This logic will return a rank. And then transfer ctypto currency which I collected to the person in specific rank, e.g. rank 1st, 2nd and 3rd.\n\nMy question is:\n1、Is this OK for people accepting the smart contract ?\n2、Is this Decentralized ?\n3、Is this a gamble? For I publish all the logic that I won't play trick on it.",
    "html": "<p>May I write a smart contract in such a logic:<br>1、I collect some crypto currency from persons, may be players.<br>2、Run some logic in smart content, which is published, will be known by all  the people.<br>3、This logic will return a rank. And then transfer ctypto currency which I collected to the person in specific rank, e.g. rank 1st, 2nd and 3rd.</p><p>My question is:<br>1、Is this OK for people accepting the smart contract ?<br>2、Is this Decentralized ?<br>3、Is this a gamble? For I publish all the logic that I won&#39;t play trick on it.</p>",
    "sent": "2018-01-10T05:35:15.508Z",
    "editedAt": "2018-01-10T05:36:04.213Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a55a6295a9ebe4f756ace42",
    "text": "Thx!",
    "html": "Thx!",
    "sent": "2018-01-10T05:35:37.592Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a55bfddb48e8c3566c0dd6a",
    "text": "@ElliotCui If you can provide your code that's not working , then people can help you. Now it sounds like what you're saying is... hey I don't know how to do my homework. Help me do it please.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"ElliotCui\" class=\"mention\">@ElliotCui</span> If you can provide your code that&#39;s not working , then people can help you. Now it sounds like what you&#39;re saying is... hey I don&#39;t know how to do my homework. Help me do it please.",
    "sent": "2018-01-10T07:25:17.519Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 2,
    "urls": [],
    "mentions": [
      {
        "screenName": "ElliotCui",
        "userId": "5a535e0bd73408ce4f86e49b",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a55c212d0514c785b1109d2",
    "text": "@chuacw \nSorry for that, 'cause my question is a little outdated.\nAnd I didn't post my code because of no body give a answers. just like 'ping', 'pong'.\n\nThe code which I said not work for me is as follows.\nand the example I copied from is the link that i have posted some hours ago on today.\n\n```solidity\npragma solidity ^0.4.17;\n\ncontract TestStorage {\n\n\tuint storeduint1 = 15;\n\tuint constant constuint = 16;\n\tuint128 investmentsLimit = 17055;\n\tuint32 investmentsDeadlineTimeStamp = uint32(now);\n\n\tbytes16 string1 = \"test1\";\n\tbytes32 string2 = \"test1236\";\n\tstring string3 = \"lets string something\";\n\n\tmapping (address => uint) uints1;\n\tmapping (address => DeviceData) structs1;\n\n\tuint[] uintarray;\n\tDeviceData[] deviceDataArray;\n\n\tstruct DeviceData {\n\t\tstring deviceBrand;\n\t\tstring deviceYear;\n\t\tstring batteryWearLevel;\n\t}\n\n\tfunction testStorage() {\n\t\taddress address1 = 0xbccc714d56bc0da0fd33d96d2a87b680dd6d0df6;\n\t\taddress address2 = 0xaee905fdd3ed851e48d22059575b9f4245a82b04;\n\n\t\tuints1[address1] = 88;\n\t\tuints1[address2] = 99;\n\n\t\tvar dev1 = DeviceData(\"deviceBrand\", \"deviceYear\", \"wearLevel\");\n\t\tvar dev2 = DeviceData(\"deviceBrand2\", \"deviceYear2\", \"wearLevel2\");\n\n\t\tstructs1[address1] = dev1;\n\t\tstructs1[address2] = dev2;\n\n\t\tuintarray.push(8000);\n\t\tuintarray.push(9000);\n\n\t\tdeviceDataArray.push(dev1);\n\t\tdeviceDataArray.push(dev2);\n\t}\n}\n```",
    "html": "<p><span data-link-type=\"mention\" data-screen-name=\"chuacw\" class=\"mention\">@chuacw</span><br>Sorry for that, &#39;cause my question is a little outdated.<br>And I didn&#39;t post my code because of no body give a answers. just like &#39;ping&#39;, &#39;pong&#39;.</p><p>The code which I said not work for me is as follows.<br>and the example I copied from is the link that i have posted some hours ago on today.</p><pre><code>pragma solidity ^<span class=\"number\">0.4</span>.17;\n\ncontract TestStorage {\n\n    <span class=\"typename\">uint</span> storeduint1 = <span class=\"number\">15</span>;\n    <span class=\"typename\">uint</span> constant constuint = <span class=\"number\">16</span>;\n    uint128 investmentsLimit = <span class=\"number\">17055</span>;\n    <span class=\"typename\">uint32</span> investmentsDeadlineTimeStamp = <span class=\"typename\">uint32</span>(now);\n\n    bytes16 string1 = <span class=\"string\">\"test1\"</span>;\n    bytes32 string2 = <span class=\"string\">\"test1236\"</span>;\n    <span class=\"typename\">string</span> string3 = <span class=\"string\">\"lets string something\"</span>;\n\n    mapping (address =&gt; <span class=\"typename\">uint</span>) uints1;\n    mapping (address =&gt; DeviceData) structs1;\n\n    <span class=\"typename\">uint</span>[] uintarray;\n    DeviceData[] deviceDataArray;\n\n    <span class=\"keyword\">struct</span> DeviceData {\n        <span class=\"typename\">string</span> deviceBrand;\n        <span class=\"typename\">string</span> deviceYear;\n        <span class=\"typename\">string</span> batteryWearLevel;\n    }\n\n    function testStorage() {\n        address address1 = <span class=\"number\">0xbccc714d56bc0da0fd33d96d2a87b680dd6d0df6</span>;\n        address address2 = <span class=\"number\">0xaee905fdd3ed851e48d22059575b9f4245a82b04</span>;\n\n        uints1[address1] = <span class=\"number\">88</span>;\n        uints1[address2] = <span class=\"number\">99</span>;\n\n        <span class=\"keyword\">var</span> dev1 = DeviceData(<span class=\"string\">\"deviceBrand\"</span>, <span class=\"string\">\"deviceYear\"</span>, <span class=\"string\">\"wearLevel\"</span>);\n        <span class=\"keyword\">var</span> dev2 = DeviceData(<span class=\"string\">\"deviceBrand2\"</span>, <span class=\"string\">\"deviceYear2\"</span>, <span class=\"string\">\"wearLevel2\"</span>);\n\n        structs1[address1] = dev1;\n        structs1[address2] = dev2;\n\n        uintarray.push(<span class=\"number\">8000</span>);\n        uintarray.push(<span class=\"number\">9000</span>);\n\n        deviceDataArray.push(dev1);\n        deviceDataArray.push(dev2);\n    }\n}</code></pre>",
    "sent": "2018-01-10T07:34:42.547Z",
    "editedAt": "2018-01-10T07:37:06.889Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 2,
    "urls": [],
    "mentions": [
      {
        "screenName": "chuacw",
        "userId": "59cf1180d73408ce4f77fc7e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 3
  },
  {
    "id": "5a55c225ba39a53f1af9d32a",
    "text": "And This is my test and test output.\n```\nvar TestStorage = artifacts.require(\"./TestStorage.sol\")\nvar BigNumber = require('bignumber.js');\n\nvar key = 0xbccc714d56bc0da0fd33d96d2a87b680dd6d0df6\nvar address2 = 0xaee905fdd3ed851e48d22059575b9f4245a82b04\n\nvar meta;\n\ncontract('TestStorage', function () {\n    // it(\"rank should be equal to 1\", function(){\n        TestStorage.deployed().then(function (instance) {\n            meta = instance;\n            contractAddress = instance.address;\n            console.log(contractAddress);\n\n            function increaseHexByOne(hex) {\n                let x = new BigNumber(hex)\n                let sum = x.add(1)\n                let result = '0x' + sum.toString(16)\n                return result\n            }\n\n            for (index = 0; index < 10; index++) {\n                console.log(index);\n                if (0 == index) {\n                    console.log(web3.eth.getStorageAt(contractAddress, index));\n                    console.log('DEC:' + web3.toDecimal(web3.eth.getStorageAt(contractAddress, index)));\n                    assert.equal(web3.toDecimal(web3.eth.getStorageAt(contractAddress, index)), 15, \"Error: \" + index)\n                } else if (1 == index) {\n                    console.log(web3.eth.getStorageAt(contractAddress, index))\n                    console.log('DEC:' + web3.toDecimal(web3.eth.getStorageAt(contractAddress, index)));\n                    // assert.equal(web3.toDecimal(web3.eth.getStorageAt(contractAddress, index)), 17055, \"Error: \" + index)\n                } else if (2 == index) {\n                    console.log(web3.eth.getStorageAt(contractAddress, index))\n                    console.log('ASCII: ' +\n                        web3.toAscii(web3.eth.getStorageAt(contractAddress, index)))\n                    // assert.equal(web3.toAscii(web3.eth.getStorageAt(contractAddress, index)), \"test1\", \"Error: \" + index)\n                } else if (3 == index) {\n                    console.log(web3.eth.getStorageAt(contractAddress, index))\n                    console.log('ASCII: ' +\n                        web3.toAscii(web3.eth.getStorageAt(contractAddress, index)))\n                    // assert.equal(web3.toAscii(web3.eth.getStorageAt(contractAddress, index)), \"test1236\", \"Error: \" + index)\n                } else if (4 == index) {\n                    console.log(web3.eth.getStorageAt(contractAddress, index))\n                    console.log('ASCII: ' +\n                        web3.toAscii(web3.eth.getStorageAt(contractAddress, index)))\n                    // assert.equal(web3.toAscii(web3.eth.getStorageAt(contractAddress, index)), \"lets string something\", \"Error: \" + index)\n                } else if (5 == index) {\n                    // let newKey = web3.sha3(key + index, { \"encoding\": \"hex\" })\n                    // console.log(web3.eth.getStorageAt(contractAddress, newKey))\n                    // console.log('DEC: ' + web3.toDecimal(web3.eth.getStorageAt(contractAddress, newKey)))\n                    // assert.equal(web3.toDecimal(web3.eth.getStorageAt(contractAddress, key)), \"88\", \"Error: \" + index)\n                    let newKey = web3.sha3(key + index, { \"encoding\": \"hex\" })\n                    console.log(newKey);\n                    console.log(web3.eth.getStorageAt(contractAddress, newKey))\n                    console.log('DEC: ' + web3.toDecimal(web3.eth.getStorageAt(contractAddress, newKey)))\n                } else if (6 == index) {\n                    let newKey = web3.sha3(key + index, { \"encoding\": \"hex\" })\n                    console.log(web3.eth.getStorageAt(contractAddress, newKey))\n                    console.log('ASCII: ' +\n                        web3.toAscii(web3.eth.getStorageAt(contractAddress, newKey)))\n                    // assert.equal(web3.toAscii(web3.eth.getStorageAt(contractAddress, key)), \"deviceBrand\", \"Error: \" + index)\n\n                    newKey = increaseHexByOne(\n                        web3.sha3(key + index, { \"encoding\": \"hex\" }))\n                    console.log(web3.eth.getStorageAt(contractAddress, newKey))\n                    console.log('ASCII: ' +\n                        web3.toAscii(web3.eth.getStorageAt(contractAddress, newKey)))\n                    // assert.equal(web3.toAscii(web3.eth.getStorageAt(contractAddress, newKey)), \"deviceYear\", \"Error: \" + index)\n                } else if (7 == index) {\n                    console.log(web3.eth.getStorageAt(contractAddress, index))\n\n                    let newKey = web3.sha3(index, { \"encoding\": \"hex\" })\n                    console.log(web3.eth.getStorageAt(contractAddress, newKey))\n                    console.log('DEC: ' +\n                        web3.toDecimal(web3.eth.getStorageAt(contractAddress, newKey)))\n                    // assert.equal(web3.toDecimal(web3.eth.getStorageAt(contractAddress, newKey)), 8000, \"Error: \" + index)\n\n                    newKey = increaseHexByOne(web3.sha3(index, { \"encoding\": \"hex\" }))\n                    console.log(web3.eth.getStorageAt(contractAddress, newKey))\n                    console.log('DEC: ' +\n                        web3.toDecimal(web3.eth.getStorageAt(contractAddress, newKey)))\n                    // assert.equal(web3.toDecimal(web3.eth.getStorageAt(contractAddress, newKey)), 9000, \"Error: \" + index)\n                } else if (8 == index) {\n                    let newKey = web3.sha3(index, { \"encoding\": \"hex\" })\n                    console.log(web3.eth.getStorageAt(contractAddress, newKey))\n                    console.log('ASCII: ' +\n                        web3.toAscii(web3.eth.getStorageAt(contractAddress, newKey)))\n                    // assert.equal(web3.toAscii(web3.eth.getStorageAt(contractAddress, newKey)), \"deviceBrand\", \"Error: \" + index)\n\n                    newKey = increaseHexByOne(web3.sha3(index, { \"encoding\": \"hex\" }))\n                    console.log(web3.eth.getStorageAt(contractAddress, newKey))\n                    console.log('ASCII: ' +\n                        web3.toAscii(web3.eth.getStorageAt(contractAddress, newKey)))\n                    // assert.equal(web3.toAscii(web3.eth.getStorageAt(contractAddress, newKey)), \"deviceBrand\", \"Error: \" + index)\n                } else {\n                    \n                }\n            }\n        })\n    // })\n})\n```",
    "html": "And This is my test and test output.<pre><code>var TestStorage = artifacts.<span class=\"keyword\">require</span>(<span class=\"string\">\"./TestStorage.sol\"</span>)\nvar BigNumber = <span class=\"keyword\">require</span>(<span class=\"string\">'bignumber.js'</span>);\n\nvar key = <span class=\"number\">0xbccc714d56bc0da0fd33d96d2a87b680dd6d0df6</span>\nvar address2 = <span class=\"number\">0xaee905fdd3ed851e48d22059575b9f4245a82b04</span>\n\nvar meta;\n\ncontract(<span class=\"string\">'TestStorage'</span>, function () {\n    <span class=\"regexp\">//</span> it(<span class=\"string\">\"rank should be equal to 1\"</span>, function(){\n        TestStorage.deployed().then(function (instance) {\n            meta = instance;\n            contractAddress = instance.address;\n            console.<span class=\"keyword\">log</span>(contractAddress);\n\n            function increaseHexByOne(<span class=\"keyword\">hex</span>) {\n                let <span class=\"keyword\">x</span> = new BigNumber(<span class=\"keyword\">hex</span>)\n                let sum = <span class=\"keyword\">x</span>.add(<span class=\"number\">1</span>)\n                let result = <span class=\"string\">'0x'</span> + sum.toString(<span class=\"number\">16</span>)\n                <span class=\"keyword\">return</span> result\n            }\n\n            <span class=\"keyword\">for</span> (<span class=\"keyword\">index</span> = <span class=\"number\">0</span>; <span class=\"keyword\">index</span> &lt; <span class=\"number\">10</span>; <span class=\"keyword\">index</span>++) {\n                console.<span class=\"keyword\">log</span>(<span class=\"keyword\">index</span>);\n                <span class=\"keyword\">if</span> (<span class=\"number\">0</span> == <span class=\"keyword\">index</span>) {\n                    console.<span class=\"keyword\">log</span>(web3.eth.getStorageAt(contractAddress, <span class=\"keyword\">index</span>));\n                    console.<span class=\"keyword\">log</span>(<span class=\"string\">'DEC:'</span> + web3.toDecimal(web3.eth.getStorageAt(contractAddress, <span class=\"keyword\">index</span>)));\n                    assert.equal(web3.toDecimal(web3.eth.getStorageAt(contractAddress, <span class=\"keyword\">index</span>)), <span class=\"number\">15</span>, <span class=\"string\">\"Error: \"</span> + <span class=\"keyword\">index</span>)\n                } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"number\">1</span> == <span class=\"keyword\">index</span>) {\n                    console.<span class=\"keyword\">log</span>(web3.eth.getStorageAt(contractAddress, <span class=\"keyword\">index</span>))\n                    console.<span class=\"keyword\">log</span>(<span class=\"string\">'DEC:'</span> + web3.toDecimal(web3.eth.getStorageAt(contractAddress, <span class=\"keyword\">index</span>)));\n                    <span class=\"regexp\">//</span> assert.equal(web3.toDecimal(web3.eth.getStorageAt(contractAddress, <span class=\"keyword\">index</span>)), <span class=\"number\">17055</span>, <span class=\"string\">\"Error: \"</span> + <span class=\"keyword\">index</span>)\n                } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"number\">2</span> == <span class=\"keyword\">index</span>) {\n                    console.<span class=\"keyword\">log</span>(web3.eth.getStorageAt(contractAddress, <span class=\"keyword\">index</span>))\n                    console.<span class=\"keyword\">log</span>(<span class=\"string\">'ASCII: '</span> +\n                        web3.toAscii(web3.eth.getStorageAt(contractAddress, <span class=\"keyword\">index</span>)))\n                    // assert.equal(web3.toAscii(web3.eth.getStorageAt(contractAddress, <span class=\"keyword\">index</span>)), <span class=\"string\">\"test1\"</span>, <span class=\"string\">\"Error: \"</span> + <span class=\"keyword\">index</span>)\n                } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"number\">3</span> == <span class=\"keyword\">index</span>) {\n                    console.<span class=\"keyword\">log</span>(web3.eth.getStorageAt(contractAddress, <span class=\"keyword\">index</span>))\n                    console.<span class=\"keyword\">log</span>(<span class=\"string\">'ASCII: '</span> +\n                        web3.toAscii(web3.eth.getStorageAt(contractAddress, <span class=\"keyword\">index</span>)))\n                    // assert.equal(web3.toAscii(web3.eth.getStorageAt(contractAddress, <span class=\"keyword\">index</span>)), <span class=\"string\">\"test1236\"</span>, <span class=\"string\">\"Error: \"</span> + <span class=\"keyword\">index</span>)\n                } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"number\">4</span> == <span class=\"keyword\">index</span>) {\n                    console.<span class=\"keyword\">log</span>(web3.eth.getStorageAt(contractAddress, <span class=\"keyword\">index</span>))\n                    console.<span class=\"keyword\">log</span>(<span class=\"string\">'ASCII: '</span> +\n                        web3.toAscii(web3.eth.getStorageAt(contractAddress, <span class=\"keyword\">index</span>)))\n                    // assert.equal(web3.toAscii(web3.eth.getStorageAt(contractAddress, <span class=\"keyword\">index</span>)), <span class=\"string\">\"lets string something\"</span>, <span class=\"string\">\"Error: \"</span> + <span class=\"keyword\">index</span>)\n                } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"number\">5</span> == <span class=\"keyword\">index</span>) {\n                    <span class=\"regexp\">//</span> let newKey = web3.sha3(key + <span class=\"keyword\">index</span>, { <span class=\"string\">\"encoding\"</span>: <span class=\"string\">\"hex\"</span> })\n                    // console.<span class=\"keyword\">log</span>(web3.eth.getStorageAt(contractAddress, newKey))\n                    // console.<span class=\"keyword\">log</span>(<span class=\"string\">'DEC: '</span> + web3.toDecimal(web3.eth.getStorageAt(contractAddress, newKey)))\n                    // assert.equal(web3.toDecimal(web3.eth.getStorageAt(contractAddress, key)), <span class=\"string\">\"88\"</span>, <span class=\"string\">\"Error: \"</span> + <span class=\"keyword\">index</span>)\n                    let newKey = web3.sha3(key + <span class=\"keyword\">index</span>, { <span class=\"string\">\"encoding\"</span>: <span class=\"string\">\"hex\"</span> })\n                    console.<span class=\"keyword\">log</span>(newKey);\n                    console.<span class=\"keyword\">log</span>(web3.eth.getStorageAt(contractAddress, newKey))\n                    console.<span class=\"keyword\">log</span>(<span class=\"string\">'DEC: '</span> + web3.toDecimal(web3.eth.getStorageAt(contractAddress, newKey)))\n                } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"number\">6</span> == <span class=\"keyword\">index</span>) {\n                    let newKey = web3.sha3(key + <span class=\"keyword\">index</span>, { <span class=\"string\">\"encoding\"</span>: <span class=\"string\">\"hex\"</span> })\n                    console.<span class=\"keyword\">log</span>(web3.eth.getStorageAt(contractAddress, newKey))\n                    console.<span class=\"keyword\">log</span>(<span class=\"string\">'ASCII: '</span> +\n                        web3.toAscii(web3.eth.getStorageAt(contractAddress, newKey)))\n                    // assert.equal(web3.toAscii(web3.eth.getStorageAt(contractAddress, key)), <span class=\"string\">\"deviceBrand\"</span>, <span class=\"string\">\"Error: \"</span> + <span class=\"keyword\">index</span>)\n\n                    newKey = increaseHexByOne(\n                        web3.sha3(key + <span class=\"keyword\">index</span>, { <span class=\"string\">\"encoding\"</span>: <span class=\"string\">\"hex\"</span> }))\n                    console.<span class=\"keyword\">log</span>(web3.eth.getStorageAt(contractAddress, newKey))\n                    console.<span class=\"keyword\">log</span>(<span class=\"string\">'ASCII: '</span> +\n                        web3.toAscii(web3.eth.getStorageAt(contractAddress, newKey)))\n                    // assert.equal(web3.toAscii(web3.eth.getStorageAt(contractAddress, newKey)), <span class=\"string\">\"deviceYear\"</span>, <span class=\"string\">\"Error: \"</span> + <span class=\"keyword\">index</span>)\n                } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"number\">7</span> == <span class=\"keyword\">index</span>) {\n                    console.<span class=\"keyword\">log</span>(web3.eth.getStorageAt(contractAddress, <span class=\"keyword\">index</span>))\n\n                    let newKey = web3.sha3(<span class=\"keyword\">index</span>, { <span class=\"string\">\"encoding\"</span>: <span class=\"string\">\"hex\"</span> })\n                    console.<span class=\"keyword\">log</span>(web3.eth.getStorageAt(contractAddress, newKey))\n                    console.<span class=\"keyword\">log</span>(<span class=\"string\">'DEC: '</span> +\n                        web3.toDecimal(web3.eth.getStorageAt(contractAddress, newKey)))\n                    // assert.equal(web3.toDecimal(web3.eth.getStorageAt(contractAddress, newKey)), <span class=\"number\">8000</span>, <span class=\"string\">\"Error: \"</span> + <span class=\"keyword\">index</span>)\n\n                    newKey = increaseHexByOne(web3.sha3(<span class=\"keyword\">index</span>, { <span class=\"string\">\"encoding\"</span>: <span class=\"string\">\"hex\"</span> }))\n                    console.<span class=\"keyword\">log</span>(web3.eth.getStorageAt(contractAddress, newKey))\n                    console.<span class=\"keyword\">log</span>(<span class=\"string\">'DEC: '</span> +\n                        web3.toDecimal(web3.eth.getStorageAt(contractAddress, newKey)))\n                    // assert.equal(web3.toDecimal(web3.eth.getStorageAt(contractAddress, newKey)), <span class=\"number\">9000</span>, <span class=\"string\">\"Error: \"</span> + <span class=\"keyword\">index</span>)\n                } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"number\">8</span> == <span class=\"keyword\">index</span>) {\n                    let newKey = web3.sha3(<span class=\"keyword\">index</span>, { <span class=\"string\">\"encoding\"</span>: <span class=\"string\">\"hex\"</span> })\n                    console.<span class=\"keyword\">log</span>(web3.eth.getStorageAt(contractAddress, newKey))\n                    console.<span class=\"keyword\">log</span>(<span class=\"string\">'ASCII: '</span> +\n                        web3.toAscii(web3.eth.getStorageAt(contractAddress, newKey)))\n                    // assert.equal(web3.toAscii(web3.eth.getStorageAt(contractAddress, newKey)), <span class=\"string\">\"deviceBrand\"</span>, <span class=\"string\">\"Error: \"</span> + <span class=\"keyword\">index</span>)\n\n                    newKey = increaseHexByOne(web3.sha3(<span class=\"keyword\">index</span>, { <span class=\"string\">\"encoding\"</span>: <span class=\"string\">\"hex\"</span> }))\n                    console.<span class=\"keyword\">log</span>(web3.eth.getStorageAt(contractAddress, newKey))\n                    console.<span class=\"keyword\">log</span>(<span class=\"string\">'ASCII: '</span> +\n                        web3.toAscii(web3.eth.getStorageAt(contractAddress, newKey)))\n                    // assert.equal(web3.toAscii(web3.eth.getStorageAt(contractAddress, newKey)), <span class=\"string\">\"deviceBrand\"</span>, <span class=\"string\">\"Error: \"</span> + <span class=\"keyword\">index</span>)\n                } <span class=\"keyword\">else</span> {\n\n                }\n            }\n        })\n    // })\n})</code></pre>",
    "sent": "2018-01-10T07:35:01.485Z",
    "editedAt": "2018-01-10T07:35:15.160Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 2,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a55c245232e79134dea6940",
    "text": "```\n0x75c35c980c0d37ef46df04d31a140b65503c0eed\n0\n0x0f\nDEC:15\n1\n0x5a55c12c0000000000000000000000000000429f\nDEC:5.157215603596296e+47\n2\n0x74657374310000000000000000000000\nASCII: test1\n3\n0x7465737431323336000000000000000000000000000000000000000000000000\nASCII: test1236\n4\n0x6c65747320737472696e6720736f6d657468696e67000000000000000000002a\nASCII: lets string something*\n5\n0x0000000000000000000000000000000000000000000000000000000000000000\n0x0f\nDEC: 15\n6\n0x0f\nASCII:\n0x5a55c12c0000000000000000000000000000429f\nASCII: ZUÁ,B\n7\n0x00\n0x0f\nDEC: 15\n0x5a55c12c0000000000000000000000000000429f\nDEC: 5.157215603596296e+47\n8\n0x0f\nASCII:\n0x5a55c12c0000000000000000000000000000429f\nASCII: ZUÁ,B\n```",
    "html": "<pre><code><span class=\"number\">0x75c35c980c0d37ef46df04d31a140b65503c0eed</span>\n<span class=\"number\">0</span>\n<span class=\"number\">0x0f</span>\n<span class=\"string\">DEC:</span><span class=\"number\">15</span>\n<span class=\"number\">1</span>\n<span class=\"number\">0x5a55c12c0000000000000000000000000000429f</span>\n<span class=\"string\">DEC:</span><span class=\"number\">5.157215603596296e+47</span>\n<span class=\"number\">2</span>\n<span class=\"number\">0x74657374310000000000000000000000</span>\n<span class=\"string\">ASCII:</span> test1\n<span class=\"number\">3</span>\n<span class=\"number\">0x7465737431323336000000000000000000000000000000000000000000000000</span>\n<span class=\"string\">ASCII:</span> test1236\n<span class=\"number\">4</span>\n<span class=\"number\">0x6c65747320737472696e6720736f6d657468696e67000000000000000000002a</span>\n<span class=\"string\">ASCII:</span> lets string something*\n<span class=\"number\">5</span>\n<span class=\"number\">0x0000000000000000000000000000000000000000000000000000000000000000</span>\n<span class=\"number\">0x0f</span>\n<span class=\"string\">DEC:</span> <span class=\"number\">15</span>\n<span class=\"number\">6</span>\n<span class=\"number\">0x0f</span>\n<span class=\"string\">ASCII:</span>\n<span class=\"number\">0x5a55c12c0000000000000000000000000000429f</span>\n<span class=\"string\">ASCII:</span> ZUÁ,B\n<span class=\"number\">7</span>\n<span class=\"number\">0x00</span>\n<span class=\"number\">0x0f</span>\n<span class=\"string\">DEC:</span> <span class=\"number\">15</span>\n<span class=\"number\">0x5a55c12c0000000000000000000000000000429f</span>\n<span class=\"string\">DEC:</span> <span class=\"number\">5.157215603596296e+47</span>\n<span class=\"number\">8</span>\n<span class=\"number\">0x0f</span>\n<span class=\"string\">ASCII:</span>\n<span class=\"number\">0x5a55c12c0000000000000000000000000000429f</span>\n<span class=\"string\">ASCII:</span> ZUÁ,B</code></pre>",
    "sent": "2018-01-10T07:35:33.789Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 6,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a55c303d0514c785b110d5d",
    "text": "The Question about \nI can't get correct state variable value is from test output '5', which should be 88 rather than 15;\n\nSo I think the contract address I used is wrong, but I can't verify it.",
    "html": "<p>The Question about<br>I can&#39;t get correct state variable value is from test output &#39;5&#39;, which should be 88 rather than 15;</p><p>So I think the contract address I used is wrong, but I can&#39;t verify it.</p>",
    "sent": "2018-01-10T07:38:43.851Z",
    "editedAt": "2018-01-10T07:39:14.445Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 6,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 3
  },
  {
    "id": "5a572eda5a9ebe4f7572ebb4",
    "text": "You need to pad your key and index to 64 bytes.",
    "html": "You need to pad your key and index to 64 bytes.",
    "sent": "2018-01-11T09:31:06.927Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 2,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a572f375a9ebe4f7572ee28",
    "text": "See my example: https://github.com/chuacw/ReadContractStorage",
    "html": "See my example: <a href=\"https://github.com/chuacw/ReadContractStorage\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/chuacw/ReadContractStorage</a>",
    "sent": "2018-01-11T09:32:39.269Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 2,
    "urls": [
      {
        "url": "https://github.com/chuacw/ReadContractStorage"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a57302fae53c15903d48daf",
    "text": "Since you didn't pad the key and index to 64 bytes, that's why you're not getting the correct output.",
    "html": "Since you didn&#39;t pad the key and index to 64 bytes, that&#39;s why you&#39;re not getting the correct output.",
    "sent": "2018-01-11T09:36:47.550Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 2,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5730ce83152df26d59c522",
    "text": "If you pad key and index to 64 bytes, then key + index is a total of 128 bytes.",
    "html": "If you pad key and index to 64 bytes, then key + index is a total of 128 bytes.",
    "sent": "2018-01-11T09:39:26.917Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 2,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5730e66117191e6151242e",
    "text": "But you didn't pad key and index, so, the total length is NOT 128 bytes, so the web.sha3 gives a different output.",
    "html": "But you didn&#39;t pad key and index, so, the total length is NOT 128 bytes, so the web.sha3 gives a different output.",
    "sent": "2018-01-11T09:39:50.562Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 2,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a57312c83152df26d59c7ef",
    "text": "Thx, I'm testing it.",
    "html": "Thx, I&#39;m testing it.",
    "sent": "2018-01-11T09:41:00.156Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 2,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5731a3ba39a53f1a013a2b",
    "text": "Sorry I didn't see it yesterday.",
    "html": "Sorry I didn&#39;t see it yesterday.",
    "sent": "2018-01-11T09:42:59.662Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5731a8b48e8c3566c8729a",
    "text": "You should get the right value now.",
    "html": "You should get the right value now.",
    "sent": "2018-01-11T09:43:04.745Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5731cdd0514c785b186750",
    "text": "Never mind. First I need to thank you a lot.",
    "html": "Never mind. First I need to thank you a lot.",
    "sent": "2018-01-11T09:43:41.876Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5731db6117191e615129c3",
    "text": "You got the correct output already?",
    "html": "You got the correct output already?",
    "sent": "2018-01-11T09:43:55.619Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5731ea61a861c927fd37b9",
    "text": "But my output is still wrong, I'm checking it.",
    "html": "But my output is still wrong, I&#39;m checking it.",
    "sent": "2018-01-11T09:44:10.763Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5731f0290a1f4561760855",
    "text": "a moment",
    "html": "a moment",
    "sent": "2018-01-11T09:44:16.651Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a57333161a861c927fd3fda",
    "text": "```\n5\n00000000000000000000000xbccc714d56bc0da0fd33d96d2a87b680dd6d0df6\n0000000000000000000000000000000000000000000000000000000000000005\n0x00\nDEC: 0\n```\nemmm... I don't know why, it is still '0'",
    "html": "<pre><code>5\n00000000000000000000000<span class=\"tag\">xbccc714d56bc0da0fd33d96d2a87b680dd6d0df6</span>\n0000000000000000000000000000000000000000000000000000000000000005\n0<span class=\"tag\">x00</span>\n<span class=\"rule\"><span class=\"attribute\">DEC</span>:<span class=\"value\"> <span class=\"number\">0</span></span></span></code></pre>emmm... I don&#39;t know why, it is still &#39;0&#39;",
    "sent": "2018-01-11T09:49:37.965Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a57336ace68c3bc74a4e72a",
    "text": "```\nconsole.log(to64(key));\nconsole.log(to64(index));\n// let newKey = web3.sha3(to64(key) + to64(index), { \"encoding\": \"hex\" })\nlet newKey = web3.sha3(\"00000000000000000000000xbccc714d56bc0da0fd33d96d2a87b680dd6d0df6\" + to64(index), {\"encoding\": \"hex\"})\nconsole.log(web3.eth.getStorageAt(contractAddress, newKey))\nconsole.log('DEC: ' + web3.toDecimal(web3.eth.getStorageAt(contractAddress, newKey)))\n```\nI tried with this test code.",
    "html": "<pre><code>console.<span class=\"keyword\">log</span>(to64(key));\nconsole.<span class=\"keyword\">log</span>(to64(<span class=\"keyword\">index</span>));\n<span class=\"regexp\">//</span> let newKey = web3.sha3(to64(key) + to64(<span class=\"keyword\">index</span>), { <span class=\"string\">\"encoding\"</span>: <span class=\"string\">\"hex\"</span> })\nlet newKey = web3.sha3(<span class=\"string\">\"00000000000000000000000xbccc714d56bc0da0fd33d96d2a87b680dd6d0df6\"</span> + to64(<span class=\"keyword\">index</span>), {<span class=\"string\">\"encoding\"</span>: <span class=\"string\">\"hex\"</span>})\nconsole.<span class=\"keyword\">log</span>(web3.eth.getStorageAt(contractAddress, newKey))\nconsole.<span class=\"keyword\">log</span>(<span class=\"string\">'DEC: '</span> + web3.toDecimal(web3.eth.getStorageAt(contractAddress, newKey)))</code></pre>I tried with this test code.",
    "sent": "2018-01-11T09:50:34.413Z",
    "editedAt": "2018-01-11T09:51:19.093Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 3
  },
  {
    "id": "5a5733f0ae53c15903d4a40e",
    "text": "I get my contractAddress with this code\n```\nTestStorage.deployed().then(function (instance) {\n    meta = instance;\n    contractAddress = instance.address;\n```",
    "html": "I get my contractAddress with this code<pre><code><span class=\"type\">TestStorage</span>.deployed().<span class=\"keyword\">then</span>(function (<span class=\"keyword\">instance</span>) {\n    meta = <span class=\"keyword\">instance</span>;\n    contractAddress = <span class=\"keyword\">instance</span>.address;</code></pre>",
    "sent": "2018-01-11T09:52:48.866Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5735e9ba39a53f1a0154b8",
    "text": "and If I run your code\nusing\n```\nlet ContractAddr = \"0x27695E09149AdC738A978e9A678F99E4c39e9eb9\";\n...\nlet account = \"0xC1163cf4420cAa8abac95D91401B60a084b225E7\"; // update this to get a new account balance\n```\nas you have support a deployed contract, it said \n```\nTypeError: web3.toAscii is not a function\n    at Object.<anonymous> (/Users/cuiyi/Documents/solidity_projects/CKRace/test/test.js:58:21)\n```",
    "html": "<p>and If I run your code<br>using</p><pre><code><span class=\"keyword\">let</span> ContractAddr = <span class=\"string\">\"0x27695E09149AdC738A978e9A678F99E4c39e9eb9\"</span>;\n...\n<span class=\"keyword\">let</span> account = <span class=\"string\">\"0xC1163cf4420cAa8abac95D91401B60a084b225E7\"</span>; // <span class=\"keyword\">update</span> this <span class=\"keyword\">to</span> <span class=\"built_in\">get</span> <span class=\"keyword\">a</span> <span class=\"keyword\">new</span> account balance</code></pre><p>as you have support a deployed contract, it said </p><pre><code>TypeError: web3<span class=\"class\">.toAscii</span> is not <span class=\"tag\">a</span> function\n    at Object.&lt;anonymous&gt; (/Users/cuiyi/Documents/solidity_projects/CKRace/test/test<span class=\"class\">.js</span>:<span class=\"number\">58</span>:<span class=\"number\">21</span>)</code></pre>",
    "sent": "2018-01-11T10:01:13.826Z",
    "editedAt": "2018-01-11T10:02:58.716Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 3
  },
  {
    "id": "5a573820b48e8c3566c89be8",
    "text": "You're running it with node ReadStorageContract right?",
    "html": "You&#39;re running it with node ReadStorageContract right?",
    "sent": "2018-01-11T10:10:40.929Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a573827ae53c15903d4be00",
    "text": "Have you installed the npms required?",
    "html": "Have you installed the npms required?",
    "sent": "2018-01-11T10:10:47.159Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a57388a83152df26d59f1f4",
    "text": "```\n$ node ./test/test.js\nOwner: [object Promise]\n/Users/cuiyi/Documents/solidity_projects/CKRace/test/test.js:58\nlet standard = web3.toAscii(web3.eth.getStorageAt(ContractAddr, 1));   // CsToken.standard\n                    ^\n\nTypeError: web3.toAscii is not a function\n```",
    "html": "<pre><code>$ node .<span class=\"regexp\">/test/</span>test.js\n<span class=\"string\">Owner:</span> [object Promise]\n<span class=\"regexp\">/Users/</span>cuiyi<span class=\"regexp\">/Documents/</span>solidity_projects<span class=\"regexp\">/CKRace/</span>test/test.<span class=\"string\">js:</span><span class=\"number\">58</span>\nlet standard = web3.toAscii(web3.eth.getStorageAt(ContractAddr, <span class=\"number\">1</span>));   <span class=\"comment\">// CsToken.standard</span>\n                    ^\n<span class=\"label\">\nTypeError:</span> web3.toAscii is not a function</code></pre>",
    "sent": "2018-01-11T10:12:26.921Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a57389fce68c3bc74a5021e",
    "text": "I think I have installed all the requirements. ",
    "html": "I think I have installed all the requirements. ",
    "sent": "2018-01-11T10:12:47.247Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5738bc83152df26d59f32f",
    "text": "use this instead of web3.toAscii",
    "html": "use this instead of web3.toAscii",
    "sent": "2018-01-11T10:13:16.943Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5738be290a1f4561763117",
    "text": "  function decodeString(hexData) {\n    let i = 0;\n    let Ch = 1;\n    let Result = \"\";\n    do {\n      Ch = hexData.substr(i, i+2);\n      hexData = hexData.substr(i+2);\n      if (Ch!=0) \n        Result = Result + String.fromCharCode(parseInt(Ch, 16));\n    } while (Ch!=0);\n    return Result;\n  }\n",
    "html": "  function decodeString(hexData) {<br>    let i = 0;<br>    let Ch = 1;<br>    let Result = &quot;&quot;;<br>    do {<br>      Ch = hexData.substr(i, i+2);<br>      hexData = hexData.substr(i+2);<br>      if (Ch!=0)<br>        Result = Result + String.fromCharCode(parseInt(Ch, 16));<br>    } while (Ch!=0);<br>    return Result;<br>  }",
    "sent": "2018-01-11T10:13:18.770Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5738cbd0514c785b188db7",
    "text": "so instead of web.toAscii, call decodeString.",
    "html": "so instead of web.toAscii, call decodeString.",
    "sent": "2018-01-11T10:13:31.059Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 2,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5738cb61a861c927fd5f09",
    "text": "ok",
    "html": "ok",
    "sent": "2018-01-11T10:13:31.571Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 2,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a573cf883152df26d5a0c24",
    "text": "I paste your code in my truffle project.\nafter I set web3 new provider by \n`web3 = new Web3(new Web3.providers.HttpProvider(\"https://mainet.infura.io\"));`\n\nweb3.toAscii is undefined when i use it.\nbut if I don't do this, web3.toAscii is ok.",
    "html": "<p>I paste your code in my truffle project.<br>after I set web3 new provider by<br><code>web3 = new Web3(new Web3.providers.HttpProvider(&quot;https://mainet.infura.io&quot;));</code></p><p>web3.toAscii is undefined when i use it.<br>but if I don&#39;t do this, web3.toAscii is ok.</p>",
    "sent": "2018-01-11T10:31:20.523Z",
    "editedAt": "2018-01-11T10:33:03.916Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 2,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a573d316117191e61516c9e",
    "text": "The \" \" is missing for the URL.",
    "html": "The &quot; &quot; is missing for the URL.",
    "sent": "2018-01-11T10:32:17.138Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 2,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a573d55ba39a53f1a017e7a",
    "text": "in my code, I added them.",
    "html": "in my code, I added them.",
    "sent": "2018-01-11T10:32:53.765Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 2,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a573d5db48e8c3566c8b88b",
    "text": "instead of copying somebody's code, I suggest you write your own contract and test using your own understanding.",
    "html": "instead of copying somebody&#39;s code, I suggest you write your own contract and test using your own understanding.",
    "sent": "2018-01-11T10:33:01.965Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 2,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a573d70290a1f4561764cf4",
    "text": "Because you're using somebody's code, you might not understand what's happening.",
    "html": "Because you&#39;re using somebody&#39;s code, you might not understand what&#39;s happening.",
    "sent": "2018-01-11T10:33:20.452Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 2,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a573d87ba39a53f1a017f78",
    "text": "This is why I wrote my own test to read a contract...",
    "html": "This is why I wrote my own test to read a contract...",
    "sent": "2018-01-11T10:33:43.182Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 2,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a573ddc83152df26d5a103a",
    "text": "yeah, it's really a problem.\nok, I will try to understand what the 'getStorageAt' really is.\nthank you so much.\nafter I solve the problem, I will publish my answer out if I found the reason.",
    "html": "yeah, it&#39;s really a problem.<br>ok, I will try to understand what the &#39;getStorageAt&#39; really is.<br>thank you so much.<br>after I solve the problem, I will publish my answer out if I found the reason.",
    "sent": "2018-01-11T10:35:08.160Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 2,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574210ce68c3bc74a532e0",
    "text": "Oh, One more question. @chuacw Are you still there?\nIf I wan't to call something of other contract in my contract, HOW to do that, not with web3.\njust as I get the storage of your code in my contract.",
    "html": "Oh, One more question. <span data-link-type=\"mention\" data-screen-name=\"chuacw\" class=\"mention\">@chuacw</span> Are you still there?<br>If I wan&#39;t to call something of other contract in my contract, HOW to do that, not with web3.<br>just as I get the storage of your code in my contract.",
    "sent": "2018-01-11T10:53:04.237Z",
    "editedAt": "2018-01-11T10:53:39.860Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [
      {
        "screenName": "chuacw",
        "userId": "59cf1180d73408ce4f77fc7e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a57460dce68c3bc74a54618",
    "text": "I don't understand. What is \"something of other contract\"?",
    "html": "I don&#39;t understand. What is &quot;something of other contract&quot;?",
    "sent": "2018-01-11T11:10:05.516Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574636ba39a53f1a01ae31",
    "text": "and what does \"not with web3\" mean? Then with what?",
    "html": "and what does &quot;not with web3&quot; mean? Then with what?",
    "sent": "2018-01-11T11:10:46.042Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5746a5ae53c15903d50b2a",
    "text": "In each contract, there are some storage variables in contract.\nYou have a deployed contract, so do i. Both of which on the same net, e.g. mainnet.\nI want to call some variables or functions which are public in your contract, in my contract, not in frontend using web3js.",
    "html": "In each contract, there are some storage variables in contract.<br>You have a deployed contract, so do i. Both of which on the same net, e.g. mainnet.<br>I want to call some variables or functions which are public in your contract, in my contract, not in frontend using web3js.",
    "sent": "2018-01-11T11:12:37.084Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5746df5a9ebe4f75737afe",
    "text": "contractInstance.publicVarName()",
    "html": "contractInstance.publicVarName()",
    "sent": "2018-01-11T11:13:35.884Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5746e6ae53c15903d50c9f",
    "text": "contractInstance.someMethodName()",
    "html": "contractInstance.someMethodName()",
    "sent": "2018-01-11T11:13:42.935Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5746fdba39a53f1a01b2d9",
    "text": "oh, in your contract?",
    "html": "oh, in your contract?",
    "sent": "2018-01-11T11:14:05.713Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574719ba39a53f1a01b376",
    "text": "yes, I don't no what i think is right or not.",
    "html": "yes, I don&#39;t no what i think is right or not.",
    "sent": "2018-01-11T11:14:33.889Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a57471d61a861c927fdae6a",
    "text": "YourContractvarName = mycontractInstance.VarName",
    "html": "YourContractvarName = mycontractInstance.VarName",
    "sent": "2018-01-11T11:14:37.309Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5747316117191e6151a405",
    "text": "contract Contract1 { string public someVar1}",
    "html": "contract Contract1 { string public someVar1}",
    "sent": "2018-01-11T11:14:57.066Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5747346117191e6151a412",
    "text": "```\nKittyCore.deployed().then(function(instance) {\n    meta = instance\n    return meta.ceoAddress.call();\n}).then(function (ceoAddress) {\n    console.log(ceoAddress);\n    return meta.cooAddress.call();\n}).then(function (cooAddress) {\n    console.log(cooAddress);\n    return meta.createPromoKitty(2, cooAddress);\n    // return meta.kittyIndexToOwner.call(1);\n    // return 2;\n}).then(function(kitty_id) {\n    console.log(kitty_id);\n    return meta.getKitty.call(1);\n}).then(function(kitty) {\n    console.log(kitty);\n}).catch((e) => {\n    console.log(e, e.stack)\n})\n```",
    "html": "<pre><code>KittyCore.deployed().<span class=\"keyword\">then</span>(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(instance)</span></span> {\n    meta = instance\n    <span class=\"keyword\">return</span> meta.ceoAddress.<span class=\"keyword\">call</span>();\n}).<span class=\"keyword\">then</span>(<span class=\"function\"><span class=\"keyword\">function</span></span> (ceoAddress) {\n    console.<span class=\"built_in\">log</span>(ceoAddress);\n    <span class=\"keyword\">return</span> meta.cooAddress.<span class=\"keyword\">call</span>();\n}).<span class=\"keyword\">then</span>(<span class=\"function\"><span class=\"keyword\">function</span></span> (cooAddress) {\n    console.<span class=\"built_in\">log</span>(cooAddress);\n    <span class=\"keyword\">return</span> meta.createPromoKitty(<span class=\"number\">2</span>, cooAddress);\n    // <span class=\"keyword\">return</span> meta.kittyIndexToOwner.<span class=\"keyword\">call</span>(<span class=\"number\">1</span>);\n    // <span class=\"keyword\">return</span> <span class=\"number\">2</span>;\n}).<span class=\"keyword\">then</span>(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(kitty_id)</span></span> {\n    console.<span class=\"built_in\">log</span>(kitty_id);\n    <span class=\"keyword\">return</span> meta.getKitty.<span class=\"keyword\">call</span>(<span class=\"number\">1</span>);\n}).<span class=\"keyword\">then</span>(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(kitty)</span></span> {\n    console.<span class=\"built_in\">log</span>(kitty);\n}).catch((e) =&gt; {\n    console.<span class=\"built_in\">log</span>(e, e.stack)\n})</code></pre>",
    "sent": "2018-01-11T11:15:00.253Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a574745d0514c785b18dbbf",
    "text": "urgh... this is so difficult to read.",
    "html": "urgh... this is so difficult to read.",
    "sent": "2018-01-11T11:15:17.727Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a57474d6117191e6151a541",
    "text": "This is one of my test.\nI copied kittyCore to my local truflle project.",
    "html": "This is one of my test.<br>I copied kittyCore to my local truflle project.",
    "sent": "2018-01-11T11:15:25.143Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a57474dae53c15903d50e45",
    "text": "Why do you not use async/await ?",
    "html": "Why do you not use async/await ?",
    "sent": "2018-01-11T11:15:25.858Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5747746117191e6151a63a",
    "text": "eh... I want develop a project decentralized",
    "html": "eh... I want develop a project decentralized",
    "sent": "2018-01-11T11:16:04.654Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5747766117191e6151a650",
    "text": "kittyCoreInstance = await KittyCore.deployed();",
    "html": "kittyCoreInstance = await KittyCore.deployed();",
    "sent": "2018-01-11T11:16:06.530Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a57479183152df26d5a4820",
    "text": "ceoAddress = await kittyCoreInstance.ceoAddress.call();",
    "html": "ceoAddress = await kittyCoreInstance.ceoAddress.call();",
    "sent": "2018-01-11T11:16:33.494Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a57479d290a1f456176821f",
    "text": "This is what i don't know, new for solidity. sorry",
    "html": "This is what i don&#39;t know, new for solidity. sorry",
    "sent": "2018-01-11T11:16:45.840Z",
    "fromUser": {
      "id": "5a535e0bd73408ce4f86e49b",
      "username": "ElliotCui",
      "displayName": "Yi Cui",
      "url": "/ElliotCui",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ElliotCui",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1572416?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5747a4b48e8c3566c8f2f1",
    "text": "that's got nothing to do with .then...",
    "html": "that&#39;s got nothing to do with .then...",
    "sent": "2018-01-11T11:16:52.084Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5747b36117191e6151a752",
    "text": "all the .then .then .then is very difficult to read.",
    "html": "all the .then .then .then is very difficult to read.",
    "sent": "2018-01-11T11:17:07.233Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 6,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a5747cb83152df26d5a4909",
    "text": "dothis.then(something1).then(something2).then(something3) can be changed to",
    "html": "dothis.then(something1).then(something2).then(something3) can be changed to",
    "sent": "2018-01-11T11:17:31.112Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 6,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e81b1a4e6c8223125520",
    "text": "cool",
    "html": "cool",
    "sent": "2017-12-15T15:19:55.589Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e8270163b028103ebcc5",
    "text": "just paste your address here and I'll send you a few eth",
    "html": "just paste your address here and I&#39;ll send you a few eth",
    "sent": "2017-12-15T15:20:07.278Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e84d1a4e6c8223125628",
    "text": "Ok thanks. I'll register first.",
    "html": "Ok thanks. I&#39;ll register first.",
    "sent": "2017-12-15T15:20:45.875Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e8755355812e57dc4f4f",
    "text": "Would you recommend Ropsten?",
    "html": "Would you recommend Ropsten?",
    "sent": "2017-12-15T15:21:25.081Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e8851a4e6c8223125776",
    "text": "I guess it's as stable as the others now",
    "html": "I guess it&#39;s as stable as the others now",
    "sent": "2017-12-15T15:21:41.769Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e88ec65707ba2b576716",
    "text": "Ok. I'm setting things up real quick.",
    "html": "Ok. I&#39;m setting things up real quick.",
    "sent": "2017-12-15T15:21:50.093Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e893ffa3e379193fae3f",
    "text": "but it's more unreliable because of eth distribution",
    "html": "but it&#39;s more unreliable because of eth distribution",
    "sent": "2017-12-15T15:21:55.420Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e89b5355812e57dc506a",
    "text": "they didn't control it",
    "html": "they didn&#39;t control it",
    "sent": "2017-12-15T15:22:03.132Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e8a80163b028103ebf75",
    "text": "with registered faucets like rinkeby or kovan",
    "html": "with registered faucets like rinkeby or kovan",
    "sent": "2017-12-15T15:22:16.639Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e9470163b028103ec480",
    "text": "Can't use `HDWalletProvider`",
    "html": "Can&#39;t use <code>HDWalletProvider</code>",
    "sent": "2017-12-15T15:24:55.122Z",
    "editedAt": "2017-12-15T15:24:57.647Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a33e95a0163b028103ec4b2",
    "text": "It requires `fsevents@1.1.3` which doesn't work with linux.",
    "html": "It requires <code>fsevents@1.1.3</code> which doesn&#39;t work with linux.",
    "sent": "2017-12-15T15:25:14.745Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e97403838b2f2afb81b8",
    "text": "This feels so clunky :D",
    "html": "This feels so clunky :D",
    "sent": "2017-12-15T15:25:40.414Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e9740163b028103ec516",
    "text": ":(",
    "html": ":(",
    "sent": "2017-12-15T15:25:40.969Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e97903838b2f2afb81f1",
    "text": ":joy: ",
    "html": ":joy: ",
    "sent": "2017-12-15T15:25:45.961Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e9dc03838b2f2afb84a5",
    "text": "Is there anyone in charge of Truffle around? Maybe they have an equivalent for `truffle-hdwallet-provider` under Linux?",
    "html": "Is there anyone in charge of Truffle around? Maybe they have an equivalent for <code>truffle-hdwallet-provider</code> under Linux?",
    "sent": "2017-12-15T15:27:24.786Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e9f91a4e6c82231260fc",
    "text": "I don't think there is",
    "html": "I don&#39;t think there is",
    "sent": "2017-12-15T15:27:53.496Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ea09ffa3e379193fb64d",
    "text": "but:\nhttps://gitter.im/ConsenSys/truffle",
    "html": "but:<br><a href=\"https://gitter.im/ConsenSys/truffle\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gitter.im/ConsenSys/truffle</a>",
    "sent": "2017-12-15T15:28:09.344Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [
      {
        "url": "https://gitter.im/ConsenSys/truffle"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ea4a540c78242dcb7808",
    "text": "Way ahead of you :D Thanks bro",
    "html": "Way ahead of you :D Thanks bro",
    "sent": "2017-12-15T15:29:14.520Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ea545355812e57dc5e1f",
    "text": ";)",
    "html": ";)",
    "sent": "2017-12-15T15:29:24.385Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33eb015355812e57dc6195",
    "text": "I might have been able to install it `yarn add --ignore-platform truffle-hdwallet-provider`",
    "html": "I might have been able to install it <code>yarn add --ignore-platform truffle-hdwallet-provider</code>",
    "sent": "2017-12-15T15:32:17.566Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33eb94ffa3e379193fc158",
    "text": "@GNSPS Ok so I've setup a `ropsten` truffle network using `HDWalletProvider`, and now I'm trying to get the addresses for my mnemonic:\n```\ntruffle console --network ropsten\nweb3.eth.accounts\n```",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"GNSPS\" class=\"mention\">@GNSPS</span> Ok so I&#39;ve setup a <code>ropsten</code> truffle network using <code>HDWalletProvider</code>, and now I&#39;m trying to get the addresses for my mnemonic:<pre><code>truffle console --network ropsten\nweb3<span class=\"class\">.eth</span><span class=\"class\">.accounts</span></code></pre>",
    "sent": "2017-12-15T15:34:44.432Z",
    "editedAt": "2017-12-15T15:35:07.617Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [
      {
        "screenName": "GNSPS",
        "userId": "54bd42addb8155e6700ed45e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 3
  },
  {
    "id": "5a33ebafc65707ba2b577bd7",
    "text": "This errors out:",
    "html": "This errors out:",
    "sent": "2017-12-15T15:35:11.396Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ebb7a2be466828a686cc",
    "text": "`Error: Web3ProviderEngine does not support synchronous requests.`",
    "html": "<code>Error: Web3ProviderEngine does not support synchronous requests.</code>",
    "sent": "2017-12-15T15:35:19.466Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ebd0ba39a53f1a64f94d",
    "text": "no you shouldn't use it like you use your geth",
    "html": "no you shouldn&#39;t use it like you use your geth",
    "sent": "2017-12-15T15:35:44.371Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ebdac65707ba2b577c5e",
    "text": "I dont, what do you mean?",
    "html": "I dont, what do you mean?",
    "sent": "2017-12-15T15:35:54.580Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ebdfc65707ba2b577c64",
    "text": "INFURA's nodes don't support certain rpc requests",
    "html": "INFURA&#39;s nodes don&#39;t support certain rpc requests",
    "sent": "2017-12-15T15:35:59.139Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ebe5c65707ba2b577c8c",
    "text": "like for example unlocking accounts",
    "html": "like for example unlocking accounts",
    "sent": "2017-12-15T15:36:05.385Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ebe603838b2f2afb915a",
    "text": "Ha",
    "html": "Ha",
    "sent": "2017-12-15T15:36:06.026Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ebeaba39a53f1a64f9e5",
    "text": "or account management",
    "html": "or account management",
    "sent": "2017-12-15T15:36:10.152Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ebfaa2be466828a6884a",
    "text": "otherwise they would have to keep track of everybody's accounts using the service",
    "html": "otherwise they would have to keep track of everybody&#39;s accounts using the service",
    "sent": "2017-12-15T15:36:26.971Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ec09c65707ba2b577d6e",
    "text": "Ok",
    "html": "Ok",
    "sent": "2017-12-15T15:36:41.183Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ec11ffa3e379193fc44d",
    "text": "just read the tutorial I pasted above",
    "html": "just read the tutorial I pasted above",
    "sent": "2017-12-15T15:36:49.303Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ec190163b028103ed604",
    "text": "they'll tell you how to use your mnemonic",
    "html": "they&#39;ll tell you how to use your mnemonic",
    "sent": "2017-12-15T15:36:57.405Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ec2affa3e379193fc4ea",
    "text": "and then just run `truffle migrate --network ropsten`",
    "html": "and then just run <code>truffle migrate --network ropsten</code>",
    "sent": "2017-12-15T15:37:14.874Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ec315355812e57dc6952",
    "text": "and it'll work",
    "html": "and it&#39;ll work",
    "sent": "2017-12-15T15:37:21.972Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ec3303838b2f2afb9372",
    "text": ":)",
    "html": ":)",
    "sent": "2017-12-15T15:37:23.334Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ec370163b028103ed7c9",
    "text": "Well I'm just going to start a ganache UI and set the mnemonic to that one. It will give me the list of accounts",
    "html": "Well I&#39;m just going to start a ganache UI and set the mnemonic to that one. It will give me the list of accounts",
    "sent": "2017-12-15T15:37:27.798Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ec44540c78242dcb8561",
    "text": ":thumbsup: ",
    "html": ":thumbsup: ",
    "sent": "2017-12-15T15:37:40.921Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ec4e1a4e6c8223126e39",
    "text": "I'll go get some Eth credited then",
    "html": "I&#39;ll go get some Eth credited then",
    "sent": "2017-12-15T15:37:50.764Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ec621a4e6c8223126ea4",
    "text": "if you want ropsten eth just paste the public address here",
    "html": "if you want ropsten eth just paste the public address here",
    "sent": "2017-12-15T15:38:10.350Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ec65540c78242dcb85e5",
    "text": "and ill send you",
    "html": "and ill send you",
    "sent": "2017-12-15T15:38:13.820Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33eca1540c78242dcb873d",
    "text": "Ok",
    "html": "Ok",
    "sent": "2017-12-15T15:39:13.232Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ecb3ba39a53f1a64fe36",
    "text": "The faucet links from that tutorial don't work",
    "html": "The faucet links from that tutorial don&#39;t work",
    "sent": "2017-12-15T15:39:31.765Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ecf5c65707ba2b5781e6",
    "text": "`0x81b7e08f65bdf5648606c89998a9cc8164397647`",
    "html": "<code>0x81b7e08f65bdf5648606c89998a9cc8164397647</code>",
    "sent": "2017-12-15T15:40:37.430Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ed03540c78242dcb8a97",
    "text": "This one works but the transactions don't seem to clear",
    "html": "This one works but the transactions don&#39;t seem to clear",
    "sent": "2017-12-15T15:40:51.261Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ed0303838b2f2afb9753",
    "text": "https://faucet.metamask.io/",
    "html": "<a href=\"https://faucet.metamask.io/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://faucet.metamask.io/</a>",
    "sent": "2017-12-15T15:40:51.549Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [
      {
        "url": "https://faucet.metamask.io/"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ed13a2be466828a68ddc",
    "text": "just sent you",
    "html": "just sent you",
    "sent": "2017-12-15T15:41:07.474Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ed18ffa3e379193fca6e",
    "text": "Ah yeah it worked I got some eth. I'll try deploying to ropsten.",
    "html": "Ah yeah it worked I got some eth. I&#39;ll try deploying to ropsten.",
    "sent": "2017-12-15T15:41:12.669Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ed1bffa3e379193fca72",
    "text": "Ok, thanks",
    "html": "Ok, thanks",
    "sent": "2017-12-15T15:41:15.334Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ed42ffa3e379193fcb77",
    "text": "What the....",
    "html": "What the....",
    "sent": "2017-12-15T15:41:54.613Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ed47ba39a53f1a65023a",
    "text": "```\nError encountered, bailing. Network state unknown. Review successful transactions manually.\nexceeds block gas limit\n```",
    "html": "<pre><code>Error encountered, bailing. Network state unknown. Review successful transactions manually.\nexceeds block gas <span class=\"built_in\">limit</span></code></pre>",
    "sent": "2017-12-15T15:41:59.041Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ed550163b028103edf2a",
    "text": "And that's just for my `Migration` contract, everything else is disabled.",
    "html": "And that&#39;s just for my <code>Migration</code> contract, everything else is disabled.",
    "sent": "2017-12-15T15:42:13.197Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ed68540c78242dcb8cf8",
    "text": "That's an error with truffle then",
    "html": "That&#39;s an error with truffle then",
    "sent": "2017-12-15T15:42:32.704Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ed71232e79134d535f73",
    "text": "or any of the contracts there",
    "html": "or any of the contracts there",
    "sent": "2017-12-15T15:42:41.915Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ed791a4e6c822312767b",
    "text": "just ask in their gitter",
    "html": "just ask in their gitter",
    "sent": "2017-12-15T15:42:49.160Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ee21540c78242dcb91bc",
    "text": "Ok thanks mate",
    "html": "Ok thanks mate",
    "sent": "2017-12-15T15:45:37.864Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ee27ffa3e379193fd338",
    "text": ";)",
    "html": ";)",
    "sent": "2017-12-15T15:45:43.387Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33eed9540c78242dcb9550",
    "text": "That's ridiculous, I'm stuck with a bug that occured while trying to debug another.",
    "html": "That&#39;s ridiculous, I&#39;m stuck with a bug that occured while trying to debug another.",
    "sent": "2017-12-15T15:48:41.565Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33eedcffa3e379193fd8c7",
    "text": "lol",
    "html": "lol",
    "sent": "2017-12-15T15:48:44.701Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33eee75355812e57dc7b4b",
    "text": "I feel like I'm using Windows or Azure.",
    "html": "I feel like I&#39;m using Windows or Azure.",
    "sent": "2017-12-15T15:48:55.890Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33eef2ffa3e379193fd915",
    "text": ":D",
    "html": ":D",
    "sent": "2017-12-15T15:49:06.307Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33f077ffa3e379193fe283",
    "text": "@GNSPS Did you send ether to that address I gave you earlier? If you did, you donated to the test faucet :)",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"GNSPS\" class=\"mention\">@GNSPS</span> Did you send ether to that address I gave you earlier? If you did, you donated to the test faucet :)",
    "sent": "2017-12-15T15:55:35.821Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [
      {
        "screenName": "GNSPS",
        "userId": "54bd42addb8155e6700ed45e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33f082ffa3e379193fe307",
    "text": ":joy: ",
    "html": ":joy: ",
    "sent": "2017-12-15T15:55:46.036Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33f0891a4e6c8223128b3a",
    "text": "I sent 50 eth",
    "html": "I sent 50 eth",
    "sent": "2017-12-15T15:55:53.061Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33f291ffa3e379193feecb",
    "text": "Haha thanks for your contribution to the faucet ;)",
    "html": "Haha thanks for your contribution to the faucet ;)",
    "sent": "2017-12-15T16:04:33.653Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33fedeba39a53f1a6567d7",
    "text": "We solved the problem in #truffle, I found a bug with Geth.",
    "html": "We solved the problem in #truffle, I found a bug with Geth.",
    "sent": "2017-12-15T16:57:02.704Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ff00ffa3e37919403fa8",
    "text": "@GNSPS Thanks for all your time, you've been most helpful.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"GNSPS\" class=\"mention\">@GNSPS</span> Thanks for all your time, you&#39;ve been most helpful.",
    "sent": "2017-12-15T16:57:36.117Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [
      {
        "screenName": "GNSPS",
        "userId": "54bd42addb8155e6700ed45e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ff00232e79134d53cb66",
    "text": "https://github.com/trufflesuite/truffle/issues/721",
    "html": "<span data-link-type=\"issue\" data-issue=\"721\" data-issue-repo=\"trufflesuite/truffle\" class=\"issue\">trufflesuite/truffle#721</span>",
    "sent": "2017-12-15T16:57:36.545Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [],
    "issues": [
      {
        "repo": "trufflesuite/truffle",
        "number": "721"
      }
    ],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a34055b232e79134d53ee16",
    "text": "@hickscorp yes called my function if 15 input itmes .. working ok",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"hickscorp\" class=\"mention\">@hickscorp</span> yes called my function if 15 input itmes .. working ok",
    "sent": "2017-12-15T17:24:43.118Z",
    "fromUser": {
      "id": "56a5fb8de610378809be1158",
      "username": "Preetam007",
      "displayName": "Preetam",
      "url": "/Preetam007",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Preetam007",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8400402?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8400402?v=4&s=128",
      "v": 44,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [
      {
        "screenName": "hickscorp",
        "userId": "55042d3c15522ed4b3dd40dd",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a34056d03838b2f2afc27b3",
    "text": "@Preetam007 Cool.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"Preetam007\" class=\"mention\">@Preetam007</span> Cool.",
    "sent": "2017-12-15T17:25:01.435Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [
      {
        "screenName": "Preetam007",
        "userId": "56a5fb8de610378809be1158",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a340f9d5355812e57dd40dc",
    "text": "@hickscorp no problem! Glad I could help",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"hickscorp\" class=\"mention\">@hickscorp</span> no problem! Glad I could help",
    "sent": "2017-12-15T18:08:29.537Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 30,
    "urls": [],
    "mentions": [
      {
        "screenName": "hickscorp",
        "userId": "55042d3c15522ed4b3dd40dd",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a34ac65ffa3e3791943763e",
    "text": "Hi I am trying to follow pet-shop tutorial but I got error Contract has not been deployed to detected network (network/artifact mismatch)",
    "html": "Hi I am trying to follow pet-shop tutorial but I got error Contract has not been deployed to detected network (network/artifact mismatch)",
    "sent": "2017-12-16T05:17:25.359Z",
    "fromUser": {
      "id": "5a34a98fd73408ce4f8390ca",
      "username": "9geeks",
      "displayName": "Đặng Minh",
      "url": "/9geeks",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/9geeks",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/15681137?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/15681137?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 32,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a34b917540c78242dcf3ae2",
    "text": "I have just run command \"truffle migrate --network development\" and I run fine now :)",
    "html": "I have just run command &quot;truffle migrate --network development&quot; and I run fine now :)",
    "sent": "2017-12-16T06:11:35.832Z",
    "fromUser": {
      "id": "5a34a98fd73408ce4f8390ca",
      "username": "9geeks",
      "displayName": "Đặng Minh",
      "url": "/9geeks",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/9geeks",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/15681137?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/15681137?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 32,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a357adc540c78242dd25ace",
    "text": "what's this pet shop tutorial people are always asking about?",
    "html": "what&#39;s this pet shop tutorial people are always asking about?",
    "sent": "2017-12-16T19:58:20.350Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 30,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a358f24a2be466828addf46",
    "text": "It’s truffle’s tutorial",
    "html": "It’s truffle’s tutorial",
    "sent": "2017-12-16T21:24:52.519Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 30,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a358f390163b02810460761",
    "text": "Like a “getting started” kind of thing",
    "html": "Like a “getting started” kind of thing",
    "sent": "2017-12-16T21:25:13.309Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 30,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a366c3c540c78242dd5d354",
    "text": "what's the best practice for creating date-time variables? I want my contract to be able to set the DOB for a person",
    "html": "what&#39;s the best practice for creating date-time variables? I want my contract to be able to set the DOB for a person",
    "sent": "2017-12-17T13:08:12.126Z",
    "fromUser": {
      "id": "57c4ce9640f3a6eec06207e0",
      "username": "ToJen",
      "displayName": "Tomisin",
      "url": "/ToJen",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ToJen",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13075885?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13075885?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a380c7c03838b2f2a0d8f68",
    "text": "you can use unix timestamps to represent time, or you could create a struct and store it in a mapping:\n```  \nstruct Person {\n    uint256 day;\n    uint256 month;\n    uint256 year;\n  }\n```",
    "html": "you can use unix timestamps to represent time, or you could create a struct and store it in a mapping:<pre><code><span class=\"title\">struct</span> Person {\n    <span class=\"title\">uint256</span> day;\n    <span class=\"title\">uint256</span> month;\n    <span class=\"title\">uint256</span> year;\n  }</code></pre>",
    "sent": "2017-12-18T18:44:12.076Z",
    "fromUser": {
      "id": "58e664ecd73408ce4f5694ed",
      "username": "jessicagmarshall",
      "displayName": "Jessica Marshall",
      "url": "/jessicagmarshall",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jessicagmarshall",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12129939?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12129939?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a380c91a2be466828b8a3f9",
    "text": "@maurelian http://truffleframework.com/tutorials/pet-shop",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> <a href=\"http://truffleframework.com/tutorials/pet-shop\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://truffleframework.com/tutorials/pet-shop</a>",
    "sent": "2017-12-18T18:44:33.459Z",
    "fromUser": {
      "id": "58e664ecd73408ce4f5694ed",
      "username": "jessicagmarshall",
      "displayName": "Jessica Marshall",
      "url": "/jessicagmarshall",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jessicagmarshall",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12129939?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12129939?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [
      {
        "url": "http://truffleframework.com/tutorials/pet-shop"
      }
    ],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a381495232e79134d6584d8",
    "text": "oh nice. First I'd seen the struct approach to dates. \nOne improvement I'd suggest is \n```\nstruct Person {\n    uint64 day;\n    uint64 month;\n    uint64 year;\n  }\n```\n@jessicica14 That'll tightly pack the data into 256 bytes, and I think save ~40,000 gas per entry.\n",
    "html": "<p>oh nice. First I&#39;d seen the struct approach to dates.<br>One improvement I&#39;d suggest is </p><pre><code><span class=\"keyword\">struct</span> Person {\n    <span class=\"typename\">uint64</span> day;\n    <span class=\"typename\">uint64</span> month;\n    <span class=\"typename\">uint64</span> year;\n  }</code></pre><p><span data-link-type=\"mention\" data-screen-name=\"jessicica14\" class=\"mention\">@jessicica14</span> That&#39;ll tightly pack the data into 256 bytes, and I think save ~40,000 gas per entry.</p>",
    "sent": "2017-12-18T19:18:45.133Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [
      {
        "screenName": "jessicica14",
        "userId": "58e664ecd73408ce4f5694ed",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a382b34ba39a53f1a777676",
    "text": "thanks @jessicica14 and @maurelian ",
    "html": "thanks <span data-link-type=\"mention\" data-screen-name=\"jessicica14\" class=\"mention\">@jessicica14</span> and <span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> ",
    "sent": "2017-12-18T20:55:16.643Z",
    "editedAt": "2017-12-18T20:55:26.103Z",
    "fromUser": {
      "id": "57c4ce9640f3a6eec06207e0",
      "username": "ToJen",
      "displayName": "Tomisin",
      "url": "/ToJen",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ToJen",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13075885?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13075885?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [
      {
        "screenName": "jessicica14",
        "userId": "58e664ecd73408ce4f5694ed",
        "userIds": []
      },
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a3895f2c65707ba2b6c08c9",
    "text": "\nHi guys, anyoe knows how to sefldestruct a contracts using delegatecall ?\non the Solidity manual: Even if a contract’s code does not contain a call to selfdestruct, it can still perform that operation using delegatecall or callcode.",
    "html": "Hi guys, anyoe knows how to sefldestruct a contracts using delegatecall ?<br>on the Solidity manual: Even if a contract’s code does not contain a call to selfdestruct, it can still perform that operation using delegatecall or callcode.",
    "sent": "2017-12-19T04:30:42.794Z",
    "fromUser": {
      "id": "59ac1bdbd73408ce4f741fe5",
      "username": "iam-dev",
      "displayName": "Elky Bachtiar",
      "url": "/iam-dev",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/iam-dev",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30754770?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30754770?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a3922401a4e6c822329ff86",
    "text": "@iam-dev delegatecall can execute any code from another contract, as if it were run by the original contract.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"iam-dev\" class=\"mention\">@iam-dev</span> delegatecall can execute any code from another contract, as if it were run by the original contract.",
    "sent": "2017-12-19T14:29:20.823Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [
      {
        "screenName": "iam-dev",
        "userId": "59ac1bdbd73408ce4f741fe5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a39229b00d569114bc50c4c",
    "text": "How ?",
    "html": "How ?",
    "sent": "2017-12-19T14:30:51.992Z",
    "fromUser": {
      "id": "58f445b2d73408ce4f58e114",
      "username": "moabughoush_twitter",
      "displayName": "Mag",
      "url": "/moabughoush_twitter",
      "avatarUrl": "https://avatars-02.gitter.im/g/u/moabughoush_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a39232c1a4e6c82232a04b2",
    "text": "Here's a good outline of delegatecall: https://ethereum.stackexchange.com/questions/3667/difference-between-call-callcode-and-delegatecall",
    "html": "Here&#39;s a good outline of delegatecall: <a href=\"https://ethereum.stackexchange.com/questions/3667/difference-between-call-callcode-and-delegatecall\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://ethereum.stackexchange.com/questions/3667/difference-between-call-callcode-and-delegatecall</a>",
    "sent": "2017-12-19T14:33:16.723Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [
      {
        "url": "https://ethereum.stackexchange.com/questions/3667/difference-between-call-callcode-and-delegatecall"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a3923690163b02810561d12",
    "text": "There's no mention of selfdestruct(), but if it was called in Contract E in the example, it would cause contract D to selfdestruct",
    "html": "There&#39;s no mention of selfdestruct(), but if it was called in Contract E in the example, it would cause contract D to selfdestruct",
    "sent": "2017-12-19T14:34:17.810Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a392e1d03838b2f2a134177",
    "text": "I'm curious what people think about this PR to add a Token specific page to the docs here: https://github.com/ConsenSys/smart-contract-best-practices/pull/120/files",
    "html": "I&#39;m curious what people think about this PR to add a Token specific page to the docs here: <a href=\"https://github.com/ConsenSys/smart-contract-best-practices/pull/120/files\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/ConsenSys/smart-contract-best-practices/pull/120/files</a>",
    "sent": "2017-12-19T15:19:57.865Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [
      {
        "url": "https://github.com/ConsenSys/smart-contract-best-practices/pull/120/files"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a392eef232e79134d6b315c",
    "text": "Two of the headings seem like they could be included in the general 'recommendations', they're not necessarily token specific: \n\n* Preventing transfer to the 0x0 address!\n* Preventing transfer to the contract address!\n\n'follow the latest standard' may add value, I'm not sure, but it seems like 'standards' express the need to be followed implicitly, and it's not clear what is 'latest', nor if it always should be the criteria for choosing a standard.\n\n",
    "html": "<p>Two of the headings seem like they could be included in the general &#39;recommendations&#39;, they&#39;re not necessarily token specific: </p><ul>\n<li>Preventing transfer to the 0x0 address!</li>\n<li>Preventing transfer to the contract address!</li>\n</ul>\n<p>&#39;follow the latest standard&#39; may add value, I&#39;m not sure, but it seems like &#39;standards&#39; express the need to be followed implicitly, and it&#39;s not clear what is &#39;latest&#39;, nor if it always should be the criteria for choosing a standard.</p>",
    "sent": "2017-12-19T15:23:27.080Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a3a004fba39a53f1a80885b",
    "text": "hey everyone, we're putting out a call for speakers for the 2018 Decentralized AI Summit http://decentralized-ai.com/ -- hit me up if you have any questions.",
    "html": "hey everyone, we&#39;re putting out a call for speakers for the 2018 Decentralized AI Summit <a href=\"http://decentralized-ai.com/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://decentralized-ai.com/</a> -- hit me up if you have any questions.",
    "sent": "2017-12-20T06:16:47.320Z",
    "fromUser": {
      "id": "559d959c15522ed4b3e3ac82",
      "username": "dpgailey",
      "displayName": "Dan Gailey",
      "url": "/dpgailey",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dpgailey",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/249497?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/249497?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [
      {
        "url": "http://decentralized-ai.com/"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a3b306fc072deaf0be72627",
    "text": "Crypto Builders Meetup is live: https://www.facebook.com/hackdays4all/videos/568470916831909/",
    "html": "Crypto Builders Meetup is live: <a href=\"https://www.facebook.com/hackdays4all/videos/568470916831909/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.facebook.com/hackdays4all/videos/568470916831909/</a>",
    "sent": "2017-12-21T03:54:23.362Z",
    "fromUser": {
      "id": "559d959c15522ed4b3e3ac82",
      "username": "dpgailey",
      "displayName": "Dan Gailey",
      "url": "/dpgailey",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dpgailey",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/249497?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/249497?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [
      {
        "url": "https://www.facebook.com/hackdays4all/videos/568470916831909/"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a3ca515c072deaf0bee341f",
    "text": "Is there a site that explains all tokens and their specs?",
    "html": "Is there a site that explains all tokens and their specs?",
    "sent": "2017-12-22T06:24:21.517Z",
    "fromUser": {
      "id": "559d959c15522ed4b3e3ac82",
      "username": "dpgailey",
      "displayName": "Dan Gailey",
      "url": "/dpgailey",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dpgailey",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/249497?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/249497?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a3d1c1de43a7a150c95b379",
    "text": "@dpgailey not that I know of. The consenSys tokens repo will support multiple token standards in the near future, so it would make sense to incorporate that into the documentation there. ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"dpgailey\" class=\"mention\">@dpgailey</span> not that I know of. The consenSys tokens repo will support multiple token standards in the near future, so it would make sense to incorporate that into the documentation there. ",
    "sent": "2017-12-22T14:52:13.811Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [
      {
        "screenName": "dpgailey",
        "userId": "559d959c15522ed4b3e3ac82",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a3e280a03838b2f2a2b4f9d",
    "text": "Interesting Ok. I'm just curious where people find a catalog of different standards, best practices, libraries, etc. Right now it's mostly through crafted searches, word of mouth, and boards/social. ",
    "html": "Interesting Ok. I&#39;m just curious where people find a catalog of different standards, best practices, libraries, etc. Right now it&#39;s mostly through crafted searches, word of mouth, and boards/social. ",
    "sent": "2017-12-23T09:55:22.868Z",
    "fromUser": {
      "id": "559d959c15522ed4b3e3ac82",
      "username": "dpgailey",
      "displayName": "Dan Gailey",
      "url": "/dpgailey",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dpgailey",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/249497?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/249497?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a41fbdc232e79134d9173ba",
    "text": "@26rahulsingh\ncan anyone help me with this\nError encountered, bailing. Network state unknown. Review successful transactions manually.\nError: VM Exception while processing transaction: out of gas",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"26rahulsingh\" class=\"mention\">@26rahulsingh</span><br>can anyone help me with this<br>Error encountered, bailing. Network state unknown. Review successful transactions manually.<br>Error: VM Exception while processing transaction: out of gas",
    "sent": "2017-12-26T07:35:56.816Z",
    "fromUser": {
      "id": "59f1aad5d73408ce4f7bcba8",
      "username": "26rahulsingh",
      "displayName": "26rahulsingh",
      "url": "/26rahulsingh",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/26rahulsingh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8557747?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8557747?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [
      {
        "screenName": "26rahulsingh",
        "userId": "59f1aad5d73408ce4f7bcba8",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a42fceac072deaf0b070839",
    "text": "Hi folks, a bit of a cross post from the solidity room, when is it ok and advisable to use a ```while``` loop, particularly because of gas consumption issues. Also is there a recommended way or alternative pattern to iterating  ? Thanks",
    "html": "Hi folks, a bit of a cross post from the solidity room, when is it ok and advisable to use a <code>while</code> loop, particularly because of gas consumption issues. Also is there a recommended way or alternative pattern to iterating  ? Thanks",
    "sent": "2017-12-27T01:52:42.687Z",
    "fromUser": {
      "id": "59ab56a1d73408ce4f741299",
      "username": "KenoLeon",
      "displayName": "Keno Leon",
      "url": "/KenoLeon",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/KenoLeon",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10525682?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10525682?v=4&s=128",
      "v": 4,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a43d62bedd2230811e38569",
    "text": "Hi everyone! Happy holidays. Just found this community and hope to be active here :)",
    "html": "Hi everyone! Happy holidays. Just found this community and hope to be active here :)",
    "sent": "2017-12-27T17:19:39.671Z",
    "fromUser": {
      "id": "5a414eddd73408ce4f84cb83",
      "username": "AndyHinEtc_twitter",
      "displayName": "Andy Hin",
      "url": "/AndyHinEtc_twitter",
      "avatarUrl": "https://avatars-05.gitter.im/g/u/AndyHinEtc_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/656661623373963265/hsemF0fk_bigger.png",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/656661623373963265/hsemF0fk.png"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a43d76c03838b2f2a4153a1",
    "text": "I've been working on a project and wanted to get your thoughts on best practices regarding the \"Factory Pattern\".  \n- App facilitates betting/propositions\n- Considering a \"Factory Pattern\" (BetFactory creates and manages BetContracts)\n- What are some of the pros/cons? \n- Pro: Seems that having a factory contract means you don't need to keep track of your contracts in a centralized DB. \n- Con: However, sorting, filtering and searching through contracts seems like it will be very difficult using just solidity.\n- Question: In my `BetFactory -> createContract() payable` instantiates a `BetContract`. Is there anyway to forward the payable `msg.value` + `msg.sender` to the `BetContract`? \n",
    "html": "I&#39;ve been working on a project and wanted to get your thoughts on best practices regarding the &quot;Factory Pattern&quot;.  <ul>\n<li>App facilitates betting/propositions</li>\n<li>Considering a &quot;Factory Pattern&quot; (BetFactory creates and manages BetContracts)</li>\n<li>What are some of the pros/cons? </li>\n<li>Pro: Seems that having a factory contract means you don&#39;t need to keep track of your contracts in a centralized DB. </li>\n<li>Con: However, sorting, filtering and searching through contracts seems like it will be very difficult using just solidity.</li>\n<li>Question: In my <code>BetFactory -&gt; createContract() payable</code> instantiates a <code>BetContract</code>. Is there anyway to forward the payable <code>msg.value</code> + <code>msg.sender</code> to the <code>BetContract</code>? </li>\n</ul>\n",
    "sent": "2017-12-27T17:25:00.016Z",
    "fromUser": {
      "id": "5a414eddd73408ce4f84cb83",
      "username": "AndyHinEtc_twitter",
      "displayName": "Andy Hin",
      "url": "/AndyHinEtc_twitter",
      "avatarUrl": "https://avatars-05.gitter.im/g/u/AndyHinEtc_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/656661623373963265/hsemF0fk_bigger.png",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/656661623373963265/hsemF0fk.png"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a442aa9b48e8c356671cd85",
    "text": "@AndyHinEtc_twitter, I like the factory pattern. Good way to centralize the creation of your contracts. As for forwarding the contract, you should be able to call the transfer function after doing new BetContract",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"AndyHinEtc_twitter\" class=\"mention\">@AndyHinEtc_twitter</span>, I like the factory pattern. Good way to centralize the creation of your contracts. As for forwarding the contract, you should be able to call the transfer function after doing new BetContract",
    "sent": "2017-12-27T23:20:09.826Z",
    "fromUser": {
      "id": "59ce6717d73408ce4f77ebe4",
      "username": "micahriggan",
      "displayName": "micahriggan",
      "url": "/micahriggan",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/micahriggan",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3626473?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3626473?v=4&s=128",
      "v": 16,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [
      {
        "screenName": "AndyHinEtc_twitter",
        "userId": "5a414eddd73408ce4f84cb83",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a44927b5355812e5725a1e6",
    "text": "Error encountered, bailing. Network state unknown. Review successful transactions manually.\nError: Error: could not unlock signer account",
    "html": "Error encountered, bailing. Network state unknown. Review successful transactions manually.<br>Error: Error: could not unlock signer account",
    "sent": "2017-12-28T06:43:07.305Z",
    "fromUser": {
      "id": "59f1aad5d73408ce4f7bcba8",
      "username": "26rahulsingh",
      "displayName": "26rahulsingh",
      "url": "/26rahulsingh",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/26rahulsingh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8557747?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8557747?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a453868c072deaf0b10ba98",
    "text": "@26rahulsingh you need to use personal.unlockAccount",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"26rahulsingh\" class=\"mention\">@26rahulsingh</span> you need to use personal.unlockAccount",
    "sent": "2017-12-28T18:31:04.641Z",
    "fromUser": {
      "id": "59ce6717d73408ce4f77ebe4",
      "username": "micahriggan",
      "displayName": "micahriggan",
      "url": "/micahriggan",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/micahriggan",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3626473?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3626473?v=4&s=128",
      "v": 16,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [
      {
        "screenName": "26rahulsingh",
        "userId": "59f1aad5d73408ce4f7bcba8",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dc24ffa3e379193f63c3",
    "text": "@hickscorp idk",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"hickscorp\" class=\"mention\">@hickscorp</span> idk",
    "sent": "2017-12-15T14:28:52.899Z",
    "fromUser": {
      "id": "56a5fb8de610378809be1158",
      "username": "Preetam007",
      "displayName": "Preetam",
      "url": "/Preetam007",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Preetam007",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8400402?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8400402?v=4&s=128",
      "v": 44,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [
      {
        "screenName": "hickscorp",
        "userId": "55042d3c15522ed4b3dd40dd",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dc2d1a4e6c8223120908",
    "text": "or any testnet?",
    "html": "or any testnet?",
    "sent": "2017-12-15T14:29:01.714Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dc46a2be466828a62975",
    "text": "@Preetam007 What do you mean, you don't know? It's your business logic not mine :D",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"Preetam007\" class=\"mention\">@Preetam007</span> What do you mean, you don&#39;t know? It&#39;s your business logic not mine :D",
    "sent": "2017-12-15T14:29:26.333Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [
      {
        "screenName": "Preetam007",
        "userId": "56a5fb8de610378809be1158",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dc56540c78242dcb1ec1",
    "text": "@hickscorp I don't think that in this case this loop can be avoided",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"hickscorp\" class=\"mention\">@hickscorp</span> I don&#39;t think that in this case this loop can be avoided",
    "sent": "2017-12-15T14:29:42.110Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [
      {
        "screenName": "hickscorp",
        "userId": "55042d3c15522ed4b3dd40dd",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dc620163b028103e6e9d",
    "text": "if what you want is to in the end have a check with O(1)",
    "html": "if what you want is to in the end have a check with O(1)",
    "sent": "2017-12-15T14:29:54.110Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dc69ffa3e379193f659d",
    "text": "for the mapping",
    "html": "for the mapping",
    "sent": "2017-12-15T14:30:01.137Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dc6e540c78242dcb1f18",
    "text": "and not have to go through an array",
    "html": "and not have to go through an array",
    "sent": "2017-12-15T14:30:06.488Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dc7fc65707ba2b571e80",
    "text": "the array looping is only to be able to insert many addresses at a time",
    "html": "the array looping is only to be able to insert many addresses at a time",
    "sent": "2017-12-15T14:30:23.558Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dc8ec65707ba2b571eba",
    "text": "@Preetam007 As a rule of thumb, if a smart contract is doing a loop, what you want to do instead is have the function of your smartcontract perform only the computation of one entry, and call that loop from *outside* your smartcontract. This way the maximum gas limit can hardly be spent inside an iteration.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"Preetam007\" class=\"mention\">@Preetam007</span> As a rule of thumb, if a smart contract is doing a loop, what you want to do instead is have the function of your smartcontract perform only the computation of one entry, and call that loop from <em>outside</em> your smartcontract. This way the maximum gas limit can hardly be spent inside an iteration.",
    "sent": "2017-12-15T14:30:38.964Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [
      {
        "screenName": "Preetam007",
        "userId": "56a5fb8de610378809be1158",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dcb6a2be466828a62bf6",
    "text": "I understand that. It's a pretty obvious scheme. What I'm saying is that *by design* iterations in Solidity are to be avoided because blowing up the actual block gas limit is easy.",
    "html": "I understand that. It&#39;s a pretty obvious scheme. What I&#39;m saying is that <em>by design</em> iterations in Solidity are to be avoided because blowing up the actual block gas limit is easy.",
    "sent": "2017-12-15T14:31:18.524Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dcbd232e79134d52f102",
    "text": "yep",
    "html": "yep",
    "sent": "2017-12-15T14:31:25.504Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dcc2a2be466828a62c37",
    "text": "but I've seen this over and over",
    "html": "but I&#39;ve seen this over and over",
    "sent": "2017-12-15T14:31:30.950Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dcc30163b028103e70de",
    "text": "So basically:",
    "html": "So basically:",
    "sent": "2017-12-15T14:31:31.099Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dcd5540c78242dcb2156",
    "text": "by the onlyOwner modifier I'm guessing this is only accessible by the owners",
    "html": "by the onlyOwner modifier I&#39;m guessing this is only accessible by the owners",
    "sent": "2017-12-15T14:31:49.385Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dcee0163b028103e71f8",
    "text": "By the `owner`, not `owners`.",
    "html": "By the <code>owner</code>, not <code>owners</code>.",
    "sent": "2017-12-15T14:32:14.583Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dcef5355812e57dc0310",
    "text": "and so it's actually probably a way to save a bit in tx costs if you manage to send whitelisted contributors in batches",
    "html": "and so it&#39;s actually probably a way to save a bit in tx costs if you manage to send whitelisted contributors in batches",
    "sent": "2017-12-15T14:32:15.081Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dd035355812e57dc03f0",
    "text": "> By the `owner`, not `owners`.\n\nI meant the team..",
    "html": "<blockquote>\n<p>By the <code>owner</code>, not <code>owners</code>.</p></blockquote>\n<p>I meant the team..</p>",
    "sent": "2017-12-15T14:32:35.478Z",
    "editedAt": "2017-12-15T14:32:46.415Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a33dd490163b028103e74b7",
    "text": "and the gas limit problems that @Preetam007 is having are clearly not because he's reaching them",
    "html": "and the gas limit problems that <span data-link-type=\"mention\" data-screen-name=\"Preetam007\" class=\"mention\">@Preetam007</span> is having are clearly not because he&#39;s reaching them",
    "sent": "2017-12-15T14:33:45.878Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [
      {
        "screenName": "Preetam007",
        "userId": "56a5fb8de610378809be1158",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dd651a4e6c8223120ef4",
    "text": "because that function being called with only one address definitely should not reach 3M gas",
    "html": "because that function being called with only one address definitely should not reach 3M gas",
    "sent": "2017-12-15T14:34:13.261Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dd7ec65707ba2b572303",
    "text": "It depends what was called *before* the loop.",
    "html": "It depends what was called <em>before</em> the loop.",
    "sent": "2017-12-15T14:34:38.771Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dd8f232e79134d52f58f",
    "text": "right",
    "html": "right",
    "sent": "2017-12-15T14:34:55.806Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dda31a4e6c8223121215",
    "text": "Eg: if that function that is performing a loop is being called from within the contract, or from another contract, then the gas might already have been chunked up.",
    "html": "Eg: if that function that is performing a loop is being called from within the contract, or from another contract, then the gas might already have been chunked up.",
    "sent": "2017-12-15T14:35:15.879Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ddae5355812e57dc0831",
    "text": "nope it's marked `external`",
    "html": "nope it&#39;s marked <code>external</code>",
    "sent": "2017-12-15T14:35:26.696Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ddb9a2be466828a6311b",
    "text": "so he can't have called anything else",
    "html": "so he can&#39;t have called anything else",
    "sent": "2017-12-15T14:35:37.576Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ddc403838b2f2afb35cd",
    "text": "He could.",
    "html": "He could.",
    "sent": "2017-12-15T14:35:48.947Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33ddcb232e79134d52f789",
    "text": "`this.function` calls external functions.",
    "html": "<code>this.function</code> calls external functions.",
    "sent": "2017-12-15T14:35:55.463Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dddf540c78242dcb26fa",
    "text": "Without clarrifications, his problem is simply another **don't do loops**.",
    "html": "Without clarrifications, his problem is simply another <strong>don&#39;t do loops</strong>.",
    "sent": "2017-12-15T14:36:15.420Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33de1003838b2f2afb37f2",
    "text": "Exposing the inner part of the loop within a function that keep track of the state, and calling that function from a loop offchain is usually your best option here.",
    "html": "Exposing the inner part of the loop within a function that keep track of the state, and calling that function from a loop offchain is usually your best option here.",
    "sent": "2017-12-15T14:37:04.626Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33de1fc65707ba2b572690",
    "text": "Let me give you an example",
    "html": "Let me give you an example",
    "sent": "2017-12-15T14:37:19.178Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33de63a2be466828a63539",
    "text": "right about the external calls",
    "html": "right about the external calls",
    "sent": "2017-12-15T14:38:27.432Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33de6f1a4e6c8223121700",
    "text": "```\n  function addContract(string name, address location) external onlyLinkyDapp {\n    boolStorage[keccak256(CONTRACT_ADDR_LOOKUP, location)] = true;\n    addressStorage[keccak256(CONTRACT_NAME_LOOKUP, name)] = location;\n  }\n```",
    "html": "<pre><code>  <span class=\"function\"><span class=\"keyword\">function</span></span> addContract(string <span class=\"keyword\">name</span>, address location) <span class=\"type\">external</span> onlyLinkyDapp {\n    boolStorage[keccak256(CONTRACT_ADDR_LOOKUP, location)] = true;\n    addressStorage[keccak256(CONTRACT_NAME_LOOKUP, <span class=\"keyword\">name</span>)] = location;\n  }</code></pre>",
    "sent": "2017-12-15T14:38:39.951Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33de76a2be466828a63562",
    "text": "but if intent in visibility marking means anything I don't see why he would be doing that",
    "html": "but if intent in visibility marking means anything I don&#39;t see why he would be doing that",
    "sent": "2017-12-15T14:38:46.932Z",
    "editedAt": "2017-12-15T14:38:56.552Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a33de8d0163b028103e7cc6",
    "text": "True - :) But you know... Sometimes newcommers do things... :)",
    "html": "True - :) But you know... Sometimes newcommers do things... :)",
    "sent": "2017-12-15T14:39:09.679Z",
    "editedAt": "2017-12-15T14:39:26.583Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a33dea4232e79134d52fc20",
    "text": ":smile: ",
    "html": ":smile: ",
    "sent": "2017-12-15T14:39:32.869Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e1de03838b2f2afb4db8",
    "text": "@GNSPS @hickscorp  fixed ..thanks for help\n@vidorge\nproblem was.\nChange the mapping from `mapping (address => uint8) public whitelistedContributors;` to `mapping (address => bool) public whitelistedContributors;`\nUsing uint8 requires more instructions because it does a lot of overflow checks etc. uint256 is the native type for the evm\nAnd in the loop put `= true` instead of `= 1`",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"GNSPS\" class=\"mention\">@GNSPS</span> <span data-link-type=\"mention\" data-screen-name=\"hickscorp\" class=\"mention\">@hickscorp</span>  fixed ..thanks for help<br><span data-link-type=\"mention\" data-screen-name=\"vidorge\" class=\"mention\">@vidorge</span><br>problem was.<br>Change the mapping from <code>mapping (address =&gt; uint8) public whitelistedContributors;</code> to <code>mapping (address =&gt; bool) public whitelistedContributors;</code><br>Using uint8 requires more instructions because it does a lot of overflow checks etc. uint256 is the native type for the evm<br>And in the loop put <code>= true</code> instead of <code>= 1</code>",
    "sent": "2017-12-15T14:53:18.570Z",
    "fromUser": {
      "id": "56a5fb8de610378809be1158",
      "username": "Preetam007",
      "displayName": "Preetam",
      "url": "/Preetam007",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Preetam007",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8400402?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8400402?v=4&s=128",
      "v": 44,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [
      {
        "screenName": "GNSPS",
        "userId": "54bd42addb8155e6700ed45e",
        "userIds": []
      },
      {
        "screenName": "hickscorp",
        "userId": "55042d3c15522ed4b3dd40dd",
        "userIds": []
      },
      {
        "screenName": "vidorge",
        "userId": "5a32b6bed73408ce4f83598c",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e21a540c78242dcb40ad",
    "text": "@Preetam007 Could you please do me a favor and call your test function with 4x more input items?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"Preetam007\" class=\"mention\">@Preetam007</span> Could you please do me a favor and call your test function with 4x more input items?",
    "sent": "2017-12-15T14:54:18.300Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 2,
    "urls": [],
    "mentions": [
      {
        "screenName": "Preetam007",
        "userId": "56a5fb8de610378809be1158",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e224ba39a53f1a64c0bf",
    "text": "I'm not positive that the two or three added instructions were the problem but I'm glad you solved it",
    "html": "I&#39;m not positive that the two or three added instructions were the problem but I&#39;m glad you solved it",
    "sent": "2017-12-15T14:54:28.014Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 2,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e314ffa3e379193f8f37",
    "text": "@hickscorp ok let me try",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"hickscorp\" class=\"mention\">@hickscorp</span> ok let me try",
    "sent": "2017-12-15T14:58:28.207Z",
    "fromUser": {
      "id": "56a5fb8de610378809be1158",
      "username": "Preetam007",
      "displayName": "Preetam",
      "url": "/Preetam007",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Preetam007",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8400402?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8400402?v=4&s=128",
      "v": 44,
      "gv": "4"
    },
    "unread": false,
    "readBy": 2,
    "urls": [],
    "mentions": [
      {
        "screenName": "hickscorp",
        "userId": "55042d3c15522ed4b3dd40dd",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e31c5355812e57dc2c53",
    "text": "Cool ok.",
    "html": "Cool ok.",
    "sent": "2017-12-15T14:58:36.488Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 2,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e4aaba39a53f1a64d042",
    "text": "Guys, I'm having a weird error. When deploying to a real network:\n\n```\nRunning migration: 20171201_010000_deploy_migrations.js\n  Deploying Migrations...\n  ... 0x89fb0f81d87abd50006b9b5cbb79a073ecd85f8be5193b74a5292e188359f448\n  Migrations: 0x74e3fc764c2474f25369b9d021b7f92e8441a2dc\nSaving successful migration to network...\n  ... 0x8528ef54ad91661941b17df792f4128ac73f964f2a69db44cda9c6fdae199cd6\nError encountered, bailing. Network state unknown. Review successful transactions manually.\nError: unknown transaction\n```\nAny idea?",
    "html": "<p>Guys, I&#39;m having a weird error. When deploying to a real network:</p><pre><code><span class=\"variable\">Running</span> migration: <span class=\"number\">20171201</span>_010000_deploy_migrations.js\n  <span class=\"variable\">Deploying</span> <span class=\"variable\">Migrations</span>...\n  ... <span class=\"number\">0</span>x89fb0f81d87abd50006b9b5cbb79a073ecd85f8be5193b74a5292e188359f448\n  <span class=\"variable\">Migrations</span>: <span class=\"number\">0</span>x74e3fc764c2474f25369b9d021b7f92e8441a2dc\n<span class=\"variable\">Saving</span> successful migration to network...\n  ... <span class=\"number\">0</span>x8528ef54ad91661941b17df792f4128ac73f964f2a69db44cda9c6fdae199cd6\n<span class=\"variable\">Error</span> encountered, bailing. <span class=\"variable\">Network</span> state unknown. <span class=\"variable\">Review</span> successful transactions manually.\n<span class=\"variable\">Error</span>: unknown transaction</code></pre><p>Any idea?</p>",
    "sent": "2017-12-15T15:05:14.961Z",
    "editedAt": "2017-12-15T15:05:39.109Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 2,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 3
  },
  {
    "id": "5a33e4c5232e79134d53242b",
    "text": "which one? I can try it",
    "html": "which one? I can try it",
    "sent": "2017-12-15T15:05:41.380Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e4de540c78242dcb545c",
    "text": "or are you talking about a completely different contract?",
    "html": "or are you talking about a completely different contract?",
    "sent": "2017-12-15T15:06:06.948Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e4e25355812e57dc3870",
    "text": ":joy: ",
    "html": ":joy: ",
    "sent": "2017-12-15T15:06:10.349Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e4e9c65707ba2b574e46",
    "text": "What are you asking me?",
    "html": "What are you asking me?",
    "sent": "2017-12-15T15:06:17.414Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e4f4ffa3e379193f9a2e",
    "text": "which network first",
    "html": "which network first",
    "sent": "2017-12-15T15:06:28.524Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e4f8a2be466828a65eb4",
    "text": "Local geth.",
    "html": "Local geth.",
    "sent": "2017-12-15T15:06:32.361Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e504ba39a53f1a64d2d6",
    "text": "and it does work in ganache-cli?",
    "html": "and it does work in ganache-cli?",
    "sent": "2017-12-15T15:06:44.185Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e5045355812e57dc38fd",
    "text": "This is my migration:\n```\nconst Migrations = artifacts.require(\"./Migrations.sol\");\n\nmodule.exports = function(deployer) {\n  return deployer.deploy(Migrations);\n};\n```",
    "html": "This is my migration:<pre><code><span class=\"keyword\">const</span> Migrations = artifacts.require(<span class=\"string\">\"./Migrations.sol\"</span>);\n\n<span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(deployer)</span> </span>{\n  <span class=\"keyword\">return</span> deployer.deploy(Migrations);\n};</code></pre>",
    "sent": "2017-12-15T15:06:44.597Z",
    "editedAt": "2017-12-15T15:07:02.993Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a33e509232e79134d5325ac",
    "text": "It does, yes.",
    "html": "It does, yes.",
    "sent": "2017-12-15T15:06:49.302Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e522ffa3e379193f9b31",
    "text": "This is the migration contract:\n```\npragma solidity ^0.4.8;\nimport \"zeppelin-solidity/contracts/ownership/Ownable.sol\";\n\n\ncontract Migrations is Ownable{\n  uint    public  last_completed_migration;\n\n  function Migrations() public {\n    owner = msg.sender;\n  }\n\n  function setCompleted(uint completed) public onlyOwner {\n    last_completed_migration = completed;\n  }\n\n  function upgrade(address newLocation) public onlyOwner {\n    Migrations upgraded = Migrations(newLocation);\n    upgraded.setCompleted(last_completed_migration);\n  }\n}\n```\n",
    "html": "This is the migration contract:<pre><code><span class=\"keyword\">pragma</span> solidity ^<span class=\"number\">0.4</span>.8;\n<span class=\"keyword\">import</span> <span class=\"string\">\"zeppelin-solidity/contracts/ownership/Ownable.sol\"</span>;\n\n\ncontract Migrations <span class=\"keyword\">is</span> Ownable{\n  <span class=\"built_in\">uint</span>    <span class=\"keyword\">public</span>  last_completed_migration;\n\n  <span class=\"built_in\">function</span> Migrations() <span class=\"keyword\">public</span> {\n    owner = msg.sender;\n  }\n\n  <span class=\"built_in\">function</span> setCompleted(<span class=\"built_in\">uint</span> completed) <span class=\"keyword\">public</span> onlyOwner {\n    last_completed_migration = completed;\n  }\n\n  <span class=\"built_in\">function</span> upgrade(address newLocation) <span class=\"keyword\">public</span> onlyOwner {\n    Migrations upgraded = Migrations(newLocation);\n    upgraded.setCompleted(last_completed_migration);\n  }\n}</code></pre>",
    "sent": "2017-12-15T15:07:14.337Z",
    "editedAt": "2017-12-15T15:07:20.279Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a33e535c65707ba2b574fea",
    "text": "I don't think it's related to the migration or contract themselve, as this used to work yesterday.",
    "html": "I don&#39;t think it&#39;s related to the migration or contract themselve, as this used to work yesterday.",
    "sent": "2017-12-15T15:07:33.971Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e56ec65707ba2b575104",
    "text": "That is usually never with the migration",
    "html": "That is usually never with the migration",
    "sent": "2017-12-15T15:08:30.182Z",
    "editedAt": "2017-12-15T15:08:39.874Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a33e585ffa3e379193f9d44",
    "text": "have you tried compiling your contracts first?",
    "html": "have you tried compiling your contracts first?",
    "sent": "2017-12-15T15:08:53.975Z",
    "editedAt": "2017-12-15T15:09:10.546Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a33e598ba39a53f1a64d6a0",
    "text": "What do you mean? It works using `ganache-cli`, so I think so yeah :D",
    "html": "What do you mean? It works using <code>ganache-cli</code>, so I think so yeah :D",
    "sent": "2017-12-15T15:09:12.725Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e59e0163b028103eab1a",
    "text": "check for compile time errors",
    "html": "check for compile time errors",
    "sent": "2017-12-15T15:09:18.246Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e5a1a2be466828a661be",
    "text": "yep right",
    "html": "yep right",
    "sent": "2017-12-15T15:09:21.035Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e5a1ba39a53f1a64d6ca",
    "text": "There are none.",
    "html": "There are none.",
    "sent": "2017-12-15T15:09:21.957Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e5b30163b028103eab90",
    "text": "if you're using truffle you can always try to delete the build folder",
    "html": "if you&#39;re using truffle you can always try to delete the build folder",
    "sent": "2017-12-15T15:09:39.616Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e5b6540c78242dcb5998",
    "text": "All my other contracts are commented, all my other migrations are commented. The one failing is the default Migrator migration.",
    "html": "All my other contracts are commented, all my other migrations are commented. The one failing is the default Migrator migration.",
    "sent": "2017-12-15T15:09:42.661Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e5c80163b028103eac04",
    "text": "(which I guess you are since that is Truffle's migration contract)",
    "html": "(which I guess you are since that is Truffle&#39;s migration contract)",
    "sent": "2017-12-15T15:10:00.774Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e5ccc65707ba2b5752d8",
    "text": "Re `rm -rf build`: I do that every single build.",
    "html": "Re <code>rm -rf build</code>: I do that every single build.",
    "sent": "2017-12-15T15:10:04.161Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e5d25355812e57dc3dba",
    "text": "Ya",
    "html": "Ya",
    "sent": "2017-12-15T15:10:10.030Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e5d2c65707ba2b5752e7",
    "text": ":joy: ",
    "html": ":joy: ",
    "sent": "2017-12-15T15:10:10.895Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e5dec65707ba2b5753b3",
    "text": "Anyone with this error today?",
    "html": "Anyone with this error today?",
    "sent": "2017-12-15T15:10:22.211Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e5e7ffa3e379193f9f49",
    "text": "Geth upgraded yesterday night...",
    "html": "Geth upgraded yesterday night...",
    "sent": "2017-12-15T15:10:31.862Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 1,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e602ffa3e379193f9f98",
    "text": "and your local geth is connected to what?",
    "html": "and your local geth is connected to what?",
    "sent": "2017-12-15T15:10:58.708Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 2,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e60d1a4e6c8223124726",
    "text": "It's a test private geth.",
    "html": "It&#39;s a test private geth.",
    "sent": "2017-12-15T15:11:09.826Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 2,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e628a2be466828a665a0",
    "text": "maybe ask in their gitter?",
    "html": "maybe ask in their gitter?",
    "sent": "2017-12-15T15:11:36.181Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 2,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e62f5355812e57dc408c",
    "text": "What?",
    "html": "What?",
    "sent": "2017-12-15T15:11:43.749Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e63cc65707ba2b5755d6",
    "text": "Ah...",
    "html": "Ah...",
    "sent": "2017-12-15T15:11:56.930Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e647540c78242dcb5d6a",
    "text": "if people have been reporting unreliable behaviour since the patch",
    "html": "if people have been reporting unreliable behaviour since the patch",
    "sent": "2017-12-15T15:12:07.376Z",
    "editedAt": "2017-12-15T15:12:13.102Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a33e64d5355812e57dc416e",
    "text": "Geth is fine",
    "html": "Geth is fine",
    "sent": "2017-12-15T15:12:13.847Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 6,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e660232e79134d532e24",
    "text": "I see the contracts being mined",
    "html": "I see the contracts being mined",
    "sent": "2017-12-15T15:12:32.167Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 6,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e693232e79134d532eb6",
    "text": "Then just recheck your contracts",
    "html": "Then just recheck your contracts",
    "sent": "2017-12-15T15:13:23.292Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 7,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e699a2be466828a668bf",
    "text": "I don't have any.",
    "html": "I don&#39;t have any.",
    "sent": "2017-12-15T15:13:29.873Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 7,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e6aeba39a53f1a64dc14",
    "text": "I removed everything to make sure.",
    "html": "I removed everything to make sure.",
    "sent": "2017-12-15T15:13:50.867Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 6,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e73bffa3e379193fa648",
    "text": "I don't use geth for dev can't help much more",
    "html": "I don&#39;t use geth for dev can&#39;t help much more",
    "sent": "2017-12-15T15:16:11.434Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 6,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e74ba2be466828a66bb3",
    "text": "but since truffle didn't change my bet would be that geth's the problem",
    "html": "but since truffle didn&#39;t change my bet would be that geth&#39;s the problem",
    "sent": "2017-12-15T15:16:27.492Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e754c65707ba2b575f09",
    "text": "Me neither. I'm using it to deploy on a private network. Do you deploy on real networks?",
    "html": "Me neither. I&#39;m using it to deploy on a private network. Do you deploy on real networks?",
    "sent": "2017-12-15T15:16:36.961Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e75d03838b2f2afb71a1",
    "text": "Yep",
    "html": "Yep",
    "sent": "2017-12-15T15:16:45.961Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e76003838b2f2afb71bc",
    "text": "Darn",
    "html": "Darn",
    "sent": "2017-12-15T15:16:48.488Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e7761a4e6c822312502d",
    "text": "maybe try to deploy to a testnet",
    "html": "maybe try to deploy to a testnet",
    "sent": "2017-12-15T15:17:10.618Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e77f1a4e6c8223125072",
    "text": "That's a testnet!",
    "html": "That&#39;s a testnet!",
    "sent": "2017-12-15T15:17:19.800Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e791a2be466828a66da7",
    "text": "a public one",
    "html": "a public one",
    "sent": "2017-12-15T15:17:37.722Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e797c65707ba2b575fe5",
    "text": "like rinkeby",
    "html": "like rinkeby",
    "sent": "2017-12-15T15:17:43.503Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e79fc65707ba2b576038",
    "text": "`geth --rpc --rpcaddr 127.0.0.1 --rpcport 7545 --datadir whatever/data --networkid 1802 --etherbase 0x... js scripts/runDevNode.js`",
    "html": "<code>geth --rpc --rpcaddr 127.0.0.1 --rpcport 7545 --datadir whatever/data --networkid 1802 --etherbase 0x... js scripts/runDevNode.js</code>",
    "sent": "2017-12-15T15:17:51.674Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e7a31a4e6c822312515a",
    "text": "just to be sure",
    "html": "just to be sure",
    "sent": "2017-12-15T15:17:55.208Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e7b1540c78242dcb6753",
    "text": "yep I get it but I'm justthrowing ideas around",
    "html": "yep I get it but I&#39;m justthrowing ideas around",
    "sent": "2017-12-15T15:18:09.579Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e7b503838b2f2afb73ce",
    "text": "try Ropsten or Rinkeby",
    "html": "try Ropsten or Rinkeby",
    "sent": "2017-12-15T15:18:13.462Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 10,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e7cdba39a53f1a64e223",
    "text": "That's an idea, but I don't have any testnet ether, nor any synced client to them lol",
    "html": "That&#39;s an idea, but I don&#39;t have any testnet ether, nor any synced client to them lol",
    "sent": "2017-12-15T15:18:37.061Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e7d6ba39a53f1a64e268",
    "text": "use INFURA",
    "html": "use INFURA",
    "sent": "2017-12-15T15:18:46.927Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e7dc0163b028103eb9d7",
    "text": "and I can send you both",
    "html": "and I can send you both",
    "sent": "2017-12-15T15:18:52.347Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e7e11a4e6c8223125377",
    "text": "Ropsten and Rinkeby eth",
    "html": "Ropsten and Rinkeby eth",
    "sent": "2017-12-15T15:18:57.826Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e7e71a4e6c8223125395",
    "text": "Awesome",
    "html": "Awesome",
    "sent": "2017-12-15T15:19:03.989Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e7ecc65707ba2b576299",
    "text": "Infura? Never used that.",
    "html": "Infura? Never used that.",
    "sent": "2017-12-15T15:19:08.902Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e7f2a2be466828a67012",
    "text": "http://truffleframework.com/tutorials/using-infura-custom-provider",
    "html": "<a href=\"http://truffleframework.com/tutorials/using-infura-custom-provider\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://truffleframework.com/tutorials/using-infura-custom-provider</a>",
    "sent": "2017-12-15T15:19:14.773Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [
      {
        "url": "http://truffleframework.com/tutorials/using-infura-custom-provider"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e7f45355812e57dc4c59",
    "text": "It's a public node to Eth right?",
    "html": "It&#39;s a public node to Eth right?",
    "sent": "2017-12-15T15:19:16.576Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e7f80163b028103ebb87",
    "text": "Cool",
    "html": "Cool",
    "sent": "2017-12-15T15:19:20.283Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e806ffa3e379193fab57",
    "text": "yep, it's infrastructure supported by ConsenSys",
    "html": "yep, it&#39;s infrastructure supported by ConsenSys",
    "sent": "2017-12-15T15:19:34.050Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33e80ca2be466828a6707b",
    "text": "connected to all the networks",
    "html": "connected to all the networks",
    "sent": "2017-12-15T15:19:40.405Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a20b73d3c69dd49170c23de",
    "text": "specifically this: 'uint256 tokens = weiAmount.mul(rate);'",
    "html": "specifically this: &#39;uint256 tokens = weiAmount.mul(rate);&#39;",
    "sent": "2017-12-01T01:58:21.199Z",
    "fromUser": {
      "id": "56fcc3de187bb6f0eadd21cc",
      "username": "Cosmin-Parvulescu",
      "displayName": "Cosmin Pârvulescu",
      "url": "/Cosmin-Parvulescu",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Cosmin-Parvulescu",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/635806?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/635806?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2138c7cc1d527f6bd9f820",
    "text": "If `rate` is 1 token for 1 ether, then it calculates 1ether*1 which results in 10^18 tokens. Since tokens have 18 decimal places, then 10^18 tokens in contract mean 1 token outside the contract, in JS world.\n\nweiAmount = 1 ether means 10^18 wei\nso whatever is the wei amount, if we multiply it by the number of tokens that are received in 1 ether, which is denoted by `rate` then we get the number of tokens",
    "html": "<p>If <code>rate</code> is 1 token for 1 ether, then it calculates 1ether*1 which results in 10^18 tokens. Since tokens have 18 decimal places, then 10^18 tokens in contract mean 1 token outside the contract, in JS world.</p><p>weiAmount = 1 ether means 10^18 wei<br>so whatever is the wei amount, if we multiply it by the number of tokens that are received in 1 ether, which is denoted by <code>rate</code> then we get the number of tokens</p>",
    "sent": "2017-12-01T11:11:03.018Z",
    "fromUser": {
      "id": "59118519d73408ce4f5e1a79",
      "username": "AyushyaChitransh",
      "displayName": "Ayushya Chitransh",
      "url": "/AyushyaChitransh",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/AyushyaChitransh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=128",
      "v": 37,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a21f6e6540c78242d732fde",
    "text": "Hey everyone, just a heads up. I'm keynoting an Ethereum/Solidity hackathon with about ~100 attendees. I'm going to point them to this channel as a resource for help if they get stuck. Just wanted to thank everyone for being so helpful when/if they show up. Event details here: https://www.facebook.com/events/1489746614405800/",
    "html": "Hey everyone, just a heads up. I&#39;m keynoting an Ethereum/Solidity hackathon with about ~100 attendees. I&#39;m going to point them to this channel as a resource for help if they get stuck. Just wanted to thank everyone for being so helpful when/if they show up. Event details here: <a href=\"https://www.facebook.com/events/1489746614405800/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.facebook.com/events/1489746614405800/</a>",
    "sent": "2017-12-02T00:42:14.305Z",
    "fromUser": {
      "id": "559d959c15522ed4b3e3ac82",
      "username": "dpgailey",
      "displayName": "Dan Gailey",
      "url": "/dpgailey",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dpgailey",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/249497?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/249497?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [
      {
        "url": "https://www.facebook.com/events/1489746614405800/"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a21ff0b3c69dd491712a128",
    "text": "@dpgailey we'll see what we can do, thanks for spreading the good word. \nOur forte is security and best practices\nAlso useful will be: https://gitter.im/ethereum/solidity, https://gitter.im/ConsenSys/truffle, https://gitter.im/ethereum/remix",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"dpgailey\" class=\"mention\">@dpgailey</span> we&#39;ll see what we can do, thanks for spreading the good word.<br>Our forte is security and best practices<br>Also useful will be: <a href=\"https://gitter.im/ethereum/solidity\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gitter.im/ethereum/solidity</a>, <a href=\"https://gitter.im/ConsenSys/truffle\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gitter.im/ConsenSys/truffle</a>, <a href=\"https://gitter.im/ethereum/remix\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gitter.im/ethereum/remix</a>",
    "sent": "2017-12-02T01:16:59.734Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [
      {
        "url": "https://gitter.im/ethereum/solidity"
      },
      {
        "url": "https://gitter.im/ConsenSys/truffle"
      },
      {
        "url": "https://gitter.im/ethereum/remix"
      }
    ],
    "mentions": [
      {
        "screenName": "dpgailey",
        "userId": "559d959c15522ed4b3e3ac82",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a22052a3a80a84b5ba7eb02",
    "text": "Thanks for the tips! Hit up those channels as well. ",
    "html": "Thanks for the tips! Hit up those channels as well. ",
    "sent": "2017-12-02T01:43:06.497Z",
    "fromUser": {
      "id": "559d959c15522ed4b3e3ac82",
      "username": "dpgailey",
      "displayName": "Dan Gailey",
      "url": "/dpgailey",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dpgailey",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/249497?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/249497?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a273fe5ba39a53f1a2578dd",
    "text": "Hello, I was working through the `pet-shop-tutorial` and I noticed that the tests in the `TestAdoption.sol` are dependent on each other. I see the same pattern in `Writing tests in Solidity`. Is there a reason to not make them independent of one another?\n\nMy naive instinct is to create a new instance of the contract under test with `beforeEach`, though I don't know what side effects that has.",
    "html": "<p>Hello, I was working through the <code>pet-shop-tutorial</code> and I noticed that the tests in the <code>TestAdoption.sol</code> are dependent on each other. I see the same pattern in <code>Writing tests in Solidity</code>. Is there a reason to not make them independent of one another?</p><p>My naive instinct is to create a new instance of the contract under test with <code>beforeEach</code>, though I don&#39;t know what side effects that has.</p>",
    "sent": "2017-12-06T00:55:01.808Z",
    "fromUser": {
      "id": "587416ebd73408ce4f4263a6",
      "username": "louiedp3",
      "displayName": "Louie Perez",
      "url": "/louiedp3",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/louiedp3",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4204461?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4204461?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a274752ffa3e37919ff661b",
    "text": "I don't think there is any good reason not to make them independent ",
    "html": "I don&#39;t think there is any good reason not to make them independent ",
    "sent": "2017-12-06T01:26:42.913Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a27d8073ae2aa6b3f925787",
    "text": "Hi guys, I need to ask if its a good practice to transfer (abc) token from truffle directly or should i transfer (abc) tokens from my platform contract to another address, and call that contract method from truffle ?",
    "html": "Hi guys, I need to ask if its a good practice to transfer (abc) token from truffle directly or should i transfer (abc) tokens from my platform contract to another address, and call that contract method from truffle ?",
    "sent": "2017-12-06T11:44:07.693Z",
    "fromUser": {
      "id": "5857ce7dd73408ce4f3e04d0",
      "username": "mujtaba-ahmad",
      "displayName": "mujtaba-ahmad",
      "url": "/mujtaba-ahmad",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/mujtaba-ahmad",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3063238?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3063238?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a27d81ac65707ba2b1b219a",
    "text": "Just to make sure i do it right",
    "html": "Just to make sure i do it right",
    "sent": "2017-12-06T11:44:26.825Z",
    "fromUser": {
      "id": "5857ce7dd73408ce4f3e04d0",
      "username": "mujtaba-ahmad",
      "displayName": "mujtaba-ahmad",
      "url": "/mujtaba-ahmad",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/mujtaba-ahmad",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3063238?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3063238?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a27d8e3ba39a53f1a282e05",
    "text": "^ discussion for that moved to #truffle",
    "html": "^ discussion for that moved to #truffle",
    "sent": "2017-12-06T11:47:47.459Z",
    "fromUser": {
      "id": "54830a6edb8155e6700dc42f",
      "username": "shrugs",
      "displayName": "Matt Condon",
      "url": "/shrugs",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/shrugs",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1535001?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1535001?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a296dfaa2be46682871dfec",
    "text": "Hello Guys, I am new to solidity. While trying to migrate my first contract I got following error message.",
    "html": "Hello Guys, I am new to solidity. While trying to migrate my first contract I got following error message.",
    "sent": "2017-12-07T16:36:10.197Z",
    "fromUser": {
      "id": "5a296becd73408ce4f823d44",
      "username": "animesharya",
      "displayName": "animesharya",
      "url": "/animesharya",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/animesharya",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/34034641?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/34034641?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a296e1fba39a53f1a30edaf",
    "text": "Error: No network specified. Cannot determine current network.\nat Object.detect (C:\\Users\\Animesh\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\cli.bundled.js:43157:23)\nat C:\\Users\\Animesh\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\cli.bundled.js:200497:19\nat finished (C:\\Users\\Animesh\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\cli.bundled.js:43085:9)\nat C:\\Users\\Animesh\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\cli.bundled.js:198408:14\nat C:\\Users\\Animesh\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\cli.bundled.js:68162:7\nat C:\\Users\\Animesh\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\cli.bundled.js:163793:9\nat C:\\Users\\Animesh\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\cli.bundled.js:160353:16\nat replenish (C:\\Users\\Animesh\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\cli.bundled.js:160873:25)\nat iterateeCallback (C:\\Users\\Animesh\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\cli.bundled.js:160863:17)\nat C:\\Users\\Animesh\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\cli.bundled.js:160838:16",
    "html": "Error: No network specified. Cannot determine current network.<br>at Object.detect (C:\\Users\\Animesh\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\cli.bundled.js:43157:23)<br>at C:\\Users\\Animesh\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\cli.bundled.js:200497:19<br>at finished (C:\\Users\\Animesh\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\cli.bundled.js:43085:9)<br>at C:\\Users\\Animesh\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\cli.bundled.js:198408:14<br>at C:\\Users\\Animesh\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\cli.bundled.js:68162:7<br>at C:\\Users\\Animesh\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\cli.bundled.js:163793:9<br>at C:\\Users\\Animesh\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\cli.bundled.js:160353:16<br>at replenish (C:\\Users\\Animesh\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\cli.bundled.js:160873:25)<br>at iterateeCallback (C:\\Users\\Animesh\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\cli.bundled.js:160863:17)<br>at C:\\Users\\Animesh\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\cli.bundled.js:160838:16",
    "sent": "2017-12-07T16:36:47.390Z",
    "fromUser": {
      "id": "5a296becd73408ce4f823d44",
      "username": "animesharya",
      "displayName": "animesharya",
      "url": "/animesharya",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/animesharya",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/34034641?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/34034641?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a296e4c540c78242d976137",
    "text": "1. better question for here: https://gitter.im/ConsenSys/truffle\n2. see here: http://truffleframework.com/docs/advanced/configuration",
    "html": "<ol>\n<li>better question for here: <a href=\"https://gitter.im/ConsenSys/truffle\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gitter.im/ConsenSys/truffle</a></li>\n<li>see here: <a href=\"http://truffleframework.com/docs/advanced/configuration\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://truffleframework.com/docs/advanced/configuration</a></li>\n</ol>\n",
    "sent": "2017-12-07T16:37:32.880Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [
      {
        "url": "https://gitter.im/ConsenSys/truffle"
      },
      {
        "url": "http://truffleframework.com/docs/advanced/configuration"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2a4108ba39a53f1a350dab",
    "text": "@animesharya  can you check your truffle.js ? It should have something like this: \n\nrequire('babel-register')\nmodule.exports = {\n  networks: {\n    development: {\n      host: 'localhost',\n      port: 8080,\n      network_id: 'xxx' // your network id \n    }\n  }\n}\n",
    "html": "<p><span data-link-type=\"mention\" data-screen-name=\"animesharya\" class=\"mention\">@animesharya</span>  can you check your truffle.js ? It should have something like this: </p><p>require(&#39;babel-register&#39;)<br>module.exports = {<br>  networks: {<br>    development: {<br>      host: &#39;localhost&#39;,<br>      port: 8080,<br>      network_id: &#39;xxx&#39; // your network id<br>    }<br>  }<br>}</p>",
    "sent": "2017-12-08T07:36:40.115Z",
    "fromUser": {
      "id": "59e83618d73408ce4f7aae77",
      "username": "shashiks",
      "displayName": "Shashikant Soni",
      "url": "/shashiks",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/shashiks",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2485430?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2485430?v=4&s=128",
      "v": 4,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [
      {
        "screenName": "animesharya",
        "userId": "5a296becd73408ce4f823d44",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2a413f3ae2aa6b3f9f1d24",
    "text": "the values of host/port and network id should be what you are trying to use. I am connecting to a local chain here running on 8080 with some random network id",
    "html": "the values of host/port and network id should be what you are trying to use. I am connecting to a local chain here running on 8080 with some random network id",
    "sent": "2017-12-08T07:37:35.138Z",
    "fromUser": {
      "id": "59e83618d73408ce4f7aae77",
      "username": "shashiks",
      "displayName": "Shashikant Soni",
      "url": "/shashiks",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/shashiks",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2485430?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2485430?v=4&s=128",
      "v": 4,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c7703232e79134d2d46fa",
    "text": "Good evening! I'm new to the ConsenSys gitter, so greetings to everyone.",
    "html": "Good evening! I&#39;m new to the ConsenSys gitter, so greetings to everyone.",
    "sent": "2017-12-09T23:51:31.838Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c77303a80a84b5bda43a0",
    "text": "Hi Pierre, welcome.",
    "html": "Hi Pierre, welcome.",
    "sent": "2017-12-09T23:52:16.446Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c773affa3e3791919b0b9",
    "text": "I've been looking for this for a while without really finding any conclusive solution. How would you assert that a contract is either `trow()`'ing or `revert()`'ing from within a js-based test?",
    "html": "I&#39;ve been looking for this for a while without really finding any conclusive solution. How would you assert that a contract is either <code>trow()</code>&#39;ing or <code>revert()</code>&#39;ing from within a js-based test?",
    "sent": "2017-12-09T23:52:26.816Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c7742a2be466828808237",
    "text": "@maurelian Hey! Thanks :)",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> Hey! Thanks :)",
    "sent": "2017-12-09T23:52:34.414Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c776c3ae2aa6b3fa99550",
    "text": "ahh, good question. let me find an example",
    "html": "ahh, good question. let me find an example",
    "sent": "2017-12-09T23:53:16.345Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c778687680e6230f12e5c",
    "text": "Thank you!",
    "html": "Thank you!",
    "sent": "2017-12-09T23:53:42.573Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c77be3a80a84b5bda4622",
    "text": "https://github.com/ConsenSys/Tokens/blob/master/test/utils.js#L6",
    "html": "<a href=\"https://github.com/ConsenSys/Tokens/blob/master/test/utils.js#L6\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/ConsenSys/Tokens/blob/master/test/utils.js#L6</a>",
    "sent": "2017-12-09T23:54:38.323Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [
      {
        "url": "https://github.com/ConsenSys/Tokens/blob/master/test/utils.js#L6"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c77cf3ae2aa6b3fa99685",
    "text": "although, now that I'm looking at it, I don't see how that is catching a revert....",
    "html": "although, now that I&#39;m looking at it, I don&#39;t see how that is catching a revert....",
    "sent": "2017-12-09T23:54:55.465Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c77e9ffa3e3791919b3a1",
    "text": "Also, I don't know if anyone is interested: I've written a couple of bash scripts for our projects that allow to start a geth testnet that is compatible with Truffle. It took us a while, because it wouldn't work accross IPC. Then I've also wrote stuff to be able to start Mist over on that geth based testnet, allowing to import `JSON.stringify(YourContract.abi)` sort of fancy :)",
    "html": "Also, I don&#39;t know if anyone is interested: I&#39;ve written a couple of bash scripts for our projects that allow to start a geth testnet that is compatible with Truffle. It took us a while, because it wouldn&#39;t work accross IPC. Then I&#39;ve also wrote stuff to be able to start Mist over on that geth based testnet, allowing to import <code>JSON.stringify(YourContract.abi)</code> sort of fancy :)",
    "sent": "2017-12-09T23:55:21.251Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c77f7ffa3e3791919b3c6",
    "text": "but it could at least be fairly easily updated by including whatever error message your client gives on revert.",
    "html": "but it could at least be fairly easily updated by including whatever error message your client gives on revert.",
    "sent": "2017-12-09T23:55:35.157Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c780a3a80a84b5bda46db",
    "text": "Very interesting, thanks for sharing",
    "html": "Very interesting, thanks for sharing",
    "sent": "2017-12-09T23:55:54.073Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c78103a80a84b5bda46e9",
    "text": "I'll try it right away.",
    "html": "I&#39;ll try it right away.",
    "sent": "2017-12-09T23:56:00.673Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c7816cc1d527f6b1130f7",
    "text": "the geth testnet part would be interesting",
    "html": "the geth testnet part would be interesting",
    "sent": "2017-12-09T23:56:06.748Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c785e540c78242da5de21",
    "text": "Ok. I'll create a dummy repo. I had to export a bunch of private keys from the ganache-cli based seeds. It's not included as a \"reproducible\" part but isn't too hard to do by hand.",
    "html": "Ok. I&#39;ll create a dummy repo. I had to export a bunch of private keys from the ganache-cli based seeds. It&#39;s not included as a &quot;reproducible&quot; part but isn&#39;t too hard to do by hand.",
    "sent": "2017-12-09T23:57:18.713Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c7870ffa3e3791919b567",
    "text": "Let me slap everything in a github repo and I'll link you.",
    "html": "Let me slap everything in a github repo and I&#39;ll link you.",
    "sent": "2017-12-09T23:57:36.967Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c787a540c78242da5de88",
    "text": ":thumbsup: ",
    "html": ":thumbsup: ",
    "sent": "2017-12-09T23:57:46.546Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c7c85ba39a53f1a3f8521",
    "text": "@maurelian https://github.com/hickscorp/geth-local-env",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> <a href=\"https://github.com/hickscorp/geth-local-env\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/hickscorp/geth-local-env</a>",
    "sent": "2017-12-10T00:15:01.458Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [
      {
        "url": "https://github.com/hickscorp/geth-local-env"
      }
    ],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c7ef5c65707ba2b324ce0",
    "text": "I exported part of our stuff in that repo and quickly tested it. ",
    "html": "I exported part of our stuff in that repo and quickly tested it. ",
    "sent": "2017-12-10T00:25:25.559Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c81973a80a84b5bda6ba4",
    "text": "@maurelian I really didn't realize that the VM errors were that easy to catch. I've refactored that code of yours a little to something more concise:\n```\nmodule.exports = {\n  expectThrow: async promise => {\n    try {\n      await promise\n      assert.fail('expected to throw, did not');\n    } catch (error) {\n      assert.match(error.message, /invalid JUMP|invalid opcode|out of gas/);\n    }\n  }\n}\n```",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> I really didn&#39;t realize that the VM errors were that easy to catch. I&#39;ve refactored that code of yours a little to something more concise:<pre><code><span class=\"keyword\">module</span>.exports = {\n  expectThrow: async promise =&gt; {\n    <span class=\"keyword\">try</span> {\n      await promise\n      <span class=\"keyword\">assert</span>.fail('expected <span class=\"keyword\">to</span> throw, did not');\n    } catch (error) {\n      <span class=\"keyword\">assert</span>.<span class=\"keyword\">match</span>(error.message, /invalid JUMP|invalid opcode|out <span class=\"keyword\">of</span> gas/);\n    }\n  }\n}</code></pre>",
    "sent": "2017-12-10T00:36:39.926Z",
    "editedAt": "2017-12-10T00:37:03.684Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 3
  },
  {
    "id": "5a2c81c8540c78242da602db",
    "text": "I think `revert()` will be covered, because it throws an `invalid opcode` exception.",
    "html": "I think <code>revert()</code> will be covered, because it throws an <code>invalid opcode</code> exception.",
    "sent": "2017-12-10T00:37:28.089Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c8d8c232e79134d2d9c11",
    "text": "revert should not be an invalid opcode after byzantium.",
    "html": "revert should not be an invalid opcode after byzantium.",
    "sent": "2017-12-10T01:27:40.864Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c8e0acc1d527f6b118732",
    "text": "Ok thank you",
    "html": "Ok thank you",
    "sent": "2017-12-10T01:29:46.365Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c8e41cc1d527f6b1187dd",
    "text": "but... in other conversations, it seems like testrpc may still give that error. IDK now.",
    "html": "but... in other conversations, it seems like testrpc may still give that error. IDK now.",
    "sent": "2017-12-10T01:30:41.758Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c9046c65707ba2b328b0b",
    "text": "Hey guys, new here as well, funny this came up. I just hit this issue today. It does seem to be an issue with testrpc. There is an issue out there. I will dig it up. ",
    "html": "Hey guys, new here as well, funny this came up. I just hit this issue today. It does seem to be an issue with testrpc. There is an issue out there. I will dig it up. ",
    "sent": "2017-12-10T01:39:18.693Z",
    "fromUser": {
      "id": "56f80eff85d51f252abb13ab",
      "username": "nickgs",
      "displayName": "Nick Selvaggio",
      "url": "/nickgs",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/nickgs",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/67599?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/67599?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c9060ffa3e379191a07a1",
    "text": "^^",
    "html": "^^",
    "sent": "2017-12-10T01:39:44.413Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c906ba2be46682880e248",
    "text": "Here it is: https://github.com/trufflesuite/ganache-cli/issues/435",
    "html": "Here it is: <span data-link-type=\"issue\" data-issue=\"435\" data-issue-repo=\"trufflesuite/ganache-cli\" class=\"issue\">trufflesuite/ganache-cli#435</span>",
    "sent": "2017-12-10T01:39:55.715Z",
    "fromUser": {
      "id": "56f80eff85d51f252abb13ab",
      "username": "nickgs",
      "displayName": "Nick Selvaggio",
      "url": "/nickgs",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/nickgs",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/67599?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/67599?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [
      {
        "repo": "trufflesuite/ganache-cli",
        "number": "435"
      }
    ],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c9822a2be46682880fbcd",
    "text": "So, I'm pretty sure the error `invalid opcode` is coming from ethereumjs-vm",
    "html": "So, I&#39;m pretty sure the error <code>invalid opcode</code> is coming from ethereumjs-vm",
    "sent": "2017-12-10T02:12:50.455Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c9860ffa3e379191a1f97",
    "text": "and it seems that at some that will be updated so that a `revert` no longer causes an error at all. ",
    "html": "and it seems that at some that will be updated so that a <code>revert</code> no longer causes an error at all. ",
    "sent": "2017-12-10T02:13:52.431Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c9873cc1d527f6b11aacd",
    "text": "Interesting good to know. Thanks",
    "html": "Interesting good to know. Thanks",
    "sent": "2017-12-10T02:14:11.722Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c98a0a2be46682880fdbe",
    "text": "When that happens, (as well as now actually), the right way to detect a revert will be by checking the transaction receipts `status` field",
    "html": "When that happens, (as well as now actually), the right way to detect a revert will be by checking the transaction receipts <code>status</code> field",
    "sent": "2017-12-10T02:14:56.861Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c98a9232e79134d2dbd52",
    "text": "which is described here in a bit more detail: https://ethereum.stackexchange.com/questions/28077/how-do-i-detect-a-failed-transaction-after-the-byzantium-fork-as-the-revert-opco?noredirect=1&lq=1",
    "html": "which is described here in a bit more detail: <a href=\"https://ethereum.stackexchange.com/questions/28077/how-do-i-detect-a-failed-transaction-after-the-byzantium-fork-as-the-revert-opco?noredirect=1&amp;lq=1\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://ethereum.stackexchange.com/questions/28077/how-do-i-detect-a-failed-transaction-after-the-byzantium-fork-as-the-revert-opco?noredirect=1&amp;lq=1</a>",
    "sent": "2017-12-10T02:15:05.170Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [
      {
        "url": "https://ethereum.stackexchange.com/questions/28077/how-do-i-detect-a-failed-transaction-after-the-byzantium-fork-as-the-revert-opco?noredirect=1&amp;lq=1"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c9a48cc1d527f6b11b0b0",
    "text": "I think when it happens in a constructor, there's also something else to expect ;)",
    "html": "I think when it happens in a constructor, there&#39;s also something else to expect ;)",
    "sent": "2017-12-10T02:22:00.246Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2c9a55ffa3e379191a256c",
    "text": "Hint: `The contract code couldn't be stored, please check your gas amount.`",
    "html": "Hint: <code>The contract code couldn&#39;t be stored, please check your gas amount.</code>",
    "sent": "2017-12-10T02:22:13.512Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2cf573540c78242da787b3",
    "text": "I have a question about function implementation\nOn this site: `https://learnxinyminutes.com/docs/solidity/`\nWhy do functions that write to state variables have a `return` statement? \nsee: `function deposit() public returns (uint)`\nIf the writes are asynchronous (waiting to be written to the blockchain) what does a `return` statement even mean in this context.",
    "html": "I have a question about function implementation<br>On this site: <code>https://learnxinyminutes.com/docs/solidity/</code><br>Why do functions that write to state variables have a <code>return</code> statement?<br>see: <code>function deposit() public returns (uint)</code><br>If the writes are asynchronous (waiting to be written to the blockchain) what does a <code>return</code> statement even mean in this context.",
    "sent": "2017-12-10T08:50:59.136Z",
    "fromUser": {
      "id": "559d959c15522ed4b3e3ac82",
      "username": "dpgailey",
      "displayName": "Dan Gailey",
      "url": "/dpgailey",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dpgailey",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/249497?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/249497?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2cf58b0163b028101ab75f",
    "text": "```\nconst fs = require(\"fs\");\nconst Web3 = require(\"web3\");\nconst contract = require(\"truffle-contract\");\nconst provider = new Web3.providers.HttpProvider(\"http://localhost:8545\");\nvar abi = JSON.parse(fs.readFileSync('./build/contracts/mycontract.json', 'utf8'));\nvar MyContract = contract({abi: abi});\nMyContract.setProvider(provider);\nMyContract.deployed().then(function(instance) {\n    return instance.totalSupply.call();\n}).then(function(totalSupply) {\n    console.log(totalSupply)\n});\n```\nUnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): Error: Contract has not been deployed to detected network (network/artifact mismatch)\nI deployed my contract in the TestRPC. Somebody know how to resolve this issue?\n\n",
    "html": "<pre><code><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">\"fs\"</span>);\n<span class=\"keyword\">const</span> Web3 = <span class=\"built_in\">require</span>(<span class=\"string\">\"web3\"</span>);\n<span class=\"keyword\">const</span> contract = <span class=\"built_in\">require</span>(<span class=\"string\">\"truffle-contract\"</span>);\n<span class=\"keyword\">const</span> provider = <span class=\"keyword\">new</span> Web3.providers.HttpProvider(<span class=\"string\">\"http://localhost:8545\"</span>);\n<span class=\"keyword\">var</span> abi = <span class=\"built_in\">JSON</span>.parse(fs.readFileSync(<span class=\"string\">'./build/contracts/mycontract.json'</span>, <span class=\"string\">'utf8'</span>));\n<span class=\"keyword\">var</span> MyContract = contract({abi: abi});\nMyContract.setProvider(provider);\nMyContract.deployed().then(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(instance)</span> </span>{\n    <span class=\"keyword\">return</span> instance.totalSupply.call();\n}).then(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(totalSupply)</span> </span>{\n    <span class=\"built_in\">console</span>.log(totalSupply)\n});</code></pre>UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): Error: Contract has not been deployed to detected network (network/artifact mismatch)<br>I deployed my contract in the TestRPC. Somebody know how to resolve this issue?",
    "sent": "2017-12-10T08:51:23.569Z",
    "fromUser": {
      "id": "59910762d73408ce4f714115",
      "username": "jonghokim",
      "displayName": "jonghokim",
      "url": "/jonghokim",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/jonghokim",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2393354?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2393354?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2d4d78232e79134d306c8e",
    "text": "Is there a way **inside JS tests** to get the return code of a `sendTransaction` hash? I'm reading the ECR20 token specification, and some function that **write** to the blockchain have to either return `true` or `false`. If `sendTransaction` - which is the only way to write - doesn't return that boolean value, how is one supposed to be able to test it? Is the boolean return purpose only to be able to simulate transactions using `call` that doesn't write to the blockchain?\n\nOverall, I'm reading about those conventions, but I'm having a hard time understanding the differences between them. Would someone maybe have something sumarizing:\n\nFor a `constant` or `pure` function named `Contract.foo`, what are the differences between calling:\n- `Contract.foo()`\n- `Contract.foo.call()`\n\nFor a non-`constant` function named `Contract.bar`, what are the differences between calling:\n- `Contract.bar()`\n- `Contract.bar.call()`\n- `Contract.bar.sendTransaction()`\n\nWhen calling `Contract.new()`, what is actually being done? A `call` to the constructor to only simulate the operation? A `sendTransaction` to the constructor? Something else?\n\nThanks!",
    "html": "<p>Is there a way <strong>inside JS tests</strong> to get the return code of a <code>sendTransaction</code> hash? I&#39;m reading the ECR20 token specification, and some function that <strong>write</strong> to the blockchain have to either return <code>true</code> or <code>false</code>. If <code>sendTransaction</code> - which is the only way to write - doesn&#39;t return that boolean value, how is one supposed to be able to test it? Is the boolean return purpose only to be able to simulate transactions using <code>call</code> that doesn&#39;t write to the blockchain?</p><p>Overall, I&#39;m reading about those conventions, but I&#39;m having a hard time understanding the differences between them. Would someone maybe have something sumarizing:</p><p>For a <code>constant</code> or <code>pure</code> function named <code>Contract.foo</code>, what are the differences between calling:</p><ul>\n<li><code>Contract.foo()</code></li>\n<li><code>Contract.foo.call()</code></li>\n</ul>\n<p>For a non-<code>constant</code> function named <code>Contract.bar</code>, what are the differences between calling:</p><ul>\n<li><code>Contract.bar()</code></li>\n<li><code>Contract.bar.call()</code></li>\n<li><code>Contract.bar.sendTransaction()</code></li>\n</ul>\n<p>When calling <code>Contract.new()</code>, what is actually being done? A <code>call</code> to the constructor to only simulate the operation? A <code>sendTransaction</code> to the constructor? Something else?</p><p>Thanks!</p>",
    "sent": "2017-12-10T15:06:32.647Z",
    "editedAt": "2017-12-10T15:14:14.770Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 6
  },
  {
    "id": "5a2d52a50163b028101c3e7d",
    "text": "@dpgailey it has nothing to do with writing to state variables. The `returns` keyword specifies the type which a function can return, the `return` keywords specifies the value to return. The full function is this:\n\n```\n function deposit() public returns (uint) {\n        balances[msg.sender] += msg.value;\n        // no \"this.\" or \"self.\" required with state variable\n        // all values set to data type's initial value by default\n\n        LogDepositMade(msg.sender, msg.value); // fire event\n\n        return balances[msg.sender];\n    }```",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"dpgailey\" class=\"mention\">@dpgailey</span> it has nothing to do with writing to state variables. The <code>returns</code> keyword specifies the type which a function can return, the <code>return</code> keywords specifies the value to return. The full function is this:<pre><code> <span class=\"function\">function <span class=\"title\">deposit</span><span class=\"params\">()</span> <span class=\"keyword\">public</span> <span class=\"title\">returns</span> <span class=\"params\">(<span class=\"keyword\">uint</span>)</span> </span>{\n        balances[msg.sender] += msg.<span class=\"keyword\">value</span>;\n        <span class=\"comment\">// no \"this.\" or \"self.\" required with state variable</span>\n        <span class=\"comment\">// all values set to data type's initial value by default</span>\n\n        LogDepositMade(msg.sender, msg.<span class=\"keyword\">value</span>); <span class=\"comment\">// fire event</span>\n\n        <span class=\"keyword\">return</span> balances[msg.sender];\n    }</code></pre>",
    "sent": "2017-12-10T15:28:37.583Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [
      {
        "screenName": "dpgailey",
        "userId": "559d959c15522ed4b3e3ac82",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2d52c6a2be46682883ce79",
    "text": "Hi @maurelian how are you today?",
    "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> how are you today?",
    "sent": "2017-12-10T15:29:10.226Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2d52ebcc1d527f6b146f0e",
    "text": "@jonghokim, the unhandled promise rejection is probably related to the contract failing to deploy. Better question for https://gitter.im/ConsenSys/truffle",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"jonghokim\" class=\"mention\">@jonghokim</span>, the unhandled promise rejection is probably related to the contract failing to deploy. Better question for <a href=\"https://gitter.im/ConsenSys/truffle\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gitter.im/ConsenSys/truffle</a>",
    "sent": "2017-12-10T15:29:47.396Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [
      {
        "url": "https://gitter.im/ConsenSys/truffle"
      }
    ],
    "mentions": [
      {
        "screenName": "jonghokim",
        "userId": "59910762d73408ce4f714115",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2d52f487680e6230f4797d",
    "text": "@hickscorp good you?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"hickscorp\" class=\"mention\">@hickscorp</span> good you?",
    "sent": "2017-12-10T15:29:56.382Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [
      {
        "screenName": "hickscorp",
        "userId": "55042d3c15522ed4b3dd40dd",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2d532f232e79134d308e58",
    "text": "@maurelian good thanks!\nRegarding the question I've asked earlier, I found a gist somewhere showing how to poll for a tx hash completion. I'm not sure whether or not I should include that in my JS tests, because even tho it will make them pass on geth, it will slow them down on ganache. What do you think? Gist is this one: https://gist.github.com/xavierlepretre/88682e871f4ad07be4534ae560692ee6\nWhat do you think? Would there be a way to make this function behave differently based on the `network` i'm running on?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> good thanks!<br>Regarding the question I&#39;ve asked earlier, I found a gist somewhere showing how to poll for a tx hash completion. I&#39;m not sure whether or not I should include that in my JS tests, because even tho it will make them pass on geth, it will slow them down on ganache. What do you think? Gist is this one: <a href=\"https://gist.github.com/xavierlepretre/88682e871f4ad07be4534ae560692ee6\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gist.github.com/xavierlepretre/88682e871f4ad07be4534ae560692ee6</a><br>What do you think? Would there be a way to make this function behave differently based on the <code>network</code> i&#39;m running on?",
    "sent": "2017-12-10T15:30:55.303Z",
    "editedAt": "2017-12-10T15:31:58.952Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [
      {
        "url": "https://gist.github.com/xavierlepretre/88682e871f4ad07be4534ae560692ee6"
      }
    ],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a2d535f232e79134d308f68",
    "text": "",
    "html": "",
    "sent": "2017-12-10T15:31:43.455Z",
    "editedAt": "2017-12-10T15:31:49.998Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a2d53e4232e79134d30909d",
    "text": "yes, in truffle there is `network` variable you can use ",
    "html": "yes, in truffle there is <code>network</code> variable you can use ",
    "sent": "2017-12-10T15:33:56.385Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2de4a0540c78242dab8bf2",
    "text": "@maurelian correct, but it doesn't make sense to put return statements in functions that require writing to the blockchain (state variable changes) when I'm testing, but someone mentioned that it makes sense for other contracts calling the function. It's because I'm assuming the contract calling this submits all the gas, and the writing of state happens simultaneously as the contract call is executing, so there is no additional wait to write a state variable change to the BC. ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> correct, but it doesn&#39;t make sense to put return statements in functions that require writing to the blockchain (state variable changes) when I&#39;m testing, but someone mentioned that it makes sense for other contracts calling the function. It&#39;s because I&#39;m assuming the contract calling this submits all the gas, and the writing of state happens simultaneously as the contract call is executing, so there is no additional wait to write a state variable change to the BC. ",
    "sent": "2017-12-11T01:51:28.381Z",
    "fromUser": {
      "id": "559d959c15522ed4b3e3ac82",
      "username": "dpgailey",
      "displayName": "Dan Gailey",
      "url": "/dpgailey",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dpgailey",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/249497?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/249497?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2df39f87680e6230f739fd",
    "text": "Sorry, @dpgailey what is it you're trying to optimize for at the moment?",
    "html": "Sorry, <span data-link-type=\"mention\" data-screen-name=\"dpgailey\" class=\"mention\">@dpgailey</span> what is it you&#39;re trying to optimize for at the moment?",
    "sent": "2017-12-11T02:55:27.934Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [
      {
        "screenName": "dpgailey",
        "userId": "559d959c15522ed4b3e3ac82",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2df40c3ae2aa6b3faf82e1",
    "text": "Sorry, just understanding why/when you would want to include a return statement in a function that requires writing/updating a state variable. ",
    "html": "Sorry, just understanding why/when you would want to include a return statement in a function that requires writing/updating a state variable. ",
    "sent": "2017-12-11T02:57:16.579Z",
    "fromUser": {
      "id": "559d959c15522ed4b3e3ac82",
      "username": "dpgailey",
      "displayName": "Dan Gailey",
      "url": "/dpgailey",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dpgailey",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/249497?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/249497?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2df42bc65707ba2b3827d0",
    "text": "it shouldn't require it.",
    "html": "it shouldn&#39;t require it.",
    "sent": "2017-12-11T02:57:47.848Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2df44fa2be466828868a6c",
    "text": "This is perfectly valid: \n\n```function simpleFunction() public returns(uint) {\n        return 1;\n\t}```",
    "html": "<p>This is perfectly valid: </p><p><code>function simpleFunction() public returns(uint) {\n        return 1;\n    }</code></p>",
    "sent": "2017-12-11T02:58:23.523Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2df4c787680e6230f73e34",
    "text": ":) yes I understand, but I think I'm not explaining myself well enough.",
    "html": ":) yes I understand, but I think I&#39;m not explaining myself well enough.",
    "sent": "2017-12-11T03:00:23.550Z",
    "fromUser": {
      "id": "559d959c15522ed4b3e3ac82",
      "username": "dpgailey",
      "displayName": "Dan Gailey",
      "url": "/dpgailey",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dpgailey",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/249497?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/249497?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2ed7a9ffa3e37919249b0f",
    "text": "Are there any good gitter groups to as basic questions as I'm learning solidity? I would love to have a group of folks who I can help with some of them and they can help me w/ others rather than here where I'd guess you all are more advanced.",
    "html": "Are there any good gitter groups to as basic questions as I&#39;m learning solidity? I would love to have a group of folks who I can help with some of them and they can help me w/ others rather than here where I&#39;d guess you all are more advanced.",
    "sent": "2017-12-11T19:08:25.945Z",
    "fromUser": {
      "id": "5a21e6ded73408ce4f814c94",
      "username": "NathanMaton",
      "displayName": "Nathan Maton",
      "url": "/NathanMaton",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/NathanMaton",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/437436?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/437436?v=4&s=128",
      "v": 2,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2ed878cc1d527f6b1c0854",
    "text": "@NathanMaton there's https://gitter.im/ethereum/solidity",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"NathanMaton\" class=\"mention\">@NathanMaton</span> there&#39;s <a href=\"https://gitter.im/ethereum/solidity\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gitter.im/ethereum/solidity</a>",
    "sent": "2017-12-11T19:11:52.396Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [
      {
        "url": "https://gitter.im/ethereum/solidity"
      }
    ],
    "mentions": [
      {
        "screenName": "NathanMaton",
        "userId": "5a21e6ded73408ce4f814c94",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2ed886ba39a53f1a4a45a6",
    "text": "also, I'm fairly open to answering random solidity questions",
    "html": "also, I&#39;m fairly open to answering random solidity questions",
    "sent": "2017-12-11T19:12:06.347Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2ed89bba39a53f1a4a461f",
    "text": "but please keep truffle and other JS stuff to other rooms. :)",
    "html": "but please keep truffle and other JS stuff to other rooms. :)",
    "sent": "2017-12-11T19:12:27.541Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2edaecffa3e3791924aefb",
    "text": "@maurelian thanks",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> thanks",
    "sent": "2017-12-11T19:22:20.797Z",
    "fromUser": {
      "id": "5a21e6ded73408ce4f814c94",
      "username": "NathanMaton",
      "displayName": "Nathan Maton",
      "url": "/NathanMaton",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/NathanMaton",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/437436?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/437436?v=4&s=128",
      "v": 2,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2edaf3c65707ba2b3cf5d6",
    "text": "will do",
    "html": "will do",
    "sent": "2017-12-11T19:22:27.226Z",
    "fromUser": {
      "id": "5a21e6ded73408ce4f814c94",
      "username": "NathanMaton",
      "displayName": "Nathan Maton",
      "url": "/NathanMaton",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/NathanMaton",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/437436?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/437436?v=4&s=128",
      "v": 2,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2edd46ffa3e3791924bb1b",
    "text": "Sure thing. I think we're starting  to develop a bit more of a peer community around here.  ie. Happy to see @hickscorp and @dpgailey asking interesting questions. So we can all help each other level up.",
    "html": "Sure thing. I think we&#39;re starting  to develop a bit more of a peer community around here.  ie. Happy to see <span data-link-type=\"mention\" data-screen-name=\"hickscorp\" class=\"mention\">@hickscorp</span> and <span data-link-type=\"mention\" data-screen-name=\"dpgailey\" class=\"mention\">@dpgailey</span> asking interesting questions. So we can all help each other level up.",
    "sent": "2017-12-11T19:32:22.966Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [
      {
        "screenName": "hickscorp",
        "userId": "55042d3c15522ed4b3dd40dd",
        "userIds": []
      },
      {
        "screenName": "dpgailey",
        "userId": "559d959c15522ed4b3e3ac82",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2f12a187680e6230fd5c14",
    "text": "Yep! @maurelian happy to join up. ",
    "html": "Yep! <span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> happy to join up. ",
    "sent": "2017-12-11T23:20:01.134Z",
    "fromUser": {
      "id": "559d959c15522ed4b3e3ac82",
      "username": "dpgailey",
      "displayName": "Dan Gailey",
      "url": "/dpgailey",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dpgailey",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/249497?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/249497?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a3057c987680e62300439c6",
    "text": "Hi there, I want to contribute to the project translating the docs to Spanish, I'm not sure what is the best way to do this. Just adding a big readme-es.md file or would be the best clone the repo and translate all the .md files? What do you think?",
    "html": "Hi there, I want to contribute to the project translating the docs to Spanish, I&#39;m not sure what is the best way to do this. Just adding a big readme-es.md file or would be the best clone the repo and translate all the .md files? What do you think?",
    "sent": "2017-12-12T22:27:21.787Z",
    "fromUser": {
      "id": "5579ea5915522ed4b3e1c922",
      "username": "Tmeister",
      "displayName": "Enrique Chavez",
      "url": "/Tmeister",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/Tmeister",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/210349?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/210349?v=4&s=128",
      "v": 14,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a307dfba2be466828944d45",
    "text": "wow, @Tmeister that would be amazing!",
    "html": "wow, <span data-link-type=\"mention\" data-screen-name=\"Tmeister\" class=\"mention\">@Tmeister</span> that would be amazing!",
    "sent": "2017-12-13T01:10:19.985Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [
      {
        "screenName": "Tmeister",
        "userId": "5579ea5915522ed4b3e1c922",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a307e36c65707ba2b458700",
    "text": "as you probably noticed, we also have a chinese version that's just in a readme... but I'd love to have it available in the documentation site. ",
    "html": "as you probably noticed, we also have a chinese version that&#39;s just in a readme... but I&#39;d love to have it available in the documentation site. ",
    "sent": "2017-12-13T01:11:18.764Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a307ffd540c78242db992d9",
    "text": "Oh, cool, found it the localization docs for our documentation framework: https://github.com/squidfunk/mkdocs-material/blob/39badcb543ac3ebf7264d5133c448aa4315a611e/docs/getting-started.md#language",
    "html": "Oh, cool, found it the localization docs for our documentation framework: <a href=\"https://github.com/squidfunk/mkdocs-material/blob/39badcb543ac3ebf7264d5133c448aa4315a611e/docs/getting-started.md#language\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/squidfunk/mkdocs-material/blob/39badcb543ac3ebf7264d5133c448aa4315a611e/docs/getting-started.md#language</a>",
    "sent": "2017-12-13T01:18:53.915Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [
      {
        "url": "https://github.com/squidfunk/mkdocs-material/blob/39badcb543ac3ebf7264d5133c448aa4315a611e/docs/getting-started.md#language"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a315845cc1d527f6b294aa3",
    "text": "@maurelian great, I was looking for the localization stuff on mkdocs, I’ll take a look to that link and start playing around.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> great, I was looking for the localization stuff on mkdocs, I’ll take a look to that link and start playing around.",
    "sent": "2017-12-13T16:41:41.236Z",
    "fromUser": {
      "id": "5579ea5915522ed4b3e1c922",
      "username": "Tmeister",
      "displayName": "Enrique Chavez",
      "url": "/Tmeister",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/Tmeister",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/210349?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/210349?v=4&s=128",
      "v": 14,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a315876cc1d527f6b294b80",
    "text": "yeah, I've found the theme specific for mkdocs-material to be very comprehensive, they're all I need.",
    "html": "yeah, I&#39;ve found the theme specific for mkdocs-material to be very comprehensive, they&#39;re all I need.",
    "sent": "2017-12-13T16:42:30.839Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a327d92c65707ba2b4ff76f",
    "text": "Hi there,, How to create a random number between 1 to 100 for a lottery app in solidity contract??",
    "html": "Hi there,, How to create a random number between 1 to 100 for a lottery app in solidity contract??",
    "sent": "2017-12-14T13:33:06.741Z",
    "fromUser": {
      "id": "5a327d03d73408ce4f834feb",
      "username": "Mani7TAM",
      "displayName": "Subramanian",
      "url": "/Mani7TAM",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Mani7TAM",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/16184494?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/16184494?v=4&s=128",
      "v": 2,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a327e4cc65707ba2b4ffc5e",
    "text": "I have tried using block hash...But heard that, block hash will not be secure..",
    "html": "I have tried using block hash...But heard that, block hash will not be secure..",
    "sent": "2017-12-14T13:36:12.591Z",
    "fromUser": {
      "id": "5a327d03d73408ce4f834feb",
      "username": "Mani7TAM",
      "displayName": "Subramanian",
      "url": "/Mani7TAM",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Mani7TAM",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/16184494?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/16184494?v=4&s=128",
      "v": 2,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a3287591a4e6c82230aeb89",
    "text": "@Mani7TAM randomness on the blockchain is a hard problem. ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"Mani7TAM\" class=\"mention\">@Mani7TAM</span> randomness on the blockchain is a hard problem. ",
    "sent": "2017-12-14T14:14:49.543Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [
      {
        "screenName": "Mani7TAM",
        "userId": "5a327d03d73408ce4f834feb",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a3287973ae2aa6b3fc7e1a6",
    "text": "I know people have been working on it, but not sure what the state of the art is. ",
    "html": "I know people have been working on it, but not sure what the state of the art is. ",
    "sent": "2017-12-14T14:15:51.727Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a3287ae3ae2aa6b3fc7e243",
    "text": "try searching for `ranDAO` that is an earlier project which provides some randomness.",
    "html": "try searching for <code>ranDAO</code> that is an earlier project which provides some randomness.",
    "sent": "2017-12-14T14:16:14.423Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33cb9c5355812e57db9f30",
    "text": "Hey - I'm wondering, using JS to write tests, `beforeAll` is undefined while `beforeEach` works fine. I don't want to have flags all over my tests (`beforeEach(() => { if (beforeAllDone) ... })`), is there a way to have a proper (nestable) `beforeAll` callback?",
    "html": "Hey - I&#39;m wondering, using JS to write tests, <code>beforeAll</code> is undefined while <code>beforeEach</code> works fine. I don&#39;t want to have flags all over my tests (<code>beforeEach(() =&gt; { if (beforeAllDone) ... })</code>), is there a way to have a proper (nestable) <code>beforeAll</code> callback?",
    "sent": "2017-12-15T13:18:20.975Z",
    "editedAt": "2017-12-15T13:19:46.308Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 5,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a33d626a2be466828a602a6",
    "text": "mapping (address => uint8) public whitelistedContributors;\nfunction authorizeKyc(address[] addrs) external onlyOwner returns (bool success) {\n    uint arrayLength = addrs.length;\n\n    for (uint x = 0; x < arrayLength; x++) {\n      whitelistedContributors[addrs[x]] = 1;\n   }\n    return true;\n}\ni am passing argumnets in authorizeKyc [\"0xEFd615D9281623d7E0Bc7c70252f5d3C01545080\"]\nbut i am getting error\ntransact to CrowdSale.authorizeKyc errored: Gas required exceeds limit: 3000000. An important gas estimation might also be the sign of a problem in the contract code. Please check loops and be sure you did not sent value to a non payable function (that's also the reason of strong gas estimation).\nany suggestions ?",
    "html": "<p>mapping (address =&gt; uint8) public whitelistedContributors;<br>function authorizeKyc(address[] addrs) external onlyOwner returns (bool success) {<br>    uint arrayLength = addrs.length;</p><pre><code><span class=\"keyword\">for</span> (<span class=\"keyword\">uint</span> x = <span class=\"number\">0</span>; x &lt; arrayLength; x++) {\n  whitelistedContributors[addrs[x]] = <span class=\"number\">1</span>;</code></pre><p>   }<br>    return true;<br>}<br>i am passing argumnets in authorizeKyc [&quot;0xEFd615D9281623d7E0Bc7c70252f5d3C01545080&quot;]<br>but i am getting error<br>transact to CrowdSale.authorizeKyc errored: Gas required exceeds limit: 3000000. An important gas estimation might also be the sign of a problem in the contract code. Please check loops and be sure you did not sent value to a non payable function (that&#39;s also the reason of strong gas estimation).<br>any suggestions ?</p>",
    "sent": "2017-12-15T14:03:18.082Z",
    "fromUser": {
      "id": "56a5fb8de610378809be1158",
      "username": "Preetam007",
      "displayName": "Preetam",
      "url": "/Preetam007",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Preetam007",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8400402?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8400402?v=4&s=128",
      "v": 44,
      "gv": "4"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33d6dea2be466828a608e1",
    "text": "How long is your array? Just passing in one address?",
    "html": "How long is your array? Just passing in one address?",
    "sent": "2017-12-15T14:06:22.582Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33d708ffa3e379193f3fd4",
    "text": "from where are you copying that error message?",
    "html": "from where are you copying that error message?",
    "sent": "2017-12-15T14:07:04.920Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33d748ba39a53f1a6481b3",
    "text": "also I'd define the mapping like this:\n`mapping (address => uint256) public whitelistedContributors;`",
    "html": "also I&#39;d define the mapping like this:<br><code>mapping (address =&gt; uint256) public whitelistedContributors;</code>",
    "sent": "2017-12-15T14:08:08.348Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33d76f1a4e6c822311eb11",
    "text": "no need to use `uint8` as that will only add two or three more instructions every time you're accessing those values and it will be stored in a 32 bytes slot all the same",
    "html": "no need to use <code>uint8</code> as that will only add two or three more instructions every time you&#39;re accessing those values and it will be stored in a 32 bytes slot all the same",
    "sent": "2017-12-15T14:08:47.968Z",
    "editedAt": "2017-12-15T14:08:57.920Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a33db88540c78242dcb1a99",
    "text": "but i will pass 10 + addresses ..so i need loop ..one address is for testing",
    "html": "but i will pass 10 + addresses ..so i need loop ..one address is for testing",
    "sent": "2017-12-15T14:26:16.047Z",
    "fromUser": {
      "id": "56a5fb8de610378809be1158",
      "username": "Preetam007",
      "displayName": "Preetam",
      "url": "/Preetam007",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Preetam007",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8400402?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8400402?v=4&s=128",
      "v": 44,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dbb2ba39a53f1a649b5b",
    "text": "> from where are you copying that error message?",
    "html": "<blockquote>\nfrom where are you copying that error message?</blockquote>\n",
    "sent": "2017-12-15T14:26:58.582Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dbb2a2be466828a62613",
    "text": "Is there any chance that the loop could be done outside of your contract, eg in your Dapp or backend?",
    "html": "Is there any chance that the loop could be done outside of your contract, eg in your Dapp or backend?",
    "sent": "2017-12-15T14:26:58.635Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dbd0c65707ba2b571a8d",
    "text": "@GNSPS i am using remix",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"GNSPS\" class=\"mention\">@GNSPS</span> i am using remix",
    "sent": "2017-12-15T14:27:28.059Z",
    "fromUser": {
      "id": "56a5fb8de610378809be1158",
      "username": "Preetam007",
      "displayName": "Preetam",
      "url": "/Preetam007",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Preetam007",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8400402?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8400402?v=4&s=128",
      "v": 44,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [
      {
        "screenName": "GNSPS",
        "userId": "54bd42addb8155e6700ed45e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dbd1ffa3e379193f60fe",
    "text": "It's a well known fact that loops should be avoided in smartcontracts.",
    "html": "It&#39;s a well known fact that loops should be avoided in smartcontracts.",
    "sent": "2017-12-15T14:27:29.794Z",
    "fromUser": {
      "id": "55042d3c15522ed4b3dd40dd",
      "username": "hickscorp",
      "displayName": "Pierre Martin",
      "url": "/hickscorp",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hickscorp",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/822933?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/822933?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dbed03838b2f2afb2b1f",
    "text": "ok, sometimes those error messages really non-descriptive",
    "html": "ok, sometimes those error messages really non-descriptive",
    "sent": "2017-12-15T14:27:57.909Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dbffba39a53f1a649cae",
    "text": "I'd tell you to first check all the configs like the provider is well set",
    "html": "I&#39;d tell you to first check all the configs like the provider is well set",
    "sent": "2017-12-15T14:28:15.892Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dc050163b028103e6c00",
    "text": "are you using the js vm?",
    "html": "are you using the js vm?",
    "sent": "2017-12-15T14:28:21.613Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dc1403838b2f2afb2bf0",
    "text": "injected web3",
    "html": "injected web3",
    "sent": "2017-12-15T14:28:36.680Z",
    "fromUser": {
      "id": "56a5fb8de610378809be1158",
      "username": "Preetam007",
      "displayName": "Preetam",
      "url": "/Preetam007",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Preetam007",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8400402?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8400402?v=4&s=128",
      "v": 44,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dc1d03838b2f2afb2c03",
    "text": "ganache-cli?",
    "html": "ganache-cli?",
    "sent": "2017-12-15T14:28:45.867Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a33dc2303838b2f2afb2c1d",
    "text": "or testrpc?",
    "html": "or testrpc?",
    "sent": "2017-12-15T14:28:51.292Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 3,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0ca301f257ad91099c92b4",
    "text": "@AyushyaChitransh the address which controls a contract? I would be interested to learn how.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"AyushyaChitransh\" class=\"mention\">@AyushyaChitransh</span> the address which controls a contract? I would be interested to learn how.",
    "sent": "2017-11-15T20:26:41.390Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [
      {
        "screenName": "AyushyaChitransh",
        "userId": "59118519d73408ce4f5e1a79",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0ca3cf614889d47585f534",
    "text": "Generally a contract is made ownable by making a sub contract inherit `ownable` contract. But the code of `ownable` contract can be made to be a part of the subcontract itself, so that the sub-contract would not require to inherit any other contract. And inside that sub-contract, instead of declaring `address public owner` we may use `address private owner`",
    "html": "Generally a contract is made ownable by making a sub contract inherit <code>ownable</code> contract. But the code of <code>ownable</code> contract can be made to be a part of the subcontract itself, so that the sub-contract would not require to inherit any other contract. And inside that sub-contract, instead of declaring <code>address public owner</code> we may use <code>address private owner</code>",
    "sent": "2017-11-15T20:30:07.853Z",
    "fromUser": {
      "id": "59118519d73408ce4f5e1a79",
      "username": "AyushyaChitransh",
      "displayName": "Ayushya Chitransh",
      "url": "/AyushyaChitransh",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/AyushyaChitransh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=128",
      "v": 37,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0ca51c505b630c05e946f9",
    "text": "For instance:\n```\ncontract sample{\n  address private owner;\n\n    //this is the constructor\n  function sample(address addressOfOwner){\n    require(addressOfOwner != address(0));\n    owner = addressOfOwner;\n  }\n  modifier onlyOwner(){\n    require(msg.sender == owner);\n    _;\n  }\n  function InvokedByOwnerOnly() onlyOwner{\n    //this is a sample function which can be invoked yb owner of the contract only\n  }\n```\n\nThis contract will be able to define a owner externally. The account which is passed while deploying the contract will be the only one who will be able to invoke function InvokedByOwnerOnly()\n",
    "html": "<p>For instance:</p><pre><code>contract sample{\n  address <span class=\"keyword\">private</span> owner;\n\n    <span class=\"comment\">//this is the constructor</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sample</span><span class=\"params\">(address addressOfOwner)</span></span>{\n    <span class=\"keyword\">require</span>(addressOfOwner != address(<span class=\"number\">0</span>));\n    owner = addressOfOwner;\n  }\n  modifier onlyOwner(){\n    <span class=\"keyword\">require</span>(msg.sender == owner);\n    _;\n  }\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">InvokedByOwnerOnly</span><span class=\"params\">()</span> <span class=\"title\">onlyOwner</span></span>{\n    <span class=\"comment\">//this is a sample function which can be invoked yb owner of the contract only</span>\n  }</code></pre><p>This contract will be able to define a owner externally. The account which is passed while deploying the contract will be the only one who will be able to invoke function InvokedByOwnerOnly()</p>",
    "sent": "2017-11-15T20:35:40.103Z",
    "fromUser": {
      "id": "59118519d73408ce4f5e1a79",
      "username": "AyushyaChitransh",
      "displayName": "Ayushya Chitransh",
      "url": "/AyushyaChitransh",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/AyushyaChitransh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=128",
      "v": 37,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0ca545e606d60e34caffc2",
    "text": "You can also add additional things like `transferOwnership` to this\n",
    "html": "You can also add additional things like <code>transferOwnership</code> to this",
    "sent": "2017-11-15T20:36:21.536Z",
    "fromUser": {
      "id": "59118519d73408ce4f5e1a79",
      "username": "AyushyaChitransh",
      "displayName": "Ayushya Chitransh",
      "url": "/AyushyaChitransh",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/AyushyaChitransh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=128",
      "v": 37,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0ca5e4cc1d527f6b757b3b",
    "text": "@ynkumar143 The sample contract which is given above can be used to implement the behavior you were asking for. ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"ynkumar143\" class=\"mention\">@ynkumar143</span> The sample contract which is given above can be used to implement the behavior you were asking for. ",
    "sent": "2017-11-15T20:39:00.900Z",
    "fromUser": {
      "id": "59118519d73408ce4f5e1a79",
      "username": "AyushyaChitransh",
      "displayName": "Ayushya Chitransh",
      "url": "/AyushyaChitransh",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/AyushyaChitransh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=128",
      "v": 37,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [
      {
        "screenName": "ynkumar143",
        "userId": "59b6889ed73408ce4f753a04",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0ca703e606d60e34cb0c44",
    "text": "> This contract will be able to define a owner externally. The account which is passed while deploying the contract will be the only one who will be able to invoke function InvokedByOwnerOnly()\n\nThis is true.  However the address itself will still be visible in the contracts storage on the blockchain. ",
    "html": "<blockquote>\n<p>This contract will be able to define a owner externally. The account which is passed while deploying the contract will be the only one who will be able to invoke function InvokedByOwnerOnly()</p></blockquote>\n<p>This is true.  However the address itself will still be visible in the contracts storage on the blockchain. </p>",
    "sent": "2017-11-15T20:43:47.416Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0ca712982ea2653f8381a2",
    "text": "It's a bit of a tricky thing, and the `public`/`private` keywords are misleading. ",
    "html": "It&#39;s a bit of a tricky thing, and the <code>public</code>/<code>private</code> keywords are misleading. ",
    "sent": "2017-11-15T20:44:02.068Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0ca716e606d60e34cb0c9b",
    "text": "https://ethereum.stackexchange.com/questions/6547/solidity-functions-private-visibility\nhttps://solidity.readthedocs.io/en/develop/security-considerations.html?highlight=private#pitfalls",
    "html": "<a href=\"https://ethereum.stackexchange.com/questions/6547/solidity-functions-private-visibility\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://ethereum.stackexchange.com/questions/6547/solidity-functions-private-visibility</a><br><a href=\"https://solidity.readthedocs.io/en/develop/security-considerations.html?highlight=private#pitfalls\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://solidity.readthedocs.io/en/develop/security-considerations.html?highlight=private#pitfalls</a>",
    "sent": "2017-11-15T20:44:06.315Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [
      {
        "url": "https://ethereum.stackexchange.com/questions/6547/solidity-functions-private-visibility"
      },
      {
        "url": "https://solidity.readthedocs.io/en/develop/security-considerations.html?highlight=private#pitfalls"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0ca730982ea2653f8382c6",
    "text": "To see it in action, try deploying that sample code at remix.ethereum.org",
    "html": "To see it in action, try deploying that sample code at remix.ethereum.org",
    "sent": "2017-11-15T20:44:32.409Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0ca73c540c78242d0a5c94",
    "text": "then click 'debug' on the deployment transaction",
    "html": "then click &#39;debug&#39; on the deployment transaction",
    "sent": "2017-11-15T20:44:44.521Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0ca776982ea2653f83858e",
    "text": "then walk through the full transaction, and look at \"storage fully loaded\", there you'll see the `owner` address.",
    "html": "then walk through the full transaction, and look at &quot;storage fully loaded&quot;, there you&#39;ll see the <code>owner</code> address.",
    "sent": "2017-11-15T20:45:42.831Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0ca79e614889d475860df5",
    "text": "True, it showed me the owner address in debug!",
    "html": "True, it showed me the owner address in debug!",
    "sent": "2017-11-15T20:46:22.576Z",
    "fromUser": {
      "id": "59118519d73408ce4f5e1a79",
      "username": "AyushyaChitransh",
      "displayName": "Ayushya Chitransh",
      "url": "/AyushyaChitransh",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/AyushyaChitransh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=128",
      "v": 37,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0ca7b2505b630c05e955c5",
    "text": ":)",
    "html": ":)",
    "sent": "2017-11-15T20:46:42.351Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0ca7da614889d475860fd0",
    "text": "now, zksnarks might enable some sort of privacy, but I'm not sure how to implement that off hand.",
    "html": "now, zksnarks might enable some sort of privacy, but I&#39;m not sure how to implement that off hand.",
    "sent": "2017-11-15T20:47:22.106Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0ca7e7e606d60e34cb1413",
    "text": "That shook my fundamentals! There is nothing like `private` in solidity I suppose? ",
    "html": "That shook my fundamentals! There is nothing like <code>private</code> in solidity I suppose? ",
    "sent": "2017-11-15T20:47:35.413Z",
    "fromUser": {
      "id": "59118519d73408ce4f5e1a79",
      "username": "AyushyaChitransh",
      "displayName": "Ayushya Chitransh",
      "url": "/AyushyaChitransh",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/AyushyaChitransh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=128",
      "v": 37,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0ca81f540c78242d0a6341",
    "text": "well, per the docs above, it is a keyword.",
    "html": "well, per the docs above, it is a keyword.",
    "sent": "2017-11-15T20:48:31.178Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0ca820540c78242d0a6349",
    "text": "Everything can be found out! Might be a bit tricky to find, but ultimately it will be found",
    "html": "Everything can be found out! Might be a bit tricky to find, but ultimately it will be found",
    "sent": "2017-11-15T20:48:32.445Z",
    "fromUser": {
      "id": "59118519d73408ce4f5e1a79",
      "username": "AyushyaChitransh",
      "displayName": "Ayushya Chitransh",
      "url": "/AyushyaChitransh",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/AyushyaChitransh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=128",
      "v": 37,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0ca836982ea2653f838ad2",
    "text": "but all it means is that  there's no way for another contract to read the value. ",
    "html": "but all it means is that  there&#39;s no way for another contract to read the value. ",
    "sent": "2017-11-15T20:48:54.893Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0ca849540c78242d0a6451",
    "text": "when you make a variable `public`, solidity creates a getter function for it. ",
    "html": "when you make a variable <code>public</code>, solidity creates a getter function for it. ",
    "sent": "2017-11-15T20:49:13.489Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0ca85071ad3f8736ebbc17",
    "text": "Yeah! We may know it, but it will not be usable for other contracts",
    "html": "Yeah! We may know it, but it will not be usable for other contracts",
    "sent": "2017-11-15T20:49:20.555Z",
    "fromUser": {
      "id": "59118519d73408ce4f5e1a79",
      "username": "AyushyaChitransh",
      "displayName": "Ayushya Chitransh",
      "url": "/AyushyaChitransh",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/AyushyaChitransh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=128",
      "v": 37,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0ca87bcc1d527f6b758be7",
    "text": "yeah, so `private` has minimal security benefits, and harms interoperability. ",
    "html": "yeah, so <code>private</code> has minimal security benefits, and harms interoperability. ",
    "sent": "2017-11-15T20:50:03.848Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0ca883540c78242d0a65b0",
    "text": "Save a bit of gas cost in deployment maybe.",
    "html": "Save a bit of gas cost in deployment maybe.",
    "sent": "2017-11-15T20:50:11.967Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0ca8a1df09362e671255ab",
    "text": "That was my \"fact of the day\" :smile: ",
    "html": "That was my &quot;fact of the day&quot; :smile: ",
    "sent": "2017-11-15T20:50:41.596Z",
    "fromUser": {
      "id": "59118519d73408ce4f5e1a79",
      "username": "AyushyaChitransh",
      "displayName": "Ayushya Chitransh",
      "url": "/AyushyaChitransh",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/AyushyaChitransh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=128",
      "v": 37,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0db5e6f257ad9109a25786",
    "text": "Yeah ",
    "html": "Yeah ",
    "sent": "2017-11-16T15:59:34.890Z",
    "fromUser": {
      "id": "58e664ecd73408ce4f5694ed",
      "username": "jessicagmarshall",
      "displayName": "Jessica Marshall",
      "url": "/jessicagmarshall",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jessicagmarshall",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12129939?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12129939?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0db73aba39a53f1aaa0233",
    "text": "Oops, ignore that. ",
    "html": "Oops, ignore that. ",
    "sent": "2017-11-16T16:05:14.485Z",
    "fromUser": {
      "id": "58e664ecd73408ce4f5694ed",
      "username": "jessicagmarshall",
      "displayName": "Jessica Marshall",
      "url": "/jessicagmarshall",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jessicagmarshall",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12129939?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12129939?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0db751e606d60e34d0bbc9",
    "text": "haha, NP, nice seeing you around here tho. :)",
    "html": "haha, NP, nice seeing you around here tho. :)",
    "sent": "2017-11-16T16:05:37.340Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0dc49b982ea2653f899bb0",
    "text": "Hi guys! I'm looking for help on passing on msg.sender between functions calls of different contracts",
    "html": "Hi guys! I&#39;m looking for help on passing on msg.sender between functions calls of different contracts",
    "sent": "2017-11-16T17:02:19.517Z",
    "fromUser": {
      "id": "5988bdcbd73408ce4f707169",
      "username": "YumingHe",
      "displayName": "Peter H",
      "url": "/YumingHe",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/YumingHe",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7621083?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7621083?v=4&s=128",
      "v": 23,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0dc4aff257ad9109a2b20a",
    "text": "is that possible? or does it need to be passed in through a variable?",
    "html": "is that possible? or does it need to be passed in through a variable?",
    "sent": "2017-11-16T17:02:39.401Z",
    "fromUser": {
      "id": "5988bdcbd73408ce4f707169",
      "username": "YumingHe",
      "displayName": "Peter H",
      "url": "/YumingHe",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/YumingHe",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7621083?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7621083?v=4&s=128",
      "v": 23,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0dc6ed982ea2653f89aa22",
    "text": "@YumingHe each call has it's own `msg.sender`. So when contract B is called by contract A,  contract A is the sender. If you want to retain the msg.sender in contract B, you'd need to store it in a memory variable in A, then pass it as an argument to B.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"YumingHe\" class=\"mention\">@YumingHe</span> each call has it&#39;s own <code>msg.sender</code>. So when contract B is called by contract A,  contract A is the sender. If you want to retain the msg.sender in contract B, you&#39;d need to store it in a memory variable in A, then pass it as an argument to B.",
    "sent": "2017-11-16T17:12:13.898Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [
      {
        "screenName": "YumingHe",
        "userId": "5988bdcbd73408ce4f707169",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0dc76a505b630c05ef5479",
    "text": "@maurelian I see, i remember reading it somewhere that the msg.sender can be transferred between internal contract calls, but i guess thats only within a single contract?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> I see, i remember reading it somewhere that the msg.sender can be transferred between internal contract calls, but i guess thats only within a single contract?",
    "sent": "2017-11-16T17:14:18.808Z",
    "fromUser": {
      "id": "5988bdcbd73408ce4f707169",
      "username": "YumingHe",
      "displayName": "Peter H",
      "url": "/YumingHe",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/YumingHe",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7621083?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7621083?v=4&s=128",
      "v": 23,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0dc76c505b630c05ef547d",
    "text": "not sure if relevant to you, but your question makes me think of uPorts meta-transactions concept: https://github.com/uport-project/uport-identity/blob/release/2.0.0/contracts/MetaIdentityManager.sol#L53",
    "html": "not sure if relevant to you, but your question makes me think of uPorts meta-transactions concept: <a href=\"https://github.com/uport-project/uport-identity/blob/release/2.0.0/contracts/MetaIdentityManager.sol#L53\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/uport-project/uport-identity/blob/release/2.0.0/contracts/MetaIdentityManager.sol#L53</a>",
    "sent": "2017-11-16T17:14:20.344Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [
      {
        "url": "https://github.com/uport-project/uport-identity/blob/release/2.0.0/contracts/MetaIdentityManager.sol#L53"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0dc784e606d60e34d11513",
    "text": "yes, with an \"internal call\", you're not sending a new msg call",
    "html": "yes, with an &quot;internal call&quot;, you&#39;re not sending a new msg call",
    "sent": "2017-11-16T17:14:44.499Z",
    "editedAt": "2017-11-16T17:15:08.151Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 3
  },
  {
    "id": "5a0dc7a371ad3f8736f1e61b",
    "text": "ahh, that makes sense. Thank you @maurelian ",
    "html": "ahh, that makes sense. Thank you <span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> ",
    "sent": "2017-11-16T17:15:15.885Z",
    "fromUser": {
      "id": "5988bdcbd73408ce4f707169",
      "username": "YumingHe",
      "displayName": "Peter H",
      "url": "/YumingHe",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/YumingHe",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7621083?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7621083?v=4&s=128",
      "v": 23,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0dc7a6505b630c05ef5626",
    "text": "np.",
    "html": "np.",
    "sent": "2017-11-16T17:15:18.690Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0dceb971ad3f8736f20d91",
    "text": "> haha, NP, nice seeing you around here tho. :)\nI've been lurking a lot. Trying to respond more.",
    "html": "<blockquote>\nhaha, NP, nice seeing you around here tho. :)<br>I&#39;ve been lurking a lot. Trying to respond more.</blockquote>\n",
    "sent": "2017-11-16T17:45:29.565Z",
    "fromUser": {
      "id": "58e664ecd73408ce4f5694ed",
      "username": "jessicagmarshall",
      "displayName": "Jessica Marshall",
      "url": "/jessicagmarshall",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jessicagmarshall",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12129939?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12129939?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0dd24f982ea2653f89ef8a",
    "text": "@jessicica14 That would be great!",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"jessicica14\" class=\"mention\">@jessicica14</span> That would be great!",
    "sent": "2017-11-16T18:00:47.014Z",
    "editedAt": "2017-11-16T18:00:54.366Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [
      {
        "screenName": "jessicica14",
        "userId": "58e664ecd73408ce4f5694ed",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a0dd9b5e606d60e34d179e2",
    "text": "Is it possible in the latest version of solidity to return dynamic array from a contract function? (issue: https://github.com/ethereum/solidity/issues/166)",
    "html": "Is it possible in the latest version of solidity to return dynamic array from a contract function? (issue: <span data-link-type=\"issue\" data-issue=\"166\" data-issue-repo=\"ethereum/solidity\" class=\"issue\">ethereum/solidity#166</span>)",
    "sent": "2017-11-16T18:32:21.202Z",
    "editedAt": "2017-11-16T18:32:26.420Z",
    "fromUser": {
      "id": "5988bdcbd73408ce4f707169",
      "username": "YumingHe",
      "displayName": "Peter H",
      "url": "/YumingHe",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/YumingHe",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7621083?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7621083?v=4&s=128",
      "v": 23,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [
      {
        "number": "166",
        "repo": "ethereum/solidity"
      }
    ],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a0ef135df09362e671e3ec1",
    "text": "^ @GNSPS ?",
    "html": "^ <span data-link-type=\"mention\" data-screen-name=\"GNSPS\" class=\"mention\">@GNSPS</span> ?",
    "sent": "2017-11-17T14:24:53.508Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [
      {
        "screenName": "GNSPS",
        "userId": "54bd42addb8155e6700ed45e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0ef20ce606d60e34d704bf",
    "text": "nvm, I looked it up in the docs: https://solidity.readthedocs.io/en/latest/types.html?#members ",
    "html": "nvm, I looked it up in the docs: <a href=\"https://solidity.readthedocs.io/en/latest/types.html?#members\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://solidity.readthedocs.io/en/latest/types.html?#members</a> ",
    "sent": "2017-11-17T14:28:28.451Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [
      {
        "url": "https://solidity.readthedocs.io/en/latest/types.html?#members"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0ef212ba39a53f1ab03d89",
    "text": "[![image.png](https://files.gitter.im/ConsenSys/smart-contract-best-practices/lIzf/thumb/image.png)](https://files.gitter.im/ConsenSys/smart-contract-best-practices/lIzf/image.png)",
    "html": "<a href=\"https://files.gitter.im/ConsenSys/smart-contract-best-practices/lIzf/image.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/ConsenSys/smart-contract-best-practices/lIzf/thumb/image.png\" alt=\"image.png\" rel=\"nofollow\"></a>",
    "sent": "2017-11-17T14:28:34.317Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [
      {
        "url": "https://files.gitter.im/ConsenSys/smart-contract-best-practices/lIzf/thumb/image.png"
      },
      {
        "url": "https://files.gitter.im/ConsenSys/smart-contract-best-practices/lIzf/image.png"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0f051571ad3f8736f865ef",
    "text": "Yep! RETURNDATACOPY and RETURNDATASIZE are not part of the solidity compiler yet. Nor do I know of any timeline to implement those",
    "html": "Yep! RETURNDATACOPY and RETURNDATASIZE are not part of the solidity compiler yet. Nor do I know of any timeline to implement those",
    "sent": "2017-11-17T15:49:41.892Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a10299c540c78242d1bc5f7",
    "text": "Hey everyone, i have deployed a contract using testrpc and truffle. How can i test it ?\nHow can i check its balance ?",
    "html": "Hey everyone, i have deployed a contract using testrpc and truffle. How can i test it ?<br>How can i check its balance ?",
    "sent": "2017-11-18T12:37:48.357Z",
    "editedAt": "2017-11-18T12:37:55.737Z",
    "fromUser": {
      "id": "58d105b7d73408ce4f527ccc",
      "username": "axelblaze15",
      "displayName": "Sahil Chaudhary",
      "url": "/axelblaze15",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/axelblaze15",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/16748015?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/16748015?v=4&s=128",
      "v": 14,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a1029c5df09362e6723bbed",
    "text": "    pragma solidity ^0.4.18;\n    contract helloworld{\n\n    uint public balance;\n    function helloworld(){\n        balance=1000;\n    }\n    }",
    "html": "<pre><code><span class=\"keyword\">pragma</span> solidity ^<span class=\"number\">0.4</span>.18;\ncontract helloworld{\n\n<span class=\"built_in\">uint</span> <span class=\"keyword\">public</span> balance;\n<span class=\"built_in\">function</span> helloworld(){\n    balance=<span class=\"number\">1000</span>;\n}\n}</code></pre>",
    "sent": "2017-11-18T12:38:29.216Z",
    "fromUser": {
      "id": "58d105b7d73408ce4f527ccc",
      "username": "axelblaze15",
      "displayName": "Sahil Chaudhary",
      "url": "/axelblaze15",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/axelblaze15",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/16748015?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/16748015?v=4&s=128",
      "v": 14,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1169b2f257ad9109b33178",
    "text": "Call the function   via Truffle console",
    "html": "Call the function   via Truffle console",
    "sent": "2017-11-19T11:23:30.583Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a116a28cc1d527f6b8bd241",
    "text": "```helloworld.deployed().then((h)=>{h.balance.call()})```",
    "html": "<code>helloworld.deployed().then((h)=&gt;{h.balance.call()})</code>",
    "sent": "2017-11-19T11:25:28.750Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a116ac1f257ad9109b33454",
    "text": "http://truffleframework.com/docs/getting_started/contracts",
    "html": "<a href=\"http://truffleframework.com/docs/getting_started/contracts\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://truffleframework.com/docs/getting_started/contracts</a>",
    "sent": "2017-11-19T11:28:01.304Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [
      {
        "url": "http://truffleframework.com/docs/getting_started/contracts"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a134334540c78242d2a0dbc",
    "text": "Error: VM Exception while processing transaction: revert\n    at Object.InvalidResponse (/usr/local/lib/node_modules/truffle/build/cli.bundled.js:43303:16)\n    at /usr/local/lib/node_modules/truffle/build/cli.bundled.js:331156:36\n    at /usr/local/lib/node_modules/truffle/build/cli.bundled.js:314196:9\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/cli.bundled.js:315621:13)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/cli.bundled.js:70159:18)\n    at XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/cli.bundled.js:70449:12)\n    at XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/cli.bundled.js:70604:12)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/cli.bundled.js:70564:24)\n    at emitNone (events.js:111:20)\n    at IncomingMessage.emit (events.js:208:7)",
    "html": "Error: VM Exception while processing transaction: revert<br>    at Object.InvalidResponse (/usr/local/lib/node_modules/truffle/build/cli.bundled.js:43303:16)<br>    at /usr/local/lib/node_modules/truffle/build/cli.bundled.js:331156:36<br>    at /usr/local/lib/node_modules/truffle/build/cli.bundled.js:314196:9<br>    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/cli.bundled.js:315621:13)<br>    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/cli.bundled.js:70159:18)<br>    at XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/cli.bundled.js:70449:12)<br>    at XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/cli.bundled.js:70604:12)<br>    at IncomingMessage.&lt;anonymous&gt; (/usr/local/lib/node_modules/truffle/build/cli.bundled.js:70564:24)<br>    at emitNone (events.js:111:20)<br>    at IncomingMessage.emit (events.js:208:7)",
    "sent": "2017-11-20T21:03:48.725Z",
    "fromUser": {
      "id": "58e0d82bd73408ce4f558480",
      "username": "error-terror",
      "displayName": "error-terror",
      "url": "/error-terror",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/error-terror",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/18405060?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/18405060?v=4&s=128",
      "v": 4,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a134388982ea2653fa3a578",
    "text": "  ................................I'm getting this error while trying to execute this function",
    "html": "  ................................I&#39;m getting this error while trying to execute this function",
    "sent": "2017-11-20T21:05:12.144Z",
    "fromUser": {
      "id": "58e0d82bd73408ce4f558480",
      "username": "error-terror",
      "displayName": "error-terror",
      "url": "/error-terror",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/error-terror",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/18405060?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/18405060?v=4&s=128",
      "v": 4,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1343e92837ee5106a9e639",
    "text": "                   function getVersion() returns (uint) {\n                   address setAddr = SetProvider(providerAddr).getSet();\n                   bool res = setAddr.delegatecall.gas(55555)(\n                   bytes4(sha3(\"version()\")));\n                   return result; \n                 }",
    "html": "<pre><code>               <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getVersion</span><span class=\"params\">()</span> <span class=\"title\">returns</span> <span class=\"params\">(uint)</span> </span>{\n               address setAddr = SetProvider(providerAddr).getSet();\n               bool res = setAddr.delegatecall.gas(<span class=\"number\">55555</span>)(\n               bytes4(sha3(<span class=\"string\">\"version()\"</span>)));\n               <span class=\"keyword\">return</span> result; \n             }</code></pre>",
    "sent": "2017-11-20T21:06:49.215Z",
    "fromUser": {
      "id": "58e0d82bd73408ce4f558480",
      "username": "error-terror",
      "displayName": "error-terror",
      "url": "/error-terror",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/error-terror",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/18405060?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/18405060?v=4&s=128",
      "v": 4,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1344172837ee5106a9e858",
    "text": "SetProvider is another contract deployed..........any help would be appreciated",
    "html": "SetProvider is another contract deployed..........any help would be appreciated",
    "sent": "2017-11-20T21:07:35.504Z",
    "fromUser": {
      "id": "58e0d82bd73408ce4f558480",
      "username": "error-terror",
      "displayName": "error-terror",
      "url": "/error-terror",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/error-terror",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/18405060?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/18405060?v=4&s=128",
      "v": 4,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a140d67614889d475a902b2",
    "text": "Hello room, I am trying to test a contract, I have created on the Ropestein test network using Metamask, however I'm running into problems. Just wondering if there is another way to test that I'm missing? Thank you.",
    "html": "Hello room, I am trying to test a contract, I have created on the Ropestein test network using Metamask, however I&#39;m running into problems. Just wondering if there is another way to test that I&#39;m missing? Thank you.",
    "sent": "2017-11-21T11:26:31.017Z",
    "fromUser": {
      "id": "5a0ad858d73408ce4f7e869e",
      "username": "cryptogee",
      "displayName": "cryptogee",
      "url": "/cryptogee",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/cryptogee",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30659304?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30659304?v=4&s=128",
      "v": 2,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a143bf4df09362e673721e1",
    "text": "@error-terror  `Error: VM Exception while processing transaction: revert` suggests that a contract is throwing an error.  Try looking in the contracts you're calling externally for a `revert()`,   or for an `assert()`, or `require()` call with a condition which evaluates to false.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"error-terror\" class=\"mention\">@error-terror</span>  <code>Error: VM Exception while processing transaction: revert</code> suggests that a contract is throwing an error.  Try looking in the contracts you&#39;re calling externally for a <code>revert()</code>,   or for an <code>assert()</code>, or <code>require()</code> call with a condition which evaluates to false.",
    "sent": "2017-11-21T14:45:08.121Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [
      {
        "screenName": "error-terror",
        "userId": "58e0d82bd73408ce4f558480",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a16e345e606d60e34fd8a82",
    "text": "Hi  guys. wanted to know if i can get some help with a smart contract I'm making in Solidity 0.4.9. can't seem to get it to work. want to crowdsale in Jan, releasing whitepaper end of the week.\nmain use of funds will be homelessness work in UK as government wont give me money (they don't care).",
    "html": "Hi  guys. wanted to know if i can get some help with a smart contract I&#39;m making in Solidity 0.4.9. can&#39;t seem to get it to work. want to crowdsale in Jan, releasing whitepaper end of the week.<br>main use of funds will be homelessness work in UK as government wont give me money (they don&#39;t care).",
    "sent": "2017-11-23T15:03:33.965Z",
    "fromUser": {
      "id": "5a16dc2dd73408ce4f7ff90f",
      "username": "PapaBaiden",
      "displayName": "Papa Baiden",
      "url": "/PapaBaiden",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/PapaBaiden",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/33920059?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/33920059?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a16ee5ccc1d527f6ba8170e",
    "text": "> can't seem to get it to work. \n\n@papabaiden You're going to need to be more descriptive than that",
    "html": "<blockquote>\n<p>can&#39;t seem to get it to work. </p></blockquote>\n<p><span data-link-type=\"mention\" data-screen-name=\"papabaiden\" class=\"mention\">@papabaiden</span> You&#39;re going to need to be more descriptive than that</p>",
    "sent": "2017-11-23T15:50:52.585Z",
    "editedAt": "2017-11-23T15:51:07.136Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [
      {
        "screenName": "papabaiden",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a16fce4540c78242d3ddd32",
    "text": "@PapaBaiden you should ask at https://ethlance.com",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"PapaBaiden\" class=\"mention\">@PapaBaiden</span> you should ask at <a href=\"https://ethlance.com\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://ethlance.com</a>",
    "sent": "2017-11-23T16:52:52.907Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [
      {
        "url": "https://ethlance.com"
      }
    ],
    "mentions": [
      {
        "screenName": "PapaBaiden",
        "userId": "5a16dc2dd73408ce4f7ff90f",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a16fff2e606d60e34fe2aa3",
    "text": "Thanks @makoto good to see you here. :)",
    "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span> good to see you here. :)",
    "sent": "2017-11-23T17:05:54.377Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a17001171ad3f8736204723",
    "text": ":wave: ",
    "html": ":wave: ",
    "sent": "2017-11-23T17:06:25.070Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a174894614889d475ba7a7f",
    "text": "@",
    "html": "@",
    "sent": "2017-11-23T22:15:48.750Z",
    "fromUser": {
      "id": "5a16dc2dd73408ce4f7ff90f",
      "username": "PapaBaiden",
      "displayName": "Papa Baiden",
      "url": "/PapaBaiden",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/PapaBaiden",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/33920059?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/33920059?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a174967614889d475ba7f42",
    "text": "@maurelian sorry for lack of description. So I basically I get yellow error flags for additional line spacing, although I’m sure I followed tutorials to the letter. I’m a complete coding newb",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> sorry for lack of description. So I basically I get yellow error flags for additional line spacing, although I’m sure I followed tutorials to the letter. I’m a complete coding newb",
    "sent": "2017-11-23T22:19:19.761Z",
    "fromUser": {
      "id": "5a16dc2dd73408ce4f7ff90f",
      "username": "PapaBaiden",
      "displayName": "Papa Baiden",
      "url": "/PapaBaiden",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/PapaBaiden",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/33920059?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/33920059?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1749a9df09362e67470e18",
    "text": "@PapaBaiden are those errors, or warnings?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"PapaBaiden\" class=\"mention\">@PapaBaiden</span> are those errors, or warnings?",
    "sent": "2017-11-23T22:20:25.465Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [
      {
        "screenName": "PapaBaiden",
        "userId": "5a16dc2dd73408ce4f7ff90f",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1749b7cc1d527f6ba9db36",
    "text": "where are you seeing that? Remix? ",
    "html": "where are you seeing that? Remix? ",
    "sent": "2017-11-23T22:20:39.795Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1749c8232e79134dc48a03",
    "text": "@makoto thanks for the link. I don’t have spare funds to ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span> thanks for the link. I don’t have spare funds to ",
    "sent": "2017-11-23T22:20:56.613Z",
    "fromUser": {
      "id": "5a16dc2dd73408ce4f7ff90f",
      "username": "PapaBaiden",
      "displayName": "Papa Baiden",
      "url": "/PapaBaiden",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/PapaBaiden",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/33920059?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/33920059?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1749dacc1d527f6ba9db66",
    "text": "Pay freelance right away",
    "html": "Pay freelance right away",
    "sent": "2017-11-23T22:21:14.249Z",
    "fromUser": {
      "id": "5a16dc2dd73408ce4f7ff90f",
      "username": "PapaBaiden",
      "displayName": "Papa Baiden",
      "url": "/PapaBaiden",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/PapaBaiden",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/33920059?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/33920059?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a174a65e606d60e34ff8f8b",
    "text": "@maurelian I think they are warnings. Struggling to test . Using remix ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> I think they are warnings. Struggling to test . Using remix ",
    "sent": "2017-11-23T22:23:33.043Z",
    "fromUser": {
      "id": "5a16dc2dd73408ce4f7ff90f",
      "username": "PapaBaiden",
      "displayName": "Papa Baiden",
      "url": "/PapaBaiden",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/PapaBaiden",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/33920059?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/33920059?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a17e39597cedeb0482c5bca",
    "text": "If you are doing for charity, use https://giveth.io ",
    "html": "If you are doing for charity, use <a href=\"https://giveth.io\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://giveth.io</a> ",
    "sent": "2017-11-24T09:17:09.582Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [
      {
        "url": "https://giveth.io"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a17e47919147ac32319f0ee",
    "text": "If you are completely new to coding, it's not ethical nor practical for you to write a smart contract that handles other people's financial value. ",
    "html": "If you are completely new to coding, it&#39;s not ethical nor practical for you to write a smart contract that handles other people&#39;s financial value. ",
    "sent": "2017-11-24T09:20:57.445Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a17fc18cc1d527f6bacbf9d",
    "text": "+1",
    "html": "+1",
    "sent": "2017-11-24T11:01:44.340Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1c537497cedeb0482c7185",
    "text": "@maurelian  on https://consensys.github.io/smart-contract-best-practices/security_tools/ there are lots of linting libraries. Have you tried all of them and do you have any recommendation on which one to use?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span>  on <a href=\"https://consensys.github.io/smart-contract-best-practices/security_tools/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://consensys.github.io/smart-contract-best-practices/security_tools/</a> there are lots of linting libraries. Have you tried all of them and do you have any recommendation on which one to use?",
    "sent": "2017-11-27T18:03:32.744Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [
      {
        "url": "https://consensys.github.io/smart-contract-best-practices/security_tools/"
      }
    ],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1c559fffa3e37919c796e6",
    "text": "@makoto I really like https://protofire.github.io/solhint/",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"makoto\" class=\"mention\">@makoto</span> I really like <a href=\"https://protofire.github.io/solhint/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://protofire.github.io/solhint/</a>",
    "sent": "2017-11-27T18:12:47.769Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [
      {
        "url": "https://protofire.github.io/solhint/"
      }
    ],
    "mentions": [
      {
        "screenName": "makoto",
        "userId": "56ea69a885d51f252ab941d5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1c55b6ffa3e37919c7978e",
    "text": "works out of the box, including some editor integrations",
    "html": "works out of the box, including some editor integrations",
    "sent": "2017-11-27T18:13:10.669Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1c55caffa3e37919c7988c",
    "text": "`+ checks against many of our best practices :)",
    "html": "`+ checks against many of our best practices :)",
    "sent": "2017-11-27T18:13:30.146Z",
    "editedAt": "2017-11-27T18:13:33.552Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a1c65c371ad3f873638161e",
    "text": "Yeah, looks like zeppelin guys are moving to solhint as well https://github.com/OpenZeppelin/zeppelin-solidity/issues/508",
    "html": "Yeah, looks like zeppelin guys are moving to solhint as well <span data-link-type=\"issue\" data-issue=\"508\" data-issue-repo=\"OpenZeppelin/zeppelin-solidity\" class=\"issue\">OpenZeppelin/zeppelin-solidity#508</span>",
    "sent": "2017-11-27T19:21:39.448Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [
      {
        "repo": "OpenZeppelin/zeppelin-solidity",
        "number": "508"
      }
    ],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1c65e2540c78242d559e81",
    "text": "Or rather solhint guys are requesting the change :smile:",
    "html": "Or rather solhint guys are requesting the change :smile:",
    "sent": "2017-11-27T19:22:10.880Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1c676be606d60e341624eb",
    "text": "yeah, I was actually mentioned on that issues, just responded to clarify my (lack of) involvement, but voice support anyways.",
    "html": "yeah, I was actually mentioned on that issues, just responded to clarify my (lack of) involvement, but voice support anyways.",
    "sent": "2017-11-27T19:28:43.294Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1c6ef4cc1d527f6bc095b6",
    "text": "https://github.com/CryptoConsortium/CCSS/issues/35",
    "html": "<span data-link-type=\"issue\" data-issue=\"35\" data-issue-repo=\"CryptoConsortium/CCSS\" class=\"issue\">CryptoConsortium/CCSS#35</span>",
    "sent": "2017-11-27T20:00:52.907Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [
      {
        "repo": "CryptoConsortium/CCSS",
        "number": "35"
      }
    ],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1c97acffa3e37919c92aa5",
    "text": "Hey devs, we're launching a bug bounty program for a marketplace we've built. Would be cool if you're interested to join up here: https://synapse.ai/marketplace \n\nI'll be around to answer any questions (also coding rn)",
    "html": "<p>Hey devs, we&#39;re launching a bug bounty program for a marketplace we&#39;ve built. Would be cool if you&#39;re interested to join up here: <a href=\"https://synapse.ai/marketplace\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://synapse.ai/marketplace</a> </p><p>I&#39;ll be around to answer any questions (also coding rn)</p>",
    "sent": "2017-11-27T22:54:36.016Z",
    "fromUser": {
      "id": "559d959c15522ed4b3e3ac82",
      "username": "dpgailey",
      "displayName": "Dan Gailey",
      "url": "/dpgailey",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dpgailey",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/249497?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/249497?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [
      {
        "url": "https://synapse.ai/marketplace"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1ccd4d71ad3f87363a4600",
    "text": "Just signed up today, this looks pretty interesting!",
    "html": "Just signed up today, this looks pretty interesting!",
    "sent": "2017-11-28T02:43:25.385Z",
    "fromUser": {
      "id": "59e41cc1d73408ce4f7a2d4e",
      "username": "cidexpertsystem",
      "displayName": "Cindy Reichel",
      "url": "/cidexpertsystem",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/cidexpertsystem",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5862406?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5862406?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1cd446540c78242d57dd24",
    "text": "Thanks @cidexpertsystem ",
    "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"cidexpertsystem\" class=\"mention\">@cidexpertsystem</span> ",
    "sent": "2017-11-28T03:13:10.165Z",
    "fromUser": {
      "id": "559d959c15522ed4b3e3ac82",
      "username": "dpgailey",
      "displayName": "Dan Gailey",
      "url": "/dpgailey",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dpgailey",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/249497?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/249497?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [
      {
        "screenName": "cidexpertsystem",
        "userId": "59e41cc1d73408ce4f7a2d4e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1cd47a71ad3f87363a64f8",
    "text": "We don't have a slack channel for devs yet (saw your request) the best we have is a telegram channel, but I'm probably going to create a gitter/discord channel.",
    "html": "We don&#39;t have a slack channel for devs yet (saw your request) the best we have is a telegram channel, but I&#39;m probably going to create a gitter/discord channel.",
    "sent": "2017-11-28T03:14:02.309Z",
    "fromUser": {
      "id": "559d959c15522ed4b3e3ac82",
      "username": "dpgailey",
      "displayName": "Dan Gailey",
      "url": "/dpgailey",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dpgailey",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/249497?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/249497?v=4&s=128",
      "v": 9,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1d100d540c78242d58eb96",
    "text": "telegram works for me",
    "html": "telegram works for me",
    "sent": "2017-11-28T07:28:13.372Z",
    "fromUser": {
      "id": "59e41cc1d73408ce4f7a2d4e",
      "username": "cidexpertsystem",
      "displayName": "Cindy Reichel",
      "url": "/cidexpertsystem",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/cidexpertsystem",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5862406?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5862406?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1d30ff8b3a9e2c0c28198f",
    "text": "Hi, I have a simple question. Which is a better practice for ensuring safe transaction a) unlocking account after asking passphrase using web3.eth.personal from web or sending a rawTransaction after signing with the private key? I mean what do people use in production? Thanks.",
    "html": "Hi, I have a simple question. Which is a better practice for ensuring safe transaction a) unlocking account after asking passphrase using web3.eth.personal from web or sending a rawTransaction after signing with the private key? I mean what do people use in production? Thanks.",
    "sent": "2017-11-28T09:48:47.903Z",
    "fromUser": {
      "id": "59e83618d73408ce4f7aae77",
      "username": "shashiks",
      "displayName": "Shashikant Soni",
      "url": "/shashiks",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/shashiks",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2485430?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2485430?v=4&s=128",
      "v": 4,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1e98408b3a9e2c0c2f9c62",
    "text": "Ganache queries??",
    "html": "Ganache queries??",
    "sent": "2017-11-29T11:21:36.033Z",
    "fromUser": {
      "id": "5a1e9819d73408ce4f80d772",
      "username": "vishalvermalp_twitter",
      "displayName": "Vishal Verma",
      "url": "/vishalvermalp_twitter",
      "avatarUrl": "https://avatars-01.gitter.im/g/u/vishalvermalp_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1e987fe5ed52e26ca14090",
    "text": "Unable to connect to Ganache on Ubuntu machine\nSome hoe the port is only giving problem. It is only connecting to 7545 not on oany other port like 8545",
    "html": "Unable to connect to Ganache on Ubuntu machine<br>Some hoe the port is only giving problem. It is only connecting to 7545 not on oany other port like 8545",
    "sent": "2017-11-29T11:22:39.523Z",
    "fromUser": {
      "id": "5a1e9819d73408ce4f80d772",
      "username": "vishalvermalp_twitter",
      "displayName": "Vishal Verma",
      "url": "/vishalvermalp_twitter",
      "avatarUrl": "https://avatars-01.gitter.im/g/u/vishalvermalp_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1e98ca232e79134de76940",
    "text": "try `lsof -i tcp:8545` to see if there are any processes running on 8545",
    "html": "try <code>lsof -i tcp:8545</code> to see if there are any processes running on 8545",
    "sent": "2017-11-29T11:23:54.542Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1e98d8ffa3e37919d3b991",
    "text": "if so kill those processes",
    "html": "if so kill those processes",
    "sent": "2017-11-29T11:24:08.110Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1e98e6232e79134de769c7",
    "text": "beyond that, I'd suggest asking in https://gitter.im/ConsenSys/truffle",
    "html": "beyond that, I&#39;d suggest asking in <a href=\"https://gitter.im/ConsenSys/truffle\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gitter.im/ConsenSys/truffle</a>",
    "sent": "2017-11-29T11:24:22.967Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [
      {
        "url": "https://gitter.im/ConsenSys/truffle"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1e9a268b3a9e2c0c2fa69b",
    "text": "@maurelian  My private node is the only process running on 8545. The port i enabled for port forwarding",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span>  My private node is the only process running on 8545. The port i enabled for port forwarding",
    "sent": "2017-11-29T11:29:42.696Z",
    "fromUser": {
      "id": "5a1e9819d73408ce4f80d772",
      "username": "vishalvermalp_twitter",
      "displayName": "Vishal Verma",
      "url": "/vishalvermalp_twitter",
      "avatarUrl": "https://avatars-01.gitter.im/g/u/vishalvermalp_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1e9a338b3a9e2c0c2fa6d3",
    "text": "this issue was not there on windows m/c",
    "html": "this issue was not there on windows m/c",
    "sent": "2017-11-29T11:29:55.950Z",
    "fromUser": {
      "id": "5a1e9819d73408ce4f80d772",
      "username": "vishalvermalp_twitter",
      "displayName": "Vishal Verma",
      "url": "/vishalvermalp_twitter",
      "avatarUrl": "https://avatars-01.gitter.im/g/u/vishalvermalp_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1e9a7187680e6230ac3d1b",
    "text": "OK, Sorry @vishalvermalp_twitter but you'll probably have better luck in the truffle room :)",
    "html": "OK, Sorry <span data-link-type=\"mention\" data-screen-name=\"vishalvermalp_twitter\" class=\"mention\">@vishalvermalp_twitter</span> but you&#39;ll probably have better luck in the truffle room :)",
    "sent": "2017-11-29T11:30:57.262Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [
      {
        "screenName": "vishalvermalp_twitter",
        "userId": "5a1e9819d73408ce4f80d772",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a1e9a80ba39a53f1afaeeb8",
    "text": "ok",
    "html": "ok",
    "sent": "2017-11-29T11:31:12.637Z",
    "fromUser": {
      "id": "5a1e9819d73408ce4f80d772",
      "username": "vishalvermalp_twitter",
      "displayName": "Vishal Verma",
      "url": "/vishalvermalp_twitter",
      "avatarUrl": "https://avatars-01.gitter.im/g/u/vishalvermalp_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2001f83a80a84b5b9d4849",
    "text": "@mujtaba-ahmad\nHi\nI am new to solidity and i am new to this technology, i am using truffle, and i am developing dapp using testrpc, and i am unable to transfer ether from one account to another account through solidity contract, can anyone help me out here ?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"mujtaba-ahmad\" class=\"mention\">@mujtaba-ahmad</span><br>Hi<br>I am new to solidity and i am new to this technology, i am using truffle, and i am developing dapp using testrpc, and i am unable to transfer ether from one account to another account through solidity contract, can anyone help me out here ?",
    "sent": "2017-11-30T13:04:56.951Z",
    "fromUser": {
      "id": "5857ce7dd73408ce4f3e04d0",
      "username": "mujtaba-ahmad",
      "displayName": "mujtaba-ahmad",
      "url": "/mujtaba-ahmad",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/mujtaba-ahmad",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3063238?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3063238?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [
      {
        "screenName": "mujtaba-ahmad",
        "userId": "5857ce7dd73408ce4f3e04d0",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2003c0ffa3e37919db6ce1",
    "text": "@mujtaba-ahmad 1. what error are you getting? 2. Can you share the code that's not doing what you think it should be doing?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"mujtaba-ahmad\" class=\"mention\">@mujtaba-ahmad</span> 1. what error are you getting? 2. Can you share the code that&#39;s not doing what you think it should be doing?",
    "sent": "2017-11-30T13:12:32.506Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [
      {
        "screenName": "mujtaba-ahmad",
        "userId": "5857ce7dd73408ce4f3e04d0",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2005de3c69dd491708384a",
    "text": "```\n```\ntruffle(development)> org.addFundsToOrg(1, '0x885bdaf9a99cbcbeaf65a3cdc05eca0c28bc5960', 1, { from: web3.eth.accounts[6], gas: 14700000}).then(function(res){ response = res;})\nError: VM Exception while processing transaction: invalid opcode\n    at Object.InvalidResponse (/usr/local/lib/node_modules/truffle/build/cli.bundled.js:37312:16)\n    at /usr/local/lib/node_modules/truffle/build/cli.bundled.js:220420:36\n    at /usr/local/lib/node_modules/truffle/build/cli.bundled.js:204149:9\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/cli.bundled.js:205574:13)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/cli.bundled.js:73069:18)\n    at XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/cli.bundled.js:73359:12)\n    at XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/cli.bundled.js:73514:12)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/cli.bundled.js:73474:24)\n    at emitNone (events.js:111:20)\n    at IncomingMessage.emit (events.js:208:7)\n```\n```",
    "html": "<pre><code>```\ntruffle(development)&gt; org.addFundsToOrg(<span class=\"number\">1</span>, <span class=\"string\">'0x885bdaf9a99cbcbeaf65a3cdc05eca0c28bc5960'</span>, <span class=\"number\">1</span>, { <span class=\"string\">from:</span> web3.eth.accounts[<span class=\"number\">6</span>], <span class=\"string\">gas:</span> <span class=\"number\">14700000</span>}).then(function(res){ response = res;})\n<span class=\"string\">Error:</span> VM Exception <span class=\"keyword\">while</span> processing <span class=\"string\">transaction:</span> invalid opcode\n    at Object.InvalidResponse (<span class=\"regexp\">/usr/</span>local<span class=\"regexp\">/lib/</span>node_modules<span class=\"regexp\">/truffle/</span>build/cli.bundled.<span class=\"string\">js:</span><span class=\"number\">37312</span>:<span class=\"number\">16</span>)\n    at <span class=\"regexp\">/usr/</span>local<span class=\"regexp\">/lib/</span>node_modules<span class=\"regexp\">/truffle/</span>build/cli.bundled.<span class=\"string\">js:</span><span class=\"number\">220420</span>:<span class=\"number\">36</span>\n    at <span class=\"regexp\">/usr/</span>local<span class=\"regexp\">/lib/</span>node_modules<span class=\"regexp\">/truffle/</span>build/cli.bundled.<span class=\"string\">js:</span><span class=\"number\">204149</span>:<span class=\"number\">9</span>\n    at XMLHttpRequest.request.onreadystatechange (<span class=\"regexp\">/usr/</span>local<span class=\"regexp\">/lib/</span>node_modules<span class=\"regexp\">/truffle/</span>build/cli.bundled.<span class=\"string\">js:</span><span class=\"number\">205574</span>:<span class=\"number\">13</span>)\n    at XMLHttpRequestEventTarget.dispatchEvent (<span class=\"regexp\">/usr/</span>local<span class=\"regexp\">/lib/</span>node_modules<span class=\"regexp\">/truffle/</span>build/cli.bundled.<span class=\"string\">js:</span><span class=\"number\">73069</span>:<span class=\"number\">18</span>)\n    at XMLHttpRequest._setReadyState (<span class=\"regexp\">/usr/</span>local<span class=\"regexp\">/lib/</span>node_modules<span class=\"regexp\">/truffle/</span>build/cli.bundled.<span class=\"string\">js:</span><span class=\"number\">73359</span>:<span class=\"number\">12</span>)\n    at XMLHttpRequest._onHttpResponseEnd (<span class=\"regexp\">/usr/</span>local<span class=\"regexp\">/lib/</span>node_modules<span class=\"regexp\">/truffle/</span>build/cli.bundled.<span class=\"string\">js:</span><span class=\"number\">73514</span>:<span class=\"number\">12</span>)\n    at IncomingMessage.&lt;anonymous&gt; (<span class=\"regexp\">/usr/</span>local<span class=\"regexp\">/lib/</span>node_modules<span class=\"regexp\">/truffle/</span>build/cli.bundled.<span class=\"string\">js:</span><span class=\"number\">73474</span>:<span class=\"number\">24</span>)\n    at emitNone (events.<span class=\"string\">js:</span><span class=\"number\">111</span>:<span class=\"number\">20</span>)\n    at IncomingMessage.emit (events.<span class=\"string\">js:</span><span class=\"number\">208</span>:<span class=\"number\">7</span>)</code></pre>```",
    "sent": "2017-11-30T13:21:34.424Z",
    "fromUser": {
      "id": "5857ce7dd73408ce4f3e04d0",
      "username": "mujtaba-ahmad",
      "displayName": "mujtaba-ahmad",
      "url": "/mujtaba-ahmad",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/mujtaba-ahmad",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3063238?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3063238?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a2011cbba39a53f1a02c381",
    "text": "@mujtaba-ahmad I think you're missing the value in the transaction object: try `{ from: web3.eth.accounts[6], gas: 14700000, value:web3.fromWei(1, \"ether\")}`",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"mujtaba-ahmad\" class=\"mention\">@mujtaba-ahmad</span> I think you&#39;re missing the value in the transaction object: try <code>{ from: web3.eth.accounts[6], gas: 14700000, value:web3.fromWei(1, &quot;ether&quot;)}</code>",
    "sent": "2017-11-30T14:12:27.741Z",
    "editedAt": "2017-11-30T14:12:56.422Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [
      {
        "screenName": "mujtaba-ahmad",
        "userId": "5857ce7dd73408ce4f3e04d0",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5a2011e071ad3f87364bdac2",
    "text": "that may not be syntactically perfect, but should point you in the right direction.",
    "html": "that may not be syntactically perfect, but should point you in the right direction.",
    "sent": "2017-11-30T14:12:48.542Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a20121f540c78242d6929a3",
    "text": "You mean `toWei`",
    "html": "You mean <code>toWei</code>",
    "sent": "2017-11-30T14:13:51.206Z",
    "fromUser": {
      "id": "56ea69a885d51f252ab941d5",
      "username": "makoto",
      "displayName": "Makoto Inoue",
      "url": "/makoto",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/makoto",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2630?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2630?v=4&s=128",
      "v": 42,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a201235540c78242d692a3e",
    "text": "yes I do!",
    "html": "yes I do!",
    "sent": "2017-11-30T14:14:13.830Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a20125a3ae2aa6b3f6c5f5c",
    "text": "I also maybe meant \"that may not be _semantically_ perfect\"?",
    "html": "I also maybe meant &quot;that may not be <em>semantically</em> perfect&quot;?",
    "sent": "2017-11-30T14:14:50.028Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a20b6fe3a80a84b5ba14f83",
    "text": "hey guys, could anyone explain to me how the conversion system works in open-zeppelin's crowdsale contract? ",
    "html": "hey guys, could anyone explain to me how the conversion system works in open-zeppelin&#39;s crowdsale contract? ",
    "sent": "2017-12-01T01:57:18.069Z",
    "fromUser": {
      "id": "56fcc3de187bb6f0eadd21cc",
      "username": "Cosmin-Parvulescu",
      "displayName": "Cosmin Pârvulescu",
      "url": "/Cosmin-Parvulescu",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Cosmin-Parvulescu",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/635806?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/635806?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a20b7193c69dd49170c23a7",
    "text": "I am having trouble understanding this line: 'const rate = new web3.BigNumber(x);' if anyone is familiar",
    "html": "I am having trouble understanding this line: &#39;const rate = new web3.BigNumber(x);&#39; if anyone is familiar",
    "sent": "2017-12-01T01:57:45.199Z",
    "fromUser": {
      "id": "56fcc3de187bb6f0eadd21cc",
      "username": "Cosmin-Parvulescu",
      "displayName": "Cosmin Pârvulescu",
      "url": "/Cosmin-Parvulescu",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Cosmin-Parvulescu",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/635806?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/635806?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cbb2a2b20c64242992b89b",
    "text": "talent is scarce",
    "html": "talent is scarce",
    "sent": "2017-09-27T14:16:02.748Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cbb2a6bac826f0540624fb",
    "text": "so good luck",
    "html": "so good luck",
    "sent": "2017-09-27T14:16:06.454Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cbb2c0b20c64242992b902",
    "text": "thanks. I will keep that in mind. ",
    "html": "thanks. I will keep that in mind. ",
    "sent": "2017-09-27T14:16:32.509Z",
    "fromUser": {
      "id": "59c7af98d73408ce4f772185",
      "username": "rickie247",
      "displayName": "Rick Morales",
      "url": "/rickie247",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/rickie247",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/31505335?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/31505335?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cbb2d1210ac269207ace84",
    "text": "I am trying to learn myself but really dont know where to start",
    "html": "I am trying to learn myself but really dont know where to start",
    "sent": "2017-09-27T14:16:49.405Z",
    "fromUser": {
      "id": "59c7af98d73408ce4f772185",
      "username": "rickie247",
      "displayName": "Rick Morales",
      "url": "/rickie247",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/rickie247",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/31505335?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/31505335?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cc2b1ccfeed2eb655b0c7b",
    "text": "@GNSPS re: uint Thank you Gonçalo, sorry the late reply. But for structs they mention some tight packing features in data, so there it seems to make sense to use uint64, while in contract variables uint256 is best eh",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"GNSPS\" class=\"mention\">@GNSPS</span> re: uint Thank you Gonçalo, sorry the late reply. But for structs they mention some tight packing features in data, so there it seems to make sense to use uint64, while in contract variables uint256 is best eh",
    "sent": "2017-09-27T22:50:04.195Z",
    "editedAt": "2017-09-27T22:50:34.144Z",
    "fromUser": {
      "id": "554e1cee15522ed4b3e02727",
      "username": "flockonus",
      "displayName": "FabianoPS",
      "url": "/flockonus",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/flockonus",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/165553?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/165553?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [
      {
        "screenName": "GNSPS",
        "userId": "54bd42addb8155e6700ed45e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "59cc3647f7299e8f537e778a",
    "text": "@flockonus yes, for storage in a struct, smaller uint and bytes types make sense. Keep in mind  that order counts, so `struct Thing {uint128; uint256; uint128;}` will occupy three slots.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"flockonus\" class=\"mention\">@flockonus</span> yes, for storage in a struct, smaller uint and bytes types make sense. Keep in mind  that order counts, so <code>struct Thing {uint128; uint256; uint128;}</code> will occupy three slots.",
    "sent": "2017-09-27T23:37:43.220Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [
      {
        "screenName": "flockonus",
        "userId": "554e1cee15522ed4b3e02727",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59d67c94f7299e8f53b18fcf",
    "text": "Hello i am working on some smart contracts, I want to call one contract from the other but not only the function, the data of the function also",
    "html": "Hello i am working on some smart contracts, I want to call one contract from the other but not only the function, the data of the function also",
    "sent": "2017-10-05T18:40:20.790Z",
    "fromUser": {
      "id": "58984085d73408ce4f4861e2",
      "username": "mathcrypto",
      "displayName": "mathcrypto",
      "url": "/mathcrypto",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/mathcrypto",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20124778?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20124778?v=4&s=128",
      "v": 25,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59d67c99210ac26920b00756",
    "text": "is it possible?",
    "html": "is it possible?",
    "sent": "2017-10-05T18:40:25.737Z",
    "fromUser": {
      "id": "58984085d73408ce4f4861e2",
      "username": "mathcrypto",
      "displayName": "mathcrypto",
      "url": "/mathcrypto",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/mathcrypto",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20124778?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20124778?v=4&s=128",
      "v": 25,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59d67d6fbbbf9f1a3828614d",
    "text": "this is the first contract function",
    "html": "this is the first contract function",
    "sent": "2017-10-05T18:43:59.370Z",
    "fromUser": {
      "id": "58984085d73408ce4f4861e2",
      "username": "mathcrypto",
      "displayName": "mathcrypto",
      "url": "/mathcrypto",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/mathcrypto",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20124778?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20124778?v=4&s=128",
      "v": 25,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59d67d76b20c642429c9475c",
    "text": "```\nfunction childCareRequest(uint _time, uint _numHours, uint _day, uint _numKids, uint _age, uint _payment) returns (bool amount, bool accept){\n /*If the person has an appointment and need someone to watch the kids, he will pay\n with coverCoins*/ \n if (tokenSupply >= payment) {\n     if (payment >= defaultPayment) {\n     \tamount=true;\n\n\n  }       else {\n  \tamount=false;\n  \t} \n  \t//if person has enough tokens to pay the amount he proposed we accept his request \n  \taccept = true;\n\n} else   {\n\t//if the person does not have enough tokens to pay suggested amount his request will be declined \n\taccept= false;\n} \n} ",
    "html": "<p>```<br>function childCareRequest(uint _time, uint _numHours, uint _day, uint _numKids, uint _age, uint _payment) returns (bool amount, bool accept){<br> /<em>If the person has an appointment and need someone to watch the kids, he will pay<br> with coverCoins</em>/<br> if (tokenSupply &gt;= payment) {<br>     if (payment &gt;= defaultPayment) {<br>         amount=true;</p><p>  }       else {<br>      amount=false;<br>      }<br>      //if person has enough tokens to pay the amount he proposed we accept his request<br>      accept = true;</p><p>} else   {<br>    //if the person does not have enough tokens to pay suggested amount his request will be declined<br>    accept= false;<br>}<br>} </p>",
    "sent": "2017-10-05T18:44:06.364Z",
    "fromUser": {
      "id": "58984085d73408ce4f4861e2",
      "username": "mathcrypto",
      "displayName": "mathcrypto",
      "url": "/mathcrypto",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/mathcrypto",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20124778?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20124778?v=4&s=128",
      "v": 25,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59d67d7d177fb9fe7e42be0a",
    "text": "```\n```",
    "html": "<code>\n</code>",
    "sent": "2017-10-05T18:44:13.748Z",
    "fromUser": {
      "id": "58984085d73408ce4f4861e2",
      "username": "mathcrypto",
      "displayName": "mathcrypto",
      "url": "/mathcrypto",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/mathcrypto",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20124778?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20124778?v=4&s=128",
      "v": 25,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59d67d84210ac26920b00cf0",
    "text": "function childCareRequest(uint _time, uint _numHours, uint _day, uint _numKids, uint _age, uint _payment) returns (bool amount, bool accept){\n /*If the person has an appointment and need someone to watch the kids, he will pay\n with coverCoins*/ \n if (tokenSupply >= payment) {\n     if (payment >= defaultPayment) {\n     \tamount=true;\n\n\n  }       else {\n  \tamount=false;\n  \t} \n  \t//if person has enough tokens to pay the amount he proposed we accept his request \n  \taccept = true;\n\n} else   {\n\t//if the person does not have enough tokens to pay suggested amount his request will be declined \n\taccept= false;\n} \n} ",
    "html": "<p>function childCareRequest(uint _time, uint _numHours, uint _day, uint _numKids, uint _age, uint _payment) returns (bool amount, bool accept){<br> /<em>If the person has an appointment and need someone to watch the kids, he will pay<br> with coverCoins</em>/<br> if (tokenSupply &gt;= payment) {<br>     if (payment &gt;= defaultPayment) {<br>         amount=true;</p><p>  }       else {<br>      amount=false;<br>      }<br>      //if person has enough tokens to pay the amount he proposed we accept his request<br>      accept = true;</p><p>} else   {<br>    //if the person does not have enough tokens to pay suggested amount his request will be declined<br>    accept= false;<br>}<br>} </p>",
    "sent": "2017-10-05T18:44:20.670Z",
    "fromUser": {
      "id": "58984085d73408ce4f4861e2",
      "username": "mathcrypto",
      "displayName": "mathcrypto",
      "url": "/mathcrypto",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/mathcrypto",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20124778?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20124778?v=4&s=128",
      "v": 25,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59d67d91bbbf9f1a38286253",
    "text": "```\n```",
    "html": "<code>\n</code>",
    "sent": "2017-10-05T18:44:33.323Z",
    "fromUser": {
      "id": "58984085d73408ce4f4861e2",
      "username": "mathcrypto",
      "displayName": "mathcrypto",
      "url": "/mathcrypto",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/mathcrypto",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20124778?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20124778?v=4&s=128",
      "v": 25,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59d6a53cb59d55b8237a2622",
    "text": "@mathcrypto  I'm not sure what you mean by \"data of the function\"",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"mathcrypto\" class=\"mention\">@mathcrypto</span>  I&#39;m not sure what you mean by &quot;data of the function&quot;",
    "sent": "2017-10-05T21:33:48.177Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [
      {
        "screenName": "mathcrypto",
        "userId": "58984085d73408ce4f4861e2",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59d6a564614889d4757d8906",
    "text": "also would be nice if you could fix the code formatting for readability",
    "html": "also would be nice if you could fix the code formatting for readability",
    "sent": "2017-10-05T21:34:28.760Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59db47afbbbf9f1a383bc97a",
    "text": "Ico are better off in state machine form ",
    "html": "Ico are better off in state machine form ",
    "sent": "2017-10-09T09:55:59.339Z",
    "fromUser": {
      "id": "5589b15715522ed4b3e28765",
      "username": "18dew",
      "displayName": "thedewer",
      "url": "/18dew",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/18dew",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4244970?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4244970?v=4&s=128",
      "v": 27,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59de09cde44c43700a1d12e1",
    "text": "Hi ..I am writing a crowdsale contract and deployed it on ropsten. Now I have to call its function startCrowdSale as owner. How can I do it?",
    "html": "Hi ..I am writing a crowdsale contract and deployed it on ropsten. Now I have to call its function startCrowdSale as owner. How can I do it?",
    "sent": "2017-10-11T12:08:45.801Z",
    "fromUser": {
      "id": "59de097bd73408ce4f798e9f",
      "username": "iqbalsingh108",
      "displayName": "iqbalsingh108",
      "url": "/iqbalsingh108",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/iqbalsingh108",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4157381?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4157381?v=4&s=128",
      "v": 2,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59de4357bbbf9f1a384b69c8",
    "text": "@iqbalsingh108 the problem with your question is. How can you have deployed a contract as owner, and then not be able to call its function",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"iqbalsingh108\" class=\"mention\">@iqbalsingh108</span> the problem with your question is. How can you have deployed a contract as owner, and then not be able to call its function",
    "sent": "2017-10-11T16:14:15.370Z",
    "fromUser": {
      "id": "5780c02fc2f0db084a222dc7",
      "username": "vince-lynch",
      "displayName": "Vince Lynch",
      "url": "/vince-lynch",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/vince-lynch",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16373282?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16373282?v=4&s=128",
      "v": 39,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [
      {
        "screenName": "iqbalsingh108",
        "userId": "59de097bd73408ce4f798e9f",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59de4360f7299e8f53d52e7d",
    "text": "What I mean is, if you deployed with myetherwallet, or truffle",
    "html": "What I mean is, if you deployed with myetherwallet, or truffle",
    "sent": "2017-10-11T16:14:24.047Z",
    "fromUser": {
      "id": "5780c02fc2f0db084a222dc7",
      "username": "vince-lynch",
      "displayName": "Vince Lynch",
      "url": "/vince-lynch",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/vince-lynch",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16373282?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16373282?v=4&s=128",
      "v": 39,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59de436f210ac26920d341ed",
    "text": "then by its very nature, it means you are logged into the wallet.",
    "html": "then by its very nature, it means you are logged into the wallet.",
    "sent": "2017-10-11T16:14:39.752Z",
    "fromUser": {
      "id": "5780c02fc2f0db084a222dc7",
      "username": "vince-lynch",
      "displayName": "Vince Lynch",
      "url": "/vince-lynch",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/vince-lynch",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16373282?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16373282?v=4&s=128",
      "v": 39,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59de4375bac826f0546073d8",
    "text": "(unlocked)",
    "html": "(unlocked)",
    "sent": "2017-10-11T16:14:45.663Z",
    "fromUser": {
      "id": "5780c02fc2f0db084a222dc7",
      "username": "vince-lynch",
      "displayName": "Vince Lynch",
      "url": "/vince-lynch",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/vince-lynch",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16373282?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16373282?v=4&s=128",
      "v": 39,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59de4393e44c43700a1e77b9",
    "text": "so, for example in myetherwallet, or (maybe you used mist) the functions from the ABI (unless you didn't save the ABI) are avaliable to call as part of the contracts view.",
    "html": "so, for example in myetherwallet, or (maybe you used mist) the functions from the ABI (unless you didn&#39;t save the ABI) are avaliable to call as part of the contracts view.",
    "sent": "2017-10-11T16:15:15.793Z",
    "fromUser": {
      "id": "5780c02fc2f0db084a222dc7",
      "username": "vince-lynch",
      "displayName": "Vince Lynch",
      "url": "/vince-lynch",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/vince-lynch",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16373282?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16373282?v=4&s=128",
      "v": 39,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59de7869bac826f05461b31c",
    "text": "Has anyone used \"Gasper\" for gas analysis of solidity contracts? Its described in a paper named [\"Under-Optimized Smart Contracts Devour Your Money\"](https://arxiv.org/pdf/1703.03994.pdf) published on 11 march, 2017",
    "html": "Has anyone used &quot;Gasper&quot; for gas analysis of solidity contracts? Its described in a paper named <a href=\"https://arxiv.org/pdf/1703.03994.pdf\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">&quot;Under-Optimized Smart Contracts Devour Your Money&quot;</a> published on 11 march, 2017",
    "sent": "2017-10-11T20:00:41.155Z",
    "fromUser": {
      "id": "59118519d73408ce4f5e1a79",
      "username": "AyushyaChitransh",
      "displayName": "Ayushya Chitransh",
      "url": "/AyushyaChitransh",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/AyushyaChitransh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=128",
      "v": 37,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [
      {
        "url": "https://arxiv.org/pdf/1703.03994.pdf"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59de787bf7299e8f53d673d6",
    "text": "I am searching for the tool but haven't been able to find it anywhere!",
    "html": "I am searching for the tool but haven&#39;t been able to find it anywhere!",
    "sent": "2017-10-11T20:00:59.527Z",
    "editedAt": "2017-10-11T20:01:09.998Z",
    "fromUser": {
      "id": "59118519d73408ce4f5e1a79",
      "username": "AyushyaChitransh",
      "displayName": "Ayushya Chitransh",
      "url": "/AyushyaChitransh",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/AyushyaChitransh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=128",
      "v": 37,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "59de78d301110b7231a4217c",
    "text": "Hmm, no, I've never used it @AyushyaChitransh. But would appreciate if you circle back if/when you find it!",
    "html": "Hmm, no, I&#39;ve never used it <span data-link-type=\"mention\" data-screen-name=\"AyushyaChitransh\" class=\"mention\">@AyushyaChitransh</span>. But would appreciate if you circle back if/when you find it!",
    "sent": "2017-10-11T20:02:27.857Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [
      {
        "screenName": "AyushyaChitransh",
        "userId": "59118519d73408ce4f5e1a79",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59de79583cb340a26111ff37",
    "text": "I'll remember to come back if I am able to find it!",
    "html": "I&#39;ll remember to come back if I am able to find it!",
    "sent": "2017-10-11T20:04:40.192Z",
    "fromUser": {
      "id": "59118519d73408ce4f5e1a79",
      "username": "AyushyaChitransh",
      "displayName": "Ayushya Chitransh",
      "url": "/AyushyaChitransh",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/AyushyaChitransh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=128",
      "v": 37,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59de863df7299e8f53d6c2be",
    "text": "@AyushyaChitransh I suspect it hasn’t been released yet (probably obvious) or they’ve released it under a new name maybe. Might be keeping it private as a tool in their arsenal for contract auditing/review purposes, to have a competitive edge if they’re in that area of the field",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"AyushyaChitransh\" class=\"mention\">@AyushyaChitransh</span> I suspect it hasn’t been released yet (probably obvious) or they’ve released it under a new name maybe. Might be keeping it private as a tool in their arsenal for contract auditing/review purposes, to have a competitive edge if they’re in that area of the field",
    "sent": "2017-10-11T20:59:41.782Z",
    "fromUser": {
      "id": "5457facddb8155e6700d0cfa",
      "username": "jaddison",
      "displayName": "James Addison",
      "url": "/jaddison",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jaddison",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/101148?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/101148?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [
      {
        "screenName": "AyushyaChitransh",
        "userId": "59118519d73408ce4f5e1a79",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59e03d1fbac826f0546aa213",
    "text": "I am working through an example in which I want to use a ERC20 coin that I created with another second contract to \"purchase\" something in the second contract - I was thinking to have users \"allow\" the second contract address to spend a limit of their coin, I'm importing the coin contract, etc. but this isn't working...any suggestions much appreciated. (*disclaimer: this is complete practice, not live coins are being harmed in the making of this contract*)",
    "html": "I am working through an example in which I want to use a ERC20 coin that I created with another second contract to &quot;purchase&quot; something in the second contract - I was thinking to have users &quot;allow&quot; the second contract address to spend a limit of their coin, I&#39;m importing the coin contract, etc. but this isn&#39;t working...any suggestions much appreciated. (<em>disclaimer: this is complete practice, not live coins are being harmed in the making of this contract</em>)",
    "sent": "2017-10-13T04:12:15.385Z",
    "fromUser": {
      "id": "59511a72d73408ce4f6a3063",
      "username": "thekscar",
      "displayName": "Karen",
      "url": "/thekscar",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thekscar",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59e0c582614889d475adc998",
    "text": "@kds0718 It's hard to say what might be wrong without seeing some code and the error you're getting. ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"kds0718\" class=\"mention\">@kds0718</span> It&#39;s hard to say what might be wrong without seeing some code and the error you&#39;re getting. ",
    "sent": "2017-10-13T13:54:10.437Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [
      {
        "screenName": "kds0718",
        "userId": "59511a72d73408ce4f6a3063",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59e2955c177fb9fe7e7c3b42",
    "text": "can you get the information for sendRawTransaction from sendTransaction()",
    "html": "can you get the information for sendRawTransaction from sendTransaction()",
    "sent": "2017-10-14T22:53:16.783Z",
    "fromUser": {
      "id": "5780c02fc2f0db084a222dc7",
      "username": "vince-lynch",
      "displayName": "Vince Lynch",
      "url": "/vince-lynch",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/vince-lynch",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16373282?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16373282?v=4&s=128",
      "v": 39,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59e8cf51f7299e8f5309af6c",
    "text": "@maurelian I figured out my error - needed to reference the coin contract instance. Thank you anyways. ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> I figured out my error - needed to reference the coin contract instance. Thank you anyways. ",
    "sent": "2017-10-19T16:14:09.928Z",
    "fromUser": {
      "id": "59511a72d73408ce4f6a3063",
      "username": "thekscar",
      "displayName": "Karen",
      "url": "/thekscar",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thekscar",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59e8d698e44c43700a52f9ef",
    "text": ":thumbsup: ",
    "html": ":thumbsup: ",
    "sent": "2017-10-19T16:45:12.143Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59e9b285210ac269200c31a6",
    "text": "var code = \"ddd\";\n",
    "html": "var code = &quot;ddd&quot;;",
    "sent": "2017-10-20T08:23:33.724Z",
    "fromUser": {
      "id": "588492c2d73408ce4f453064",
      "username": "illi_terate_twitter",
      "displayName": "Ilhan",
      "url": "/illi_terate_twitter",
      "avatarUrl": "https://avatars-03.gitter.im/g/u/illi_terate_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/3070828895/62018ecf3ce45195ba53455bc5a58294_bigger.jpeg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/3070828895/62018ecf3ce45195ba53455bc5a58294.jpeg"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59e9b29e01110b7231dc08d0",
    "text": "'''dd'''",
    "html": "&#39;&#39;&#39;dd&#39;&#39;&#39;",
    "sent": "2017-10-20T08:23:58.774Z",
    "fromUser": {
      "id": "588492c2d73408ce4f453064",
      "username": "illi_terate_twitter",
      "displayName": "Ilhan",
      "url": "/illi_terate_twitter",
      "avatarUrl": "https://avatars-03.gitter.im/g/u/illi_terate_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/3070828895/62018ecf3ce45195ba53455bc5a58294_bigger.jpeg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/3070828895/62018ecf3ce45195ba53455bc5a58294.jpeg"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59eac00401110b7231e16ebd",
    "text": "Hi, Can someone explain what is memory and storage in solidity ? And when would you use them ?",
    "html": "Hi, Can someone explain what is memory and storage in solidity ? And when would you use them ?",
    "sent": "2017-10-21T03:33:24.613Z",
    "fromUser": {
      "id": "57d207cc40f3a6eec0644954",
      "username": "subramanianv",
      "displayName": "Subramanian Venkatesan",
      "url": "/subramanianv",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/subramanianv",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2791921?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2791921?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59eadcf3e44c43700a5ce244",
    "text": "@subramanianv Memory is for temporary variable. And storage is for permanent variables. Data of variables stored in \"storage\" is stored in blokchain while data for memory variables is not stored permanently, it is just used for some tempporary calculations.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"subramanianv\" class=\"mention\">@subramanianv</span> Memory is for temporary variable. And storage is for permanent variables. Data of variables stored in &quot;storage&quot; is stored in blokchain while data for memory variables is not stored permanently, it is just used for some tempporary calculations.",
    "sent": "2017-10-21T05:36:51.690Z",
    "fromUser": {
      "id": "59118519d73408ce4f5e1a79",
      "username": "AyushyaChitransh",
      "displayName": "Ayushya Chitransh",
      "url": "/AyushyaChitransh",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/AyushyaChitransh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=128",
      "v": 37,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [
      {
        "screenName": "subramanianv",
        "userId": "57d207cc40f3a6eec0644954",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59eadd36210ac26920121674",
    "text": "Memory variables do not cost any gas, since they are not stored on blockchain.  While modifying storage variables cost gas.",
    "html": "Memory variables do not cost any gas, since they are not stored on blockchain.  While modifying storage variables cost gas.",
    "sent": "2017-10-21T05:37:58.484Z",
    "fromUser": {
      "id": "59118519d73408ce4f5e1a79",
      "username": "AyushyaChitransh",
      "displayName": "Ayushya Chitransh",
      "url": "/AyushyaChitransh",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/AyushyaChitransh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=128",
      "v": 37,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59eb55b48808bed73d0eab2d",
    "text": "@subramanianv to add to @AyushyaChitransh's response, memory is only persistent in the context of a given call to a single contract.  Writing and reading to memory do cost something, but much, much less than storage.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"subramanianv\" class=\"mention\">@subramanianv</span> to add to <span data-link-type=\"mention\" data-screen-name=\"AyushyaChitransh\" class=\"mention\">@AyushyaChitransh</span>&#39;s response, memory is only persistent in the context of a given call to a single contract.  Writing and reading to memory do cost something, but much, much less than storage.",
    "sent": "2017-10-21T14:12:04.973Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [
      {
        "screenName": "subramanianv",
        "userId": "57d207cc40f3a6eec0644954",
        "userIds": []
      },
      {
        "screenName": "AyushyaChitransh",
        "userId": "59118519d73408ce4f5e1a79",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59ed60a8f7299e8f531dc1c8",
    "text": "i have a question that my \"pet-shop\" (a demo project from         http://truffleframework.com/tutorials/pet-shop#instantiating-web3), I have done all the same operations  until the last operation that I click the \"adopt \" button , there is no reaction. i tried it again and again , the question is  I don't know what caused it to fail to work . Is there anyone has the same problem with me? help me about it ~",
    "html": "i have a question that my &quot;pet-shop&quot; (a demo project from         <a href=\"http://truffleframework.com/tutorials/pet-shop#instantiating-web3\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://truffleframework.com/tutorials/pet-shop#instantiating-web3</a>), I have done all the same operations  until the last operation that I click the &quot;adopt &quot; button , there is no reaction. i tried it again and again , the question is  I don&#39;t know what caused it to fail to work . Is there anyone has the same problem with me? help me about it ~",
    "sent": "2017-10-23T03:23:20.885Z",
    "fromUser": {
      "id": "59ed5f15d73408ce4f7b36b3",
      "username": "baozijian_twitter",
      "displayName": "david",
      "url": "/baozijian_twitter",
      "avatarUrl": "https://avatars-02.gitter.im/g/u/baozijian_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/882605748995280896/Jcm6QczU_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/882605748995280896/Jcm6QczU.jpg"
    },
    "unread": false,
    "readBy": 27,
    "urls": [
      {
        "url": "http://truffleframework.com/tutorials/pet-shop#instantiating-web3"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59efe90be44c43700a742080",
    "text": "@AyushyaChitransh Thanks for the reply. So in a solidity function, if you want to initialize a struct, You create a struct in memory, initialize all the struct members and then assign it to a global mapping ?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"AyushyaChitransh\" class=\"mention\">@AyushyaChitransh</span> Thanks for the reply. So in a solidity function, if you want to initialize a struct, You create a struct in memory, initialize all the struct members and then assign it to a global mapping ?",
    "sent": "2017-10-25T01:29:47.959Z",
    "fromUser": {
      "id": "57d207cc40f3a6eec0644954",
      "username": "subramanianv",
      "displayName": "Subramanian Venkatesan",
      "url": "/subramanianv",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/subramanianv",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2791921?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2791921?v=4&s=128",
      "v": 11,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [
      {
        "screenName": "AyushyaChitransh",
        "userId": "59118519d73408ce4f5e1a79",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59efea1d8808bed73d247aad",
    "text": "From what I've seen structs are almost always used for storage in a mapping, yes.",
    "html": "From what I&#39;ve seen structs are almost always used for storage in a mapping, yes.",
    "sent": "2017-10-25T01:34:21.399Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59f072258808bed73d26eace",
    "text": "hi, does someone have a good source code of 2 smart-contracts: 1 for presale, 1 for ico, with 2 tokens, refund, etc",
    "html": "hi, does someone have a good source code of 2 smart-contracts: 1 for presale, 1 for ico, with 2 tokens, refund, etc",
    "sent": "2017-10-25T11:14:45.298Z",
    "fromUser": {
      "id": "5994a06bd73408ce4f71af1f",
      "username": "alexyalunin",
      "displayName": "Alex Yalunin",
      "url": "/alexyalunin",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/alexyalunin",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/23011284?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/23011284?v=4&s=128",
      "v": 4,
      "gv": "4"
    },
    "unread": false,
    "readBy": 32,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59f0d436d6c36fca31971840",
    "text": "@subramanianv Yes! That is correct! As @maurelian confirmed, this is the procedure what most  of us do",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"subramanianv\" class=\"mention\">@subramanianv</span> Yes! That is correct! As <span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> confirmed, this is the procedure what most  of us do",
    "sent": "2017-10-25T18:13:10.317Z",
    "fromUser": {
      "id": "59118519d73408ce4f5e1a79",
      "username": "AyushyaChitransh",
      "displayName": "Ayushya Chitransh",
      "url": "/AyushyaChitransh",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/AyushyaChitransh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=128",
      "v": 37,
      "gv": "4"
    },
    "unread": false,
    "readBy": 33,
    "urls": [],
    "mentions": [
      {
        "screenName": "subramanianv",
        "userId": "57d207cc40f3a6eec0644954",
        "userIds": []
      },
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59f1e2f9d6c36fca319c7214",
    "text": "Getting this after constructor in a factory pattern for creating contracts -   no code at address 0x0000000000000000000000000000000000000000",
    "html": "Getting this after constructor in a factory pattern for creating contracts -   no code at address 0x0000000000000000000000000000000000000000",
    "sent": "2017-10-26T13:28:25.134Z",
    "fromUser": {
      "id": "588a302fd73408ce4f4640ee",
      "username": "msharma011",
      "displayName": "msharma011",
      "url": "/msharma011",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/msharma011",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/17484161?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/17484161?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 33,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59f1e30e32e080696e2a4483",
    "text": "I  am running a private blockchain to the the account does have enough ether",
    "html": "I  am running a private blockchain to the the account does have enough ether",
    "sent": "2017-10-26T13:28:46.059Z",
    "fromUser": {
      "id": "588a302fd73408ce4f4640ee",
      "username": "msharma011",
      "displayName": "msharma011",
      "url": "/msharma011",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/msharma011",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/17484161?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/17484161?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 33,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59f1f3198808bed73d2f1ff7",
    "text": "Sorry @msharma011 without some code sample (please use code fenced formatting if posting in gitter), I have no idea how to even think about helping.",
    "html": "Sorry <span data-link-type=\"mention\" data-screen-name=\"msharma011\" class=\"mention\">@msharma011</span> without some code sample (please use code fenced formatting if posting in gitter), I have no idea how to even think about helping.",
    "sent": "2017-10-26T14:37:13.426Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 33,
    "urls": [],
    "mentions": [
      {
        "screenName": "msharma011",
        "userId": "588a302fd73408ce4f4640ee",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59fb2d942a69af844b3cfb1c",
    "text": "I have seen some stackoverflow questions in regards to [checking whether or not an address is a contract](https://stackoverflow.com/questions/37644395/how-to-find-out-if-an-ethereum-address-is-a-contract?newreg=b7ba785d57124812910577867f60ded9), I wanted to check if there were any issues using a modifier to do this? It seems to be working so far, but I'm not sure if I'm missing anything or not accounting for something that could happen with the modifier....\n```\n   modifier onlyContracts(address potentialContract) \n    {\n        uint size;\n        assembly {size := extcodesize(potentialContract)}\n        require(size > 0);\n        _;\n    }\n```\n",
    "html": "I have seen some stackoverflow questions in regards to <a href=\"https://stackoverflow.com/questions/37644395/how-to-find-out-if-an-ethereum-address-is-a-contract?newreg=b7ba785d57124812910577867f60ded9\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">checking whether or not an address is a contract</a>, I wanted to check if there were any issues using a modifier to do this? It seems to be working so far, but I&#39;m not sure if I&#39;m missing anything or not accounting for something that could happen with the modifier....<pre><code>   modifier <span class=\"function\">onlyContracts</span>(<span class=\"tag\">address</span> potentialContract) \n    {\n        uint size;\n        assembly {size <span class=\"value\">:= <span class=\"function\">extcodesize</span>(potentialContract)}\n        <span class=\"function\">require</span>(size &gt; <span class=\"number\">0</span>);</span>\n        _;\n    }</code></pre>",
    "sent": "2017-11-02T14:37:08.313Z",
    "editedAt": "2017-11-02T14:38:32.464Z",
    "fromUser": {
      "id": "59511a72d73408ce4f6a3063",
      "username": "thekscar",
      "displayName": "Karen",
      "url": "/thekscar",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thekscar",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [
      {
        "url": "https://stackoverflow.com/questions/37644395/how-to-find-out-if-an-ethereum-address-is-a-contract?newreg=b7ba785d57124812910577867f60ded9"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "59fb2e74f7299e8f53632ea2",
    "text": "I don't see an issue with that @kds0718, but not sure what the value of that is? Anyone could simply use a proxy contract to make a call to get past it. ",
    "html": "I don&#39;t see an issue with that <span data-link-type=\"mention\" data-screen-name=\"kds0718\" class=\"mention\">@kds0718</span>, but not sure what the value of that is? Anyone could simply use a proxy contract to make a call to get past it. ",
    "sent": "2017-11-02T14:40:52.029Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [
      {
        "screenName": "kds0718",
        "userId": "59511a72d73408ce4f6a3063",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59fb2ef64ff065ac18a8d0b2",
    "text": "@maurelian That's a good point...I'm thinking more an operator error check, I suppose. I've got a function accepting an address for an EOA and one for a contract for an interface. If the user were to switch the order, it would mess up the rest of the contract.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> That&#39;s a good point...I&#39;m thinking more an operator error check, I suppose. I&#39;ve got a function accepting an address for an EOA and one for a contract for an interface. If the user were to switch the order, it would mess up the rest of the contract.",
    "sent": "2017-11-02T14:43:02.377Z",
    "fromUser": {
      "id": "59511a72d73408ce4f6a3063",
      "username": "thekscar",
      "displayName": "Karen",
      "url": "/thekscar",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thekscar",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59fb31955a1758ed0f7dc78b",
    "text": "Not sure what is meant by \"switch the order\". \nis it possible to maintain a registry of contracts that can call your function?\nMaybe you can set a flag somewhere to ensure the functions are called in the right order?",
    "html": "Not sure what is meant by &quot;switch the order&quot;.<br>is it possible to maintain a registry of contracts that can call your function?<br>Maybe you can set a flag somewhere to ensure the functions are called in the right order?",
    "sent": "2017-11-02T14:54:13.924Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59fb3336b20c6424297bea4d",
    "text": "Ah ok, I see what you mean. The registry makes more sense...some could just come in with any contract and any interface otherwise. Thank you @maurelian . (And confusing wording on my part, there's one function that accepts two address, one EOA and one contract at the same time). ",
    "html": "Ah ok, I see what you mean. The registry makes more sense...some could just come in with any contract and any interface otherwise. Thank you <span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> . (And confusing wording on my part, there&#39;s one function that accepts two address, one EOA and one contract at the same time). ",
    "sent": "2017-11-02T15:01:10.604Z",
    "fromUser": {
      "id": "59511a72d73408ce4f6a3063",
      "username": "thekscar",
      "displayName": "Karen",
      "url": "/thekscar",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thekscar",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59fb4097b20c6424297c3edd",
    "text": "Does anyone have an idea of the vulnerability in the following contract ?\nIt's part of some challenge challenge but i'm really stuck ;/\n\n```\npragma solidity ^0.4.11;\n\nimport '../zeppelin-solidity/contracts/ownership/Ownable.sol';\n\ncontract Fallout is Ownable {\n\n  mapping (address => uint) allocations;\n\n  /* constructor */\n  function Fal1out() payable {\n    owner = msg.sender;\n    allocations[owner] = msg.value;\n  }\n\n  function allocate() public payable {\n    allocations[msg.sender] += msg.value;\n  }\n\n  function sendAllocation(address allocator) public {\n    require(allocations[allocator] > 0);\n    allocator.transfer(allocations[allocator]);\n  }\n\n  function collectAllocations() public onlyOwner {\n    msg.sender.transfer(this.balance);\n  }\n\n  function allocatorBalance(address allocator) public constant returns (uint) {\n    return allocations[allocator];\n  }\n}\n```",
    "html": "Does anyone have an idea of the vulnerability in the following contract ?<br>It&#39;s part of some challenge challenge but i&#39;m really stuck ;/<pre><code>pragma solidity ^<span class=\"number\">0.4</span>.11;\n\n<span class=\"keyword\">import</span> <span class=\"string\">'../zeppelin-solidity/contracts/ownership/Ownable.sol'</span>;\n\ncontract Fallout is Ownable {\n\n  mapping (address =&gt; uint) allocations;\n\n  <span class=\"comment\">/* constructor */</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Fal1out</span><span class=\"params\">()</span> <span class=\"title\">payable</span> </span>{\n    owner = msg.sender;\n    allocations[owner] = msg.value;\n  }\n\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">allocate</span><span class=\"params\">()</span> <span class=\"title\">public</span> <span class=\"title\">payable</span> </span>{\n    allocations[msg.sender] += msg.value;\n  }\n\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sendAllocation</span><span class=\"params\">(address allocator)</span> <span class=\"title\">public</span> </span>{\n    <span class=\"built_in\">require</span>(allocations[allocator] &gt; <span class=\"number\">0</span>);\n    allocator.transfer(allocations[allocator]);\n  }\n\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">collectAllocations</span><span class=\"params\">()</span> <span class=\"title\">public</span> <span class=\"title\">onlyOwner</span> </span>{\n    msg.sender.transfer(<span class=\"keyword\">this</span>.balance);\n  }\n\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">allocatorBalance</span><span class=\"params\">(address allocator)</span> <span class=\"title\">public</span> <span class=\"title\">constant</span> <span class=\"title\">returns</span> <span class=\"params\">(uint)</span> </span>{\n    <span class=\"keyword\">return</span> allocations[allocator];\n  }\n}</code></pre>",
    "sent": "2017-11-02T15:58:15.908Z",
    "fromUser": {
      "id": "56cc6588e610378809c3018c",
      "username": "Dvisacker",
      "displayName": "David Van Isacker",
      "url": "/Dvisacker",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Dvisacker",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11384092?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11384092?v=4&s=128",
      "v": 12,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59fb58945a1758ed0f7eb5c7",
    "text": "@Dvisacker If you have a look through https://solidity.readthedocs.io/en/develop/security-considerations.html, I think they should jump out at you. Also, https://github.com/ConsenSys/smart-contract-best-practices. Hate to just tell you without the experts explaining it far better than I could :)",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"Dvisacker\" class=\"mention\">@Dvisacker</span> If you have a look through <a href=\"https://solidity.readthedocs.io/en/develop/security-considerations.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://solidity.readthedocs.io/en/develop/security-considerations.html</a>, I think they should jump out at you. Also, <a href=\"https://github.com/ConsenSys/smart-contract-best-practices\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/ConsenSys/smart-contract-best-practices</a>. Hate to just tell you without the experts explaining it far better than I could :)",
    "sent": "2017-11-02T17:40:36.088Z",
    "fromUser": {
      "id": "59511a72d73408ce4f6a3063",
      "username": "thekscar",
      "displayName": "Karen",
      "url": "/thekscar",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thekscar",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [
      {
        "url": "https://solidity.readthedocs.io/en/develop/security-considerations.html"
      },
      {
        "url": "https://github.com/ConsenSys/smart-contract-best-practices"
      }
    ],
    "mentions": [
      {
        "screenName": "Dvisacker",
        "userId": "56cc6588e610378809c3018c",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59fb5decd6c36fca31cb00d3",
    "text": "new repo location actually: https://consensys.github.io/smart-contract-best-practices/",
    "html": "new repo location actually: <a href=\"https://consensys.github.io/smart-contract-best-practices/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://consensys.github.io/smart-contract-best-practices/</a>",
    "sent": "2017-11-02T18:03:24.442Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [
      {
        "url": "https://consensys.github.io/smart-contract-best-practices/"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59fb5e9d2a69af844b3e378a",
    "text": "Is there anything wrong with an Interface, inheriting from a contract. Then, the interface being inherited by a the top contract?",
    "html": "Is there anything wrong with an Interface, inheriting from a contract. Then, the interface being inherited by a the top contract?",
    "sent": "2017-11-02T18:06:21.429Z",
    "fromUser": {
      "id": "59fa3d14d73408ce4f7cbe75",
      "username": "wisdomcsharp",
      "displayName": "Wisdom",
      "url": "/wisdomcsharp",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/wisdomcsharp",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7809554?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7809554?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59fb5edd614889d475310458",
    "text": "well, you want to avoid your inheritance tree getting too complex ",
    "html": "well, you want to avoid your inheritance tree getting too complex ",
    "sent": "2017-11-02T18:07:25.977Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59fb5eeb4ff065ac18aa0a41",
    "text": "that in my experience makes it harder to reason about",
    "html": "that in my experience makes it harder to reason about",
    "sent": "2017-11-02T18:07:39.277Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59fb5f07f7299e8f53646084",
    "text": "Okay thanks. Just found interface can't inherit.",
    "html": "Okay thanks. Just found interface can&#39;t inherit.",
    "sent": "2017-11-02T18:08:07.150Z",
    "editedAt": "2017-11-02T18:10:09.966Z",
    "fromUser": {
      "id": "59fa3d14d73408ce4f7cbe75",
      "username": "wisdomcsharp",
      "displayName": "Wisdom",
      "url": "/wisdomcsharp",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/wisdomcsharp",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7809554?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7809554?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 28,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "59fbeccf32e080696e5b75c1",
    "text": "@Karen Thanks !",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"Karen\" class=\"mention\">@Karen</span> Thanks !",
    "sent": "2017-11-03T04:13:03.630Z",
    "fromUser": {
      "id": "56cc6588e610378809c3018c",
      "username": "Dvisacker",
      "displayName": "David Van Isacker",
      "url": "/Dvisacker",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Dvisacker",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11384092?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11384092?v=4&s=128",
      "v": 12,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [
      {
        "screenName": "Karen",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59fdad085a1758ed0f89c204",
    "text": "Hello, wanted to ask, does ConseSys provide audit for smart controcts?",
    "html": "Hello, wanted to ask, does ConseSys provide audit for smart controcts?",
    "sent": "2017-11-04T12:05:28.345Z",
    "fromUser": {
      "id": "59f436e4d73408ce4f7c19a5",
      "username": "mazvydasm",
      "displayName": "Mazvydas Mackevicius",
      "url": "/mazvydasm",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/mazvydasm",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5641102?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5641102?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59fdc31ef7299e8f536fcaed",
    "text": "@mazvydasm You need auditing?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"mazvydasm\" class=\"mention\">@mazvydasm</span> You need auditing?",
    "sent": "2017-11-04T13:39:42.135Z",
    "fromUser": {
      "id": "59cf1180d73408ce4f77fc7e",
      "username": "chuacw",
      "displayName": "Chua Chee Wee",
      "url": "/chuacw",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chuacw",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1757930?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [
      {
        "screenName": "mazvydasm",
        "userId": "59f436e4d73408ce4f7c19a5",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59fde714976e63937e286f95",
    "text": "yes, we do. diligence@consensys.net",
    "html": "yes, we do. <a href=\"mailto:diligence@consensys.net\" rel=\"nofollow\">diligence@consensys.net</a>",
    "sent": "2017-11-04T16:13:08.943Z",
    "editedAt": "2017-11-04T16:13:20.102Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [
      {
        "url": "mailto:diligence@consensys.net"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "59fde7354ff065ac18b629b1",
    "text": "Please provide the following info: \n\n* Scoping: \n  * What is the nature and use case of your contract system?\n  * Do you expect to store a large amount of funds on-chain?\n  * How many lines of solidity code?\n  * Approximately how much of the code reused from previous\n* Timeline:\n  * We ask that you meet our [criteria for preparedness](https://media.consensys.net/preparing-for-a-smart-contract-code-audit-83691200cb9c), which includes a functional specification, and a git commit hash for a frozen codebase, when could you provide that? \n  * What is your timeline for completion of an audit?",
    "html": "Please provide the following info: <ul>\n<li>Scoping: <ul>\n<li>What is the nature and use case of your contract system?</li>\n<li>Do you expect to store a large amount of funds on-chain?</li>\n<li>How many lines of solidity code?</li>\n<li>Approximately how much of the code reused from previous</li>\n</ul>\n</li>\n<li>Timeline:<ul>\n<li>We ask that you meet our <a href=\"https://media.consensys.net/preparing-for-a-smart-contract-code-audit-83691200cb9c\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">criteria for preparedness</a>, which includes a functional specification, and a git commit hash for a frozen codebase, when could you provide that? </li>\n<li>What is your timeline for completion of an audit?</li>\n</ul>\n</li>\n</ul>\n",
    "sent": "2017-11-04T16:13:41.341Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [
      {
        "url": "https://media.consensys.net/preparing-for-a-smart-contract-code-audit-83691200cb9c"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59ff4fb24ff065ac18bbba6e",
    "text": "hi all",
    "html": "hi all",
    "sent": "2017-11-05T17:51:46.828Z",
    "fromUser": {
      "id": "59ff4f80d73408ce4f7d3e5e",
      "username": "erjan",
      "displayName": "Erjan",
      "url": "/erjan",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/erjan",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4441068?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4441068?v=4&s=128",
      "v": 2,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59ff4fd8614889d475426064",
    "text": "hello! @erjan",
    "html": "hello! <span data-link-type=\"mention\" data-screen-name=\"erjan\" class=\"mention\">@erjan</span>",
    "sent": "2017-11-05T17:52:24.288Z",
    "editedAt": "2017-11-05T17:52:33.515Z",
    "fromUser": {
      "id": "59118519d73408ce4f5e1a79",
      "username": "AyushyaChitransh",
      "displayName": "Ayushya Chitransh",
      "url": "/AyushyaChitransh",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/AyushyaChitransh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=128",
      "v": 37,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [
      {
        "screenName": "erjan",
        "userId": "59ff4f80d73408ce4f7d3e5e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "59ff4fe9614889d4754260c0",
    "text": "the audit is very useful service ! thank u guys , audit is free?",
    "html": "the audit is very useful service ! thank u guys , audit is free?",
    "sent": "2017-11-05T17:52:41.458Z",
    "fromUser": {
      "id": "59ff4f80d73408ce4f7d3e5e",
      "username": "erjan",
      "displayName": "Erjan",
      "url": "/erjan",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/erjan",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4441068?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4441068?v=4&s=128",
      "v": 2,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59ff4ff3d6c36fca31dca1ce",
    "text": "if we provide the necessary specs?",
    "html": "if we provide the necessary specs?",
    "sent": "2017-11-05T17:52:51.570Z",
    "fromUser": {
      "id": "59ff4f80d73408ce4f7d3e5e",
      "username": "erjan",
      "displayName": "Erjan",
      "url": "/erjan",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/erjan",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4441068?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4441068?v=4&s=128",
      "v": 2,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59ff5025976e63937e2e2053",
    "text": "we have just launched our lil startup in Kazakstan, block chain + real estate = no middle men",
    "html": "we have just launched our lil startup in Kazakstan, block chain + real estate = no middle men",
    "sent": "2017-11-05T17:53:41.618Z",
    "fromUser": {
      "id": "59ff4f80d73408ce4f7d3e5e",
      "username": "erjan",
      "displayName": "Erjan",
      "url": "/erjan",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/erjan",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4441068?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4441068?v=4&s=128",
      "v": 2,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59ff503832e080696e6a1426",
    "text": "@erjan You should contact diligence@consensys.net for this info.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"erjan\" class=\"mention\">@erjan</span> You should contact <a href=\"mailto:diligence@consensys.net\" rel=\"nofollow\">diligence@consensys.net</a> for this info.",
    "sent": "2017-11-05T17:54:00.659Z",
    "fromUser": {
      "id": "59118519d73408ce4f5e1a79",
      "username": "AyushyaChitransh",
      "displayName": "Ayushya Chitransh",
      "url": "/AyushyaChitransh",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/AyushyaChitransh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=128",
      "v": 37,
      "gv": "4"
    },
    "unread": false,
    "readBy": 28,
    "urls": [
      {
        "url": "mailto:diligence@consensys.net"
      }
    ],
    "mentions": [
      {
        "screenName": "erjan",
        "userId": "59ff4f80d73408ce4f7d3e5e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59ff503c2a69af844b4fbd19",
    "text": "ok thx",
    "html": "ok thx",
    "sent": "2017-11-05T17:54:04.921Z",
    "fromUser": {
      "id": "59ff4f80d73408ce4f7d3e5e",
      "username": "erjan",
      "displayName": "Erjan",
      "url": "/erjan",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/erjan",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4441068?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4441068?v=4&s=128",
      "v": 2,
      "gv": "4"
    },
    "unread": false,
    "readBy": 28,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a00cb65d6c36fca31e3b2e9",
    "text": "Can someone tell me how I can work with decimal places",
    "html": "Can someone tell me how I can work with decimal places",
    "sent": "2017-11-06T20:51:49.954Z",
    "fromUser": {
      "id": "5780c02fc2f0db084a222dc7",
      "username": "vince-lynch",
      "displayName": "Vince Lynch",
      "url": "/vince-lynch",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/vince-lynch",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16373282?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16373282?v=4&s=128",
      "v": 39,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a00cb7286d308b755b68c84",
    "text": "so, suppose I want to times 1 * 0.54",
    "html": "so, suppose I want to times 1 * 0.54",
    "sent": "2017-11-06T20:52:02.287Z",
    "fromUser": {
      "id": "5780c02fc2f0db084a222dc7",
      "username": "vince-lynch",
      "displayName": "Vince Lynch",
      "url": "/vince-lynch",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/vince-lynch",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16373282?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16373282?v=4&s=128",
      "v": 39,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a00cb8786d308b755b68d0f",
    "text": "can someone think of a way to do this, obviously I know solidity doesn't support decimals.",
    "html": "can someone think of a way to do this, obviously I know solidity doesn&#39;t support decimals.",
    "sent": "2017-11-06T20:52:23.623Z",
    "fromUser": {
      "id": "5780c02fc2f0db084a222dc7",
      "username": "vince-lynch",
      "displayName": "Vince Lynch",
      "url": "/vince-lynch",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/vince-lynch",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16373282?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16373282?v=4&s=128",
      "v": 39,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a018a89df09362e67d9f2c4",
    "text": "Error encountered, bailing. Network state unknown. Review successful transactions manually.\nError: The contract code couldn't be stored, please check your gas amount.\n",
    "html": "Error encountered, bailing. Network state unknown. Review successful transactions manually.<br>Error: The contract code couldn&#39;t be stored, please check your gas amount.",
    "sent": "2017-11-07T10:27:21.518Z",
    "fromUser": {
      "id": "58f5d25ad73408ce4f5925be",
      "username": "charry1729",
      "displayName": "charry1729",
      "url": "/charry1729",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/charry1729",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/17219849?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/17219849?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a018aa3f7299e8f53808eeb",
    "text": "changing gas in truffle doesnot help",
    "html": "changing gas in truffle doesnot help",
    "sent": "2017-11-07T10:27:47.920Z",
    "fromUser": {
      "id": "58f5d25ad73408ce4f5925be",
      "username": "charry1729",
      "displayName": "charry1729",
      "url": "/charry1729",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/charry1729",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/17219849?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/17219849?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a01d1cb976e63937e3a9abe",
    "text": "@vince-lynch I think the best you can do is 1 * 54/100.  Ultimately you're  going to have to deal with integer division. ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"vince-lynch\" class=\"mention\">@vince-lynch</span> I think the best you can do is 1 * 54/100.  Ultimately you&#39;re  going to have to deal with integer division. ",
    "sent": "2017-11-07T15:31:23.392Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [
      {
        "screenName": "vince-lynch",
        "userId": "5780c02fc2f0db084a222dc7",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a01d1da5a1758ed0f9cb0cb",
    "text": "Also, support is coming for fixed point numbers: https://solidity.readthedocs.io/en/develop/types.html#fixed-point-numbers",
    "html": "Also, support is coming for fixed point numbers: <a href=\"https://solidity.readthedocs.io/en/develop/types.html#fixed-point-numbers\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://solidity.readthedocs.io/en/develop/types.html#fixed-point-numbers</a>",
    "sent": "2017-11-07T15:31:38.788Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [
      {
        "url": "https://solidity.readthedocs.io/en/develop/types.html#fixed-point-numbers"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a023292f7299e8f53849893",
    "text": "could anyone send me tokens to this address in the kovan test network please :)   `0x3F0e73a32fC1CF5A353Ab770dc4aEB9E205b5727`",
    "html": "could anyone send me tokens to this address in the kovan test network please :)   <code>0x3F0e73a32fC1CF5A353Ab770dc4aEB9E205b5727</code>",
    "sent": "2017-11-07T22:24:18.166Z",
    "fromUser": {
      "id": "54f68b8e15522ed4b3dcc506",
      "username": "SoyGoodPeople",
      "displayName": "Adrian Avila",
      "url": "/SoyGoodPeople",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/SoyGoodPeople",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2055407?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2055407?v=4&s=128",
      "v": 52,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0232ce32e080696e78d248",
    "text": "@SoyGoodPeople try here: https://gitter.im/kovan-testnet/faucet",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"SoyGoodPeople\" class=\"mention\">@SoyGoodPeople</span> try here: <a href=\"https://gitter.im/kovan-testnet/faucet\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gitter.im/kovan-testnet/faucet</a>",
    "sent": "2017-11-07T22:25:18.434Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [
      {
        "url": "https://gitter.im/kovan-testnet/faucet"
      }
    ],
    "mentions": [
      {
        "screenName": "SoyGoodPeople",
        "userId": "54f68b8e15522ed4b3dcc506",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a032e2ddf09362e67e350dd",
    "text": "I want to be able to generate contract A, contract B, and contract C at the same time (all different contracts, not the same code). Is there a best practice for doing this? I could theoretically put them in one contract factory, but it feels strange and I haven't been able to find other examples working like this...",
    "html": "I want to be able to generate contract A, contract B, and contract C at the same time (all different contracts, not the same code). Is there a best practice for doing this? I could theoretically put them in one contract factory, but it feels strange and I haven&#39;t been able to find other examples working like this...",
    "sent": "2017-11-08T16:17:49.496Z",
    "fromUser": {
      "id": "59511a72d73408ce4f6a3063",
      "username": "thekscar",
      "displayName": "Karen",
      "url": "/thekscar",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thekscar",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a032eb2d6c36fca31f082e1",
    "text": "Why not put them in the same factory? \nHere's an example of generating multiple contracts within a contract, and configuring them to connect to each other. https://github.com/maurelian/eth-registrar-ens/blob/master/src/test/dotEthRegistrar.sol#L673",
    "html": "Why not put them in the same factory?<br>Here&#39;s an example of generating multiple contracts within a contract, and configuring them to connect to each other. <a href=\"https://github.com/maurelian/eth-registrar-ens/blob/master/src/test/dotEthRegistrar.sol#L673\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/maurelian/eth-registrar-ens/blob/master/src/test/dotEthRegistrar.sol#L673</a>",
    "sent": "2017-11-08T16:20:02.683Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [
      {
        "url": "https://github.com/maurelian/eth-registrar-ens/blob/master/src/test/dotEthRegistrar.sol#L673"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0338bf32e080696e7e4f4c",
    "text": "@maurelian Wow,  really interesting how this is put together - i.e. the use of ens in Register. Thanks for the example...I'm cautious when my contracts start to grow, and I can't find similar patterns. ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> Wow,  really interesting how this is put together - i.e. the use of ens in Register. Thanks for the example...I&#39;m cautious when my contracts start to grow, and I can&#39;t find similar patterns. ",
    "sent": "2017-11-08T17:02:55.986Z",
    "fromUser": {
      "id": "59511a72d73408ce4f6a3063",
      "username": "thekscar",
      "displayName": "Karen",
      "url": "/thekscar",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thekscar",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0338ec7081b66876c76d5e",
    "text": "yeah, this pattern tends to be quite gas expensive. ",
    "html": "yeah, this pattern tends to be quite gas expensive. ",
    "sent": "2017-11-08T17:03:40.262Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0338fe86d308b755c381b1",
    "text": "So you may need to start breaking it up a bit in the future. ",
    "html": "So you may need to start breaking it up a bit in the future. ",
    "sent": "2017-11-08T17:03:58.862Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a03390fd6c36fca31f0c7b0",
    "text": "Or else just use truffle's migrations feature.",
    "html": "Or else just use truffle&#39;s migrations feature.",
    "sent": "2017-11-08T17:04:15.063Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a033a08f7299e8f538a2a4a",
    "text": "Right, I do want A,B,& C to be able to talk to each other too...ultimately, I have a hub that only needs to worry about A, but A needs to be able to talk to B and C as trusted so i'm thinking to keep track of A's B&C in the factory",
    "html": "Right, I do want A,B,&amp; C to be able to talk to each other too...ultimately, I have a hub that only needs to worry about A, but A needs to be able to talk to B and C as trusted so i&#39;m thinking to keep track of A&#39;s B&amp;C in the factory",
    "sent": "2017-11-08T17:08:24.996Z",
    "fromUser": {
      "id": "59511a72d73408ce4f6a3063",
      "username": "thekscar",
      "displayName": "Karen",
      "url": "/thekscar",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thekscar",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a033a56f7299e8f538a2cf0",
    "text": "It's getting convoluted, but maybe a better pattern is to create B&C first, then (use them like you did with ens ) have them as inputs to A and keep track of them there",
    "html": "It&#39;s getting convoluted, but maybe a better pattern is to create B&amp;C first, then (use them like you did with ens ) have them as inputs to A and keep track of them there",
    "sent": "2017-11-08T17:09:42.661Z",
    "fromUser": {
      "id": "59511a72d73408ce4f6a3063",
      "username": "thekscar",
      "displayName": "Karen",
      "url": "/thekscar",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thekscar",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a033b6586d308b755c39000",
    "text": "Yeah, the second idea seems simpler to me. Then you don't need to do lookups in the factory",
    "html": "Yeah, the second idea seems simpler to me. Then you don&#39;t need to do lookups in the factory",
    "sent": "2017-11-08T17:14:13.452Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a033c465a1758ed0fa49acd",
    "text": "Cool, thanks for the help!",
    "html": "Cool, thanks for the help!",
    "sent": "2017-11-08T17:17:58.331Z",
    "fromUser": {
      "id": "59511a72d73408ce4f6a3063",
      "username": "thekscar",
      "displayName": "Karen",
      "url": "/thekscar",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thekscar",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/29441680?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a08ee00540c78242df6a6b0",
    "text": "raining0223",
    "html": "raining0223",
    "sent": "2017-11-13T00:57:36.815Z",
    "fromUser": {
      "id": "583cf53dd73408ce4f3958a2",
      "username": "ITRI-Leela",
      "displayName": "ITRI-Leela",
      "url": "/ITRI-Leela",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/ITRI-Leela",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/24239219?v=3&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/24239219?v=3&s=128",
      "v": 5,
      "gv": "3"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a093cf871ad3f8736d8ec70",
    "text": "Can we hard code owner information in smart contract before deploying the contract? Can you please provide security issues that i will face on doing so?",
    "html": "Can we hard code owner information in smart contract before deploying the contract? Can you please provide security issues that i will face on doing so?",
    "sent": "2017-11-13T06:34:32.257Z",
    "fromUser": {
      "id": "59b6889ed73408ce4f753a04",
      "username": "ynkumar143",
      "displayName": "Nagendra Kumar Y",
      "url": "/ynkumar143",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/ynkumar143",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8300924?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8300924?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a093d3a614889d47572f568",
    "text": "My intention is that I don't want to use the owner address of where contract is deployed, instead I will use some other address to deploy in my wallet using their address. ",
    "html": "My intention is that I don&#39;t want to use the owner address of where contract is deployed, instead I will use some other address to deploy in my wallet using their address. ",
    "sent": "2017-11-13T06:35:38.901Z",
    "fromUser": {
      "id": "59b6889ed73408ce4f753a04",
      "username": "ynkumar143",
      "displayName": "Nagendra Kumar Y",
      "url": "/ynkumar143",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/ynkumar143",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8300924?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8300924?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a096645d6c36fca310d9d2a",
    "text": "Does an ERC token exists which let the tokens do some call to an external contract ? (usage of token instead of ether value to do some actions) ",
    "html": "Does an ERC token exists which let the tokens do some call to an external contract ? (usage of token instead of ether value to do some actions) ",
    "sent": "2017-11-13T09:30:45.084Z",
    "fromUser": {
      "id": "5996a184d73408ce4f71eb62",
      "username": "davidp94",
      "displayName": "David Phan",
      "url": "/davidp94",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/davidp94",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/25910069?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/25910069?v=4&s=128",
      "v": 13,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0976fff257ad91098ad07e",
    "text": "@ynkumar143  As long as the information can safely be made public it should be fine. I'm not sure if I understand, but maybe you mean using  a specific address which you have  in cold storage, rather than `msg.sender` as the `owner` of a contract?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"ynkumar143\" class=\"mention\">@ynkumar143</span>  As long as the information can safely be made public it should be fine. I&#39;m not sure if I understand, but maybe you mean using  a specific address which you have  in cold storage, rather than <code>msg.sender</code> as the <code>owner</code> of a contract?",
    "sent": "2017-11-13T10:42:07.280Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [
      {
        "screenName": "ynkumar143",
        "userId": "59b6889ed73408ce4f753a04",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a097778614889d475742a04",
    "text": "@davidp94 maybe you mean like approveAndCall on this token implementation? https://github.com/ConsenSys/Tokens/blob/master/contracts/HumanStandardToken.sol#L47",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"davidp94\" class=\"mention\">@davidp94</span> maybe you mean like approveAndCall on this token implementation? <a href=\"https://github.com/ConsenSys/Tokens/blob/master/contracts/HumanStandardToken.sol#L47\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/ConsenSys/Tokens/blob/master/contracts/HumanStandardToken.sol#L47</a>",
    "sent": "2017-11-13T10:44:08.008Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [
      {
        "url": "https://github.com/ConsenSys/Tokens/blob/master/contracts/HumanStandardToken.sol#L47"
      }
    ],
    "mentions": [
      {
        "screenName": "davidp94",
        "userId": "5996a184d73408ce4f71eb62",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0988a5614889d47574882b",
    "text": "Yes @maurelian , That is what i mean to use specific address rather than msg.sender as owner of a contract",
    "html": "Yes <span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> , That is what i mean to use specific address rather than msg.sender as owner of a contract",
    "sent": "2017-11-13T11:57:25.659Z",
    "fromUser": {
      "id": "59b6889ed73408ce4f753a04",
      "username": "ynkumar143",
      "displayName": "Nagendra Kumar Y",
      "url": "/ynkumar143",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/ynkumar143",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8300924?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8300924?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a098906540c78242df95a82",
    "text": "OK, then yes, I think that's the right thing to do. \nAnother approach is to immediately transfer ownership after deployment, but hardcoding an address in the constructor is probably simplest, and doesn't actually impact the deployed bytecode.",
    "html": "OK, then yes, I think that&#39;s the right thing to do.<br>Another approach is to immediately transfer ownership after deployment, but hardcoding an address in the constructor is probably simplest, and doesn&#39;t actually impact the deployed bytecode.",
    "sent": "2017-11-13T11:59:02.683Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a098a38026aeaa02f09c45d",
    "text": "Thanks, Does it trigger any security vulnerabilities on sharing the hard coded address in smart contract. ",
    "html": "Thanks, Does it trigger any security vulnerabilities on sharing the hard coded address in smart contract. ",
    "sent": "2017-11-13T12:04:08.168Z",
    "fromUser": {
      "id": "59b6889ed73408ce4f753a04",
      "username": "ynkumar143",
      "displayName": "Nagendra Kumar Y",
      "url": "/ynkumar143",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/ynkumar143",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8300924?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8300924?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a099b6d71ad3f8736daf306",
    "text": "@ynkumar143 no, the owner address is readable on chain, whether or not it's hard coded into the solidity code",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"ynkumar143\" class=\"mention\">@ynkumar143</span> no, the owner address is readable on chain, whether or not it&#39;s hard coded into the solidity code",
    "sent": "2017-11-13T13:17:33.150Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [
      {
        "screenName": "ynkumar143",
        "userId": "59b6889ed73408ce4f753a04",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5a0ca2d9ba39a53f1aa44163",
    "text": "@maurelian Owner address can be made private also. I think that should be possible.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> Owner address can be made private also. I think that should be possible.",
    "sent": "2017-11-15T20:26:01.476Z",
    "fromUser": {
      "id": "59118519d73408ce4f5e1a79",
      "username": "AyushyaChitransh",
      "displayName": "Ayushya Chitransh",
      "url": "/AyushyaChitransh",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/AyushyaChitransh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13914634?v=4&s=128",
      "v": 37,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "598b26b94bcd78af562a1a46",
    "text": "If you want to have different crypto assets in their own wallets then I guess you'd really have to have relays for any other chain you want to support or do it totally off-chain and possibly using an oracle to somehow get that info on-chain (Ethereum chain, I mean)",
    "html": "If you want to have different crypto assets in their own wallets then I guess you&#39;d really have to have relays for any other chain you want to support or do it totally off-chain and possibly using an oracle to somehow get that info on-chain (Ethereum chain, I mean)",
    "sent": "2017-08-09T15:14:01.097Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "598b7dceee5c9a4c5fa6e914",
    "text": "@GNSPS Apparently I've been working on a solution that incorporates both these strategies :smile: ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"GNSPS\" class=\"mention\">@GNSPS</span> Apparently I&#39;ve been working on a solution that incorporates both these strategies :smile: ",
    "sent": "2017-08-09T21:25:34.567Z",
    "fromUser": {
      "id": "58ee42aed73408ce4f57e9b4",
      "username": "karankohli13",
      "displayName": "Karan Kohli",
      "url": "/karankohli13",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/karankohli13",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/17060212?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/17060212?v=4&s=128",
      "v": 4,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [
      {
        "screenName": "GNSPS",
        "userId": "54bd42addb8155e6700ed45e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "598b7e134bcd78af562b8ea0",
    "text": "Using an Oracle for getting user investment data defeats the purpose of decentralised transparent tokensale though.",
    "html": "Using an Oracle for getting user investment data defeats the purpose of decentralised transparent tokensale though.",
    "sent": "2017-08-09T21:26:43.981Z",
    "fromUser": {
      "id": "58ee42aed73408ce4f57e9b4",
      "username": "karankohli13",
      "displayName": "Karan Kohli",
      "url": "/karankohli13",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/karankohli13",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/17060212?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/17060212?v=4&s=128",
      "v": 4,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "598b7fc64bcd78af562b95d2",
    "text": "I have a few doubts, think I should list them \na) what's the difference in deposit first, token distribution later (e.g - users deposit to a simple ethereum address and later at end of ICO the smart contract reads all those transaction at that address and distributes the tokens to the given addresses) v/s realtime token distribution (contract address shared, people are depositing and getting tokens as per contract logic)\nb) Some crowdsale ico's have kept some functions to just update the contract's supply of tokens (just subtracting alt currency deposits from total supply) how this thing works - technically?\nc) If I use BTCRelay and create a DAPP, that asks user to deposit to a BTC address and supply Ethereum address to get tokens back, I'll have a dependency that users need to have Ethereum browser(web3 injection).\nAny workarounds?",
    "html": "I have a few doubts, think I should list them<br>a) what&#39;s the difference in deposit first, token distribution later (e.g - users deposit to a simple ethereum address and later at end of ICO the smart contract reads all those transaction at that address and distributes the tokens to the given addresses) v/s realtime token distribution (contract address shared, people are depositing and getting tokens as per contract logic)<br>b) Some crowdsale ico&#39;s have kept some functions to just update the contract&#39;s supply of tokens (just subtracting alt currency deposits from total supply) how this thing works - technically?<br>c) If I use BTCRelay and create a DAPP, that asks user to deposit to a BTC address and supply Ethereum address to get tokens back, I&#39;ll have a dependency that users need to have Ethereum browser(web3 injection).<br>Any workarounds?",
    "sent": "2017-08-09T21:33:58.629Z",
    "fromUser": {
      "id": "58ee42aed73408ce4f57e9b4",
      "username": "karankohli13",
      "displayName": "Karan Kohli",
      "url": "/karankohli13",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/karankohli13",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/17060212?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/17060212?v=4&s=128",
      "v": 4,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "598c5ab580d90ca024e74441",
    "text": "Please send some test ethers to this account 0xa47f6ebd1f709c45938d734d9f3495a6f6b59fb7\n?",
    "html": "Please send some test ethers to this account 0xa47f6ebd1f709c45938d734d9f3495a6f6b59fb7<br>?",
    "sent": "2017-08-10T13:08:05.370Z",
    "fromUser": {
      "id": "59830473d73408ce4f6fef0d",
      "username": "ACE_satya_twitter",
      "displayName": "satya",
      "url": "/ACE_satya_twitter",
      "avatarUrl": "https://avatars-02.gitter.im/g/u/ACE_satya_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/797679836739162112/bTFAGHmE_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/797679836739162112/bTFAGHmE.jpg"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "598c6a1a76a757f80890897a",
    "text": "for which testnet? Ropsten?",
    "html": "for which testnet? Ropsten?",
    "sent": "2017-08-10T14:13:46.388Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "598c794aee5c9a4c5faa9d31",
    "text": "@karankohli13 \na) None, I guess. It's much more a question of wether you want payments synchronous or asynchronous",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"karankohli13\" class=\"mention\">@karankohli13</span><br>a) None, I guess. It&#39;s much more a question of wether you want payments synchronous or asynchronous",
    "sent": "2017-08-10T15:18:34.770Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [
      {
        "screenName": "karankohli13",
        "userId": "58ee42aed73408ce4f57e9b4",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "598c7967ee5c9a4c5faa9da8",
    "text": "(btw, asynchronous is considered a best practice as a way to avoid falling into some kind of unexpected DoS)",
    "html": "(btw, asynchronous is considered a best practice as a way to avoid falling into some kind of unexpected DoS)",
    "sent": "2017-08-10T15:19:03.069Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "598c79b3ee5c9a4c5faa9f0c",
    "text": "b) I don't think I understood the question. :smile: I don't think I have seen anything quite like that.",
    "html": "b) I don&#39;t think I understood the question. :smile: I don&#39;t think I have seen anything quite like that.",
    "sent": "2017-08-10T15:20:19.406Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "598c7b4bee5c9a4c5faaa536",
    "text": "c) About this one, BTCRelay does have the raw tx available. I'm guessing you could pass information through an OP_RETURN tx and build some front-end to transmit an ethereum address in the 80 bytes available for any arbitrary data",
    "html": "c) About this one, BTCRelay does have the raw tx available. I&#39;m guessing you could pass information through an OP_RETURN tx and build some front-end to transmit an ethereum address in the 80 bytes available for any arbitrary data",
    "sent": "2017-08-10T15:27:07.023Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "598d35bd210ac2692071d5b1",
    "text": "how to debug from opcode?",
    "html": "how to debug from opcode?",
    "sent": "2017-08-11T04:42:37.141Z",
    "fromUser": {
      "id": "58d98635d73408ce4f54222c",
      "username": "Shubhabrata-Mukherjee",
      "displayName": "Shubhabrata-Mukherjee",
      "url": "/Shubhabrata-Mukherjee",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Shubhabrata-Mukherjee",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21312050?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21312050?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "598d541f329651f46e0cb68a",
    "text": "@GNSPS  for Ropsten send some ethers to 0xa47f6ebd1f709c45938d734d9f3495a6f6b59fb7",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"GNSPS\" class=\"mention\">@GNSPS</span>  for Ropsten send some ethers to 0xa47f6ebd1f709c45938d734d9f3495a6f6b59fb7",
    "sent": "2017-08-11T06:52:15.417Z",
    "fromUser": {
      "id": "59830473d73408ce4f6fef0d",
      "username": "ACE_satya_twitter",
      "displayName": "satya",
      "url": "/ACE_satya_twitter",
      "avatarUrl": "https://avatars-02.gitter.im/g/u/ACE_satya_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/797679836739162112/bTFAGHmE_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/797679836739162112/bTFAGHmE.jpg"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [
      {
        "screenName": "GNSPS",
        "userId": "54bd42addb8155e6700ed45e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "598d7171a7b406262d7aa4e7",
    "text": "i deployed sample voting  app in Ropsten...and i was able to interact .....but how others can access my dapp ?",
    "html": "i deployed sample voting  app in Ropsten...and i was able to interact .....but how others can access my dapp ?",
    "sent": "2017-08-11T08:57:21.761Z",
    "fromUser": {
      "id": "59830473d73408ce4f6fef0d",
      "username": "ACE_satya_twitter",
      "displayName": "satya",
      "url": "/ACE_satya_twitter",
      "avatarUrl": "https://avatars-02.gitter.im/g/u/ACE_satya_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/797679836739162112/bTFAGHmE_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/797679836739162112/bTFAGHmE.jpg"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "598d71a4614889d4753a6ab3",
    "text": "the contract has an address, you need to use that ",
    "html": "the contract has an address, you need to use that ",
    "sent": "2017-08-11T08:58:12.316Z",
    "fromUser": {
      "id": "58ee42aed73408ce4f57e9b4",
      "username": "karankohli13",
      "displayName": "Karan Kohli",
      "url": "/karankohli13",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/karankohli13",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/17060212?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/17060212?v=4&s=128",
      "v": 4,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "598d71aebc464729747273f2",
    "text": "in web3 ofcourse",
    "html": "in web3 ofcourse",
    "sent": "2017-08-11T08:58:22.376Z",
    "fromUser": {
      "id": "58ee42aed73408ce4f57e9b4",
      "username": "karankohli13",
      "displayName": "Karan Kohli",
      "url": "/karankohli13",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/karankohli13",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/17060212?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/17060212?v=4&s=128",
      "v": 4,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "598d7219614889d4753a6bed",
    "text": "if you know my contract address can you use my application ?",
    "html": "if you know my contract address can you use my application ?",
    "sent": "2017-08-11T09:00:09.779Z",
    "fromUser": {
      "id": "59830473d73408ce4f6fef0d",
      "username": "ACE_satya_twitter",
      "displayName": "satya",
      "url": "/ACE_satya_twitter",
      "avatarUrl": "https://avatars-02.gitter.im/g/u/ACE_satya_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/797679836739162112/bTFAGHmE_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/797679836739162112/bTFAGHmE.jpg"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "598d722580d90ca024eb646f",
    "text": "its simple voting application",
    "html": "its simple voting application",
    "sent": "2017-08-11T09:00:21.902Z",
    "fromUser": {
      "id": "59830473d73408ce4f6fef0d",
      "username": "ACE_satya_twitter",
      "displayName": "satya",
      "url": "/ACE_satya_twitter",
      "avatarUrl": "https://avatars-02.gitter.im/g/u/ACE_satya_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/797679836739162112/bTFAGHmE_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/797679836739162112/bTFAGHmE.jpg"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "598d72622723db8d5e942194",
    "text": "yeah if i know your contract source code and the address, it can be used by anyone",
    "html": "yeah if i know your contract source code and the address, it can be used by anyone",
    "sent": "2017-08-11T09:01:22.632Z",
    "fromUser": {
      "id": "58ee42aed73408ce4f57e9b4",
      "username": "karankohli13",
      "displayName": "Karan Kohli",
      "url": "/karankohli13",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/karankohli13",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/17060212?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/17060212?v=4&s=128",
      "v": 4,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "598fe08480d90ca024f33eb2",
    "text": "i have a working contract. it is simple PoC for a dice game that pays out when i roll 5,6. lose when its 2,3 and push when its 1,2.\n\nI would like to now make a more advanced version.  where i can predict the next roll .  pick either even or odd. and have the contract pay out based on that.\n\nanyone know how i can do this.  I know it is possible to pass data and functions while sending ether to a contract..   Just havent seen a good example to explain it.",
    "html": "<p>i have a working contract. it is simple PoC for a dice game that pays out when i roll 5,6. lose when its 2,3 and push when its 1,2.</p><p>I would like to now make a more advanced version.  where i can predict the next roll .  pick either even or odd. and have the contract pay out based on that.</p><p>anyone know how i can do this.  I know it is possible to pass data and functions while sending ether to a contract..   Just havent seen a good example to explain it.</p>",
    "sent": "2017-08-13T05:15:48.226Z",
    "fromUser": {
      "id": "560b884fd33f749381a7c734",
      "username": "Niko-La",
      "displayName": "Niko-La",
      "url": "/Niko-La",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Niko-La",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/14004559?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/14004559?v=4&s=128",
      "v": 17,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59904394a7b406262d83b4be",
    "text": "https://github.com/oraclize/ethereum-examples/tree/master/solidity",
    "html": "<a href=\"https://github.com/oraclize/ethereum-examples/tree/master/solidity\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/oraclize/ethereum-examples/tree/master/solidity</a>",
    "sent": "2017-08-13T12:18:28.695Z",
    "fromUser": {
      "id": "58ee42aed73408ce4f57e9b4",
      "username": "karankohli13",
      "displayName": "Karan Kohli",
      "url": "/karankohli13",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/karankohli13",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/17060212?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/17060212?v=4&s=128",
      "v": 4,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [
      {
        "url": "https://github.com/oraclize/ethereum-examples/tree/master/solidity"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5995cf4319147ac32315960e",
    "text": "testing",
    "html": "testing",
    "sent": "2017-08-17T17:15:47.592Z",
    "fromUser": {
      "id": "587fe617d73408ce4f4475a1",
      "username": "tcsiwula_twitter",
      "displayName": "🐶 Tim",
      "url": "/tcsiwula_twitter",
      "avatarUrl": "https://avatars-03.gitter.im/g/u/tcsiwula_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/794852717508300801/ifwqCEts_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/794852717508300801/ifwqCEts.jpg"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5996962676a757f808b8a518",
    "text": "Can we create any contract application for private network without using ethers concept ?",
    "html": "Can we create any contract application for private network without using ethers concept ?",
    "sent": "2017-08-18T07:24:22.599Z",
    "fromUser": {
      "id": "59830473d73408ce4f6fef0d",
      "username": "ACE_satya_twitter",
      "displayName": "satya",
      "url": "/ACE_satya_twitter",
      "avatarUrl": "https://avatars-02.gitter.im/g/u/ACE_satya_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/797679836739162112/bTFAGHmE_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/797679836739162112/bTFAGHmE.jpg"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59994e85a7b406262da9f106",
    "text": "Any one here who can write a dapp for our upcoming ICO.",
    "html": "Any one here who can write a dapp for our upcoming ICO.",
    "sent": "2017-08-20T08:55:33.459Z",
    "fromUser": {
      "id": "5995e4cdd73408ce4f71d9c9",
      "username": "goelsandy86_twitter",
      "displayName": "Sandeep Goel",
      "url": "/goelsandy86_twitter",
      "avatarUrl": "https://avatars-03.gitter.im/g/u/goelsandy86_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/825469872620474368/9L78soA7_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/825469872620474368/9L78soA7.jpg"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "599c16f79acddb2407b87933",
    "text": "Hi all,  is there any smart contract for milestone and other activity tracking with escrow  for real estate??",
    "html": "Hi all,  is there any smart contract for milestone and other activity tracking with escrow  for real estate??",
    "sent": "2017-08-22T11:35:19.525Z",
    "fromUser": {
      "id": "58d98635d73408ce4f54222c",
      "username": "Shubhabrata-Mukherjee",
      "displayName": "Shubhabrata-Mukherjee",
      "url": "/Shubhabrata-Mukherjee",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Shubhabrata-Mukherjee",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21312050?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21312050?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "599c26c3614889d47575596c",
    "text": "@ACE_satya_twitter if I understand correctly you may want Quorum :smile: ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"ACE_satya_twitter\" class=\"mention\">@ACE_satya_twitter</span> if I understand correctly you may want Quorum :smile: ",
    "sent": "2017-08-22T12:42:43.204Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [
      {
        "screenName": "ACE_satya_twitter",
        "userId": "59830473d73408ce4f6fef0d",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "599c26feba0f0f6e38cf28e0",
    "text": "@goelsandy86_twitter you should reach out to ConsenSys ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"goelsandy86_twitter\" class=\"mention\">@goelsandy86_twitter</span> you should reach out to ConsenSys ",
    "sent": "2017-08-22T12:43:42.802Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [
      {
        "screenName": "goelsandy86_twitter",
        "userId": "5995e4cdd73408ce4f71d9c9",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "599c2717a7b406262db58c60",
    "text": "@Shubhabrata-Mukherjee not that I know of ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"Shubhabrata-Mukherjee\" class=\"mention\">@Shubhabrata-Mukherjee</span> not that I know of ",
    "sent": "2017-08-22T12:44:07.849Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [
      {
        "screenName": "Shubhabrata-Mukherjee",
        "userId": "58d98635d73408ce4f54222c",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "599d50c7a7b406262dbaa7e8",
    "text": "Hey everybody, what are some good examples of substantially big projects using reusability patterns ? \nWhen i say reusability I think of a system of contracts managed through a \"ManagerContract\" that can move addresses ?\nsuch as described here :  https://blog.colony.io/writing-upgradeable-contracts-in-solidity-6743f0eecc88.\n\nI believe i know the fundamentals so that's why I am asking for projects but I'd also welcome advice/tips for writing upgradeable smart-contracts.\n\nThanks !\n\n\n\n\n\n",
    "html": "<p>Hey everybody, what are some good examples of substantially big projects using reusability patterns ?<br>When i say reusability I think of a system of contracts managed through a &quot;ManagerContract&quot; that can move addresses ?<br>such as described here :  <a href=\"https://blog.colony.io/writing-upgradeable-contracts-in-solidity-6743f0eecc88\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://blog.colony.io/writing-upgradeable-contracts-in-solidity-6743f0eecc88</a>.</p><p>I believe i know the fundamentals so that&#39;s why I am asking for projects but I&#39;d also welcome advice/tips for writing upgradeable smart-contracts.</p><p>Thanks !</p>",
    "sent": "2017-08-23T09:54:15.536Z",
    "fromUser": {
      "id": "56cc6588e610378809c3018c",
      "username": "Dvisacker",
      "displayName": "David Van Isacker",
      "url": "/Dvisacker",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Dvisacker",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11384092?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11384092?v=4&s=128",
      "v": 12,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [
      {
        "url": "https://blog.colony.io/writing-upgradeable-contracts-in-solidity-6743f0eecc88"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "599d5112210ac26920b20b51",
    "text": "I am also looking for example of projects implementing a token that pays out dividends (when i say pays out, I mean that the dividends can be withdrawn from the contract by a caller). The ether for sending out dividends is received from different smart-contracts. If i had only one smart-contract holding the ether reserved for dividends, it would be easy. I am trying to figure out what's the best way to route the ether to a token holder that calls a withdrawDividends method for example. It's not really hard to code but I can't come up with a clean way to do it.\n\nThanks twice !",
    "html": "<p>I am also looking for example of projects implementing a token that pays out dividends (when i say pays out, I mean that the dividends can be withdrawn from the contract by a caller). The ether for sending out dividends is received from different smart-contracts. If i had only one smart-contract holding the ether reserved for dividends, it would be easy. I am trying to figure out what&#39;s the best way to route the ether to a token holder that calls a withdrawDividends method for example. It&#39;s not really hard to code but I can&#39;t come up with a clean way to do it.</p><p>Thanks twice !</p>",
    "sent": "2017-08-23T09:55:30.685Z",
    "fromUser": {
      "id": "56cc6588e610378809c3018c",
      "username": "Dvisacker",
      "displayName": "David Van Isacker",
      "url": "/Dvisacker",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Dvisacker",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11384092?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11384092?v=4&s=128",
      "v": 12,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "599eff33ee5c9a4c5ff5ebb6",
    "text": "@Dvisacker on the first one I'd also recommend you to look at Lib Proxies by Manuel Araoz (https://blog.zeppelin.solutions/proxy-libraries-in-solidity-79fbe4b970fd)",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"Dvisacker\" class=\"mention\">@Dvisacker</span> on the first one I&#39;d also recommend you to look at Lib Proxies by Manuel Araoz (<a href=\"https://blog.zeppelin.solutions/proxy-libraries-in-solidity-79fbe4b970fd\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://blog.zeppelin.solutions/proxy-libraries-in-solidity-79fbe4b970fd</a>)",
    "sent": "2017-08-24T16:30:43.638Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [
      {
        "url": "https://blog.zeppelin.solutions/proxy-libraries-in-solidity-79fbe4b970fd"
      }
    ],
    "mentions": [
      {
        "screenName": "Dvisacker",
        "userId": "56cc6588e610378809c3018c",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "599eff5076a757f808dc1e06",
    "text": "On the second one I guess there are quite a few tokens devised to do that",
    "html": "On the second one I guess there are quite a few tokens devised to do that",
    "sent": "2017-08-24T16:31:12.723Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "599eff67ee5c9a4c5ff5ecfe",
    "text": "Funds that have tokenized their membership like TaaS",
    "html": "Funds that have tokenized their membership like TaaS",
    "sent": "2017-08-24T16:31:35.473Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "599eff7a9acddb2407c54ed2",
    "text": "but I personally haven't looked at them",
    "html": "but I personally haven&#39;t looked at them",
    "sent": "2017-08-24T16:31:54.991Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59a3db8a8f4427b462a7cf2f",
    "text": "@GNSPS Thanks ! I ended figuring something out for the dividends problem. The TaaS smart-contract has never been made public I believe though. \n\nAlso read the proxy libraries blog, still trying to get my head around it.\n\nDo you have any idea about the gas overhaul of such type of architectures ? And do you know any projects/smart-contracts actually using this architecture ? ",
    "html": "<p><span data-link-type=\"mention\" data-screen-name=\"GNSPS\" class=\"mention\">@GNSPS</span> Thanks ! I ended figuring something out for the dividends problem. The TaaS smart-contract has never been made public I believe though. </p><p>Also read the proxy libraries blog, still trying to get my head around it.</p><p>Do you have any idea about the gas overhaul of such type of architectures ? And do you know any projects/smart-contracts actually using this architecture ? </p>",
    "sent": "2017-08-28T08:59:54.400Z",
    "fromUser": {
      "id": "56cc6588e610378809c3018c",
      "username": "Dvisacker",
      "displayName": "David Van Isacker",
      "url": "/Dvisacker",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Dvisacker",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11384092?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11384092?v=4&s=128",
      "v": 12,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [
      {
        "screenName": "GNSPS",
        "userId": "54bd42addb8155e6700ed45e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59a4b85bc101bc4e3a682333",
    "text": "Hi does anyone know how to use web3 to catch all event logs from a smart contacts",
    "html": "Hi does anyone know how to use web3 to catch all event logs from a smart contacts",
    "sent": "2017-08-29T00:42:03.971Z",
    "fromUser": {
      "id": "560b884fd33f749381a7c734",
      "username": "Niko-La",
      "displayName": "Niko-La",
      "url": "/Niko-La",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Niko-La",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/14004559?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/14004559?v=4&s=128",
      "v": 17,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59a4b85f76a757f808f31cb9",
    "text": "web3.eth.sendTransaction({from : web3.eth.accounts[0], to : c.address, value : web3.toWei(50)}, console.log)",
    "html": "web3.eth.sendTransaction({from : web3.eth.accounts[0], to : c.address, value : web3.toWei(50)}, console.log)",
    "sent": "2017-08-29T00:42:07.471Z",
    "fromUser": {
      "id": "560b884fd33f749381a7c734",
      "username": "Niko-La",
      "displayName": "Niko-La",
      "url": "/Niko-La",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Niko-La",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/14004559?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/14004559?v=4&s=128",
      "v": 17,
      "gv": "4"
    },
    "unread": false,
    "readBy": 28,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59a4b864ba0f0f6e38f2b19f",
    "text": "this is my call",
    "html": "this is my call",
    "sent": "2017-08-29T00:42:12.576Z",
    "fromUser": {
      "id": "560b884fd33f749381a7c734",
      "username": "Niko-La",
      "displayName": "Niko-La",
      "url": "/Niko-La",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Niko-La",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/14004559?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/14004559?v=4&s=128",
      "v": 17,
      "gv": "4"
    },
    "unread": false,
    "readBy": 28,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59ac1ebcba0f0f6e38116640",
    "text": "try this: web3.eth.sendTransaction({from: account1, to:’account2’, value: web3.toWei(10, \"ether”)}).call().then(console.log);",
    "html": "try this: web3.eth.sendTransaction({from: account1, to:’account2’, value: web3.toWei(10, &quot;ether”)}).call().then(console.log);",
    "sent": "2017-09-03T15:24:44.533Z",
    "fromUser": {
      "id": "59ac1bdbd73408ce4f741fe5",
      "username": "iam-dev",
      "displayName": "Elky Bachtiar",
      "url": "/iam-dev",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/iam-dev",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30754770?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30754770?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59ace41fee5c9a4c5f2e466c",
    "text": "How to make a smart contract in ethereum?",
    "html": "How to make a smart contract in ethereum?",
    "sent": "2017-09-04T05:26:55.396Z",
    "fromUser": {
      "id": "59a526bbd73408ce4f736572",
      "username": "PadharaHitesh",
      "displayName": "PadharaHitesh",
      "url": "/PadharaHitesh",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/PadharaHitesh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/31240842?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/31240842?v=4&s=128",
      "v": 149,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59ad01fa9acddb2407fde10d",
    "text": "i want to do POC on ethereum....how to send automatically ethers from miner to others when ever they have low ethers for Gas",
    "html": "i want to do POC on ethereum....how to send automatically ethers from miner to others when ever they have low ethers for Gas",
    "sent": "2017-09-04T07:34:18.875Z",
    "fromUser": {
      "id": "59830473d73408ce4f6fef0d",
      "username": "ACE_satya_twitter",
      "displayName": "satya",
      "url": "/ACE_satya_twitter",
      "avatarUrl": "https://avatars-02.gitter.im/g/u/ACE_satya_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/797679836739162112/bTFAGHmE_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/797679836739162112/bTFAGHmE.jpg"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59b223ce210ac269200890ca",
    "text": "Hello! I am a complete beginner to solidity...does anyone know how i would write a smart contract that tells you what the rate of Bitcoin to USD is everyday?",
    "html": "Hello! I am a complete beginner to solidity...does anyone know how i would write a smart contract that tells you what the rate of Bitcoin to USD is everyday?",
    "sent": "2017-09-08T04:59:58.258Z",
    "fromUser": {
      "id": "59b222cad73408ce4f74d7ad",
      "username": "stephanoulaa",
      "displayName": "Stephany Prodromos",
      "url": "/stephanoulaa",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/stephanoulaa",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25105874?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25105874?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59b23abc4e50cfde2717f93d",
    "text": "what is the significance of mining in private network ?",
    "html": "what is the significance of mining in private network ?",
    "sent": "2017-09-08T06:37:48.011Z",
    "fromUser": {
      "id": "59830473d73408ce4f6fef0d",
      "username": "ACE_satya_twitter",
      "displayName": "satya",
      "url": "/ACE_satya_twitter",
      "avatarUrl": "https://avatars-02.gitter.im/g/u/ACE_satya_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/797679836739162112/bTFAGHmE_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/797679836739162112/bTFAGHmE.jpg"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59b2cb6ebc464729740e5b13",
    "text": "@stephanoulaa you need Oraclize for that",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"stephanoulaa\" class=\"mention\">@stephanoulaa</span> you need Oraclize for that",
    "sent": "2017-09-08T16:55:10.494Z",
    "fromUser": {
      "id": "5483820ddb8155e6700dc867",
      "username": "Janaka-Steph",
      "displayName": "Janaka-Steph",
      "url": "/Janaka-Steph",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Janaka-Steph",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4022128?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4022128?v=4&s=128",
      "v": 67,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [
      {
        "screenName": "stephanoulaa",
        "userId": "59b222cad73408ce4f74d7ad",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59b2cb87c101bc4e3aa3b9cb",
    "text": "but there is no point doing that with a smart contract",
    "html": "but there is no point doing that with a smart contract",
    "sent": "2017-09-08T16:55:35.145Z",
    "fromUser": {
      "id": "5483820ddb8155e6700dc867",
      "username": "Janaka-Steph",
      "displayName": "Janaka-Steph",
      "url": "/Janaka-Steph",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Janaka-Steph",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4022128?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4022128?v=4&s=128",
      "v": 67,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59b2cbb94e50cfde271a8725",
    "text": "@ACE_satya_twitter localhost",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"ACE_satya_twitter\" class=\"mention\">@ACE_satya_twitter</span> localhost",
    "sent": "2017-09-08T16:56:25.074Z",
    "fromUser": {
      "id": "5483820ddb8155e6700dc867",
      "username": "Janaka-Steph",
      "displayName": "Janaka-Steph",
      "url": "/Janaka-Steph",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Janaka-Steph",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4022128?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4022128?v=4&s=128",
      "v": 67,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [
      {
        "screenName": "ACE_satya_twitter",
        "userId": "59830473d73408ce4f6fef0d",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59b343ed614889d475d74722",
    "text": "@Janaka-Steph thanks! just curious why do you say that? what method would be better?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"Janaka-Steph\" class=\"mention\">@Janaka-Steph</span> thanks! just curious why do you say that? what method would be better?",
    "sent": "2017-09-09T01:29:17.464Z",
    "fromUser": {
      "id": "59b222cad73408ce4f74d7ad",
      "username": "stephanoulaa",
      "displayName": "Stephany Prodromos",
      "url": "/stephanoulaa",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/stephanoulaa",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25105874?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25105874?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [
      {
        "screenName": "Janaka-Steph",
        "userId": "5483820ddb8155e6700dc867",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59b648b0162adb6d2e8cadd9",
    "text": "@stephanoulaa what is the goal of your app ?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"stephanoulaa\" class=\"mention\">@stephanoulaa</span> what is the goal of your app ?",
    "sent": "2017-09-11T08:26:24.087Z",
    "fromUser": {
      "id": "5483820ddb8155e6700dc867",
      "username": "Janaka-Steph",
      "displayName": "Janaka-Steph",
      "url": "/Janaka-Steph",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Janaka-Steph",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4022128?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4022128?v=4&s=128",
      "v": 67,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [
      {
        "screenName": "stephanoulaa",
        "userId": "59b222cad73408ce4f74d7ad",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59b6ecdd319100804e21c128",
    "text": "@Janaka-Steph it would be to access coinbase's api to get the exchange rate,  buy price and sell price and depending on what that is, alert the user to buy/sell or not buy/sell on that day",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"Janaka-Steph\" class=\"mention\">@Janaka-Steph</span> it would be to access coinbase&#39;s api to get the exchange rate,  buy price and sell price and depending on what that is, alert the user to buy/sell or not buy/sell on that day",
    "sent": "2017-09-11T20:06:53.346Z",
    "fromUser": {
      "id": "59b222cad73408ce4f74d7ad",
      "username": "stephanoulaa",
      "displayName": "Stephany Prodromos",
      "url": "/stephanoulaa",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/stephanoulaa",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25105874?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25105874?v=4&s=128",
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [
      {
        "screenName": "Janaka-Steph",
        "userId": "5483820ddb8155e6700dc867",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59b7a822614889d475e9bc10",
    "text": "you don't need a blockchain for that",
    "html": "you don&#39;t need a blockchain for that",
    "sent": "2017-09-12T09:25:54.940Z",
    "fromUser": {
      "id": "5483820ddb8155e6700dc867",
      "username": "Janaka-Steph",
      "displayName": "Janaka-Steph",
      "url": "/Janaka-Steph",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Janaka-Steph",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4022128?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4022128?v=4&s=128",
      "v": 67,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59ba5cd7cfeed2eb650a2dec",
    "text": "@ACE_satya_twitter someone must mine or nothing adds blocks to the chain. privately youre likely the only one who can.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"ACE_satya_twitter\" class=\"mention\">@ACE_satya_twitter</span> someone must mine or nothing adds blocks to the chain. privately youre likely the only one who can.",
    "sent": "2017-09-14T10:41:27.726Z",
    "fromUser": {
      "id": "553ec7a715522ed4b3df9ab0",
      "username": "jeffanthony",
      "displayName": "Jeffrey Anthony",
      "url": "/jeffanthony",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jeffanthony",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/553756?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/553756?v=4&s=128",
      "v": 38,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [
      {
        "screenName": "ACE_satya_twitter",
        "userId": "59830473d73408ce4f6fef0d",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59baf24cc101bc4e3ac9fa88",
    "text": "@PadharaHitesh : join our smart contract developer telegram group where you can discuss this. https://t.me/joinchat/EboUckPgmA7hdCj3jJx-9A",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"PadharaHitesh\" class=\"mention\">@PadharaHitesh</span> : join our smart contract developer telegram group where you can discuss this. <a href=\"https://t.me/joinchat/EboUckPgmA7hdCj3jJx-9A\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://t.me/joinchat/EboUckPgmA7hdCj3jJx-9A</a>",
    "sent": "2017-09-14T21:19:08.837Z",
    "fromUser": {
      "id": "59ac1bdbd73408ce4f741fe5",
      "username": "iam-dev",
      "displayName": "Elky Bachtiar",
      "url": "/iam-dev",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/iam-dev",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30754770?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30754770?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [
      {
        "url": "https://t.me/joinchat/EboUckPgmA7hdCj3jJx-9A"
      }
    ],
    "mentions": [
      {
        "screenName": "PadharaHitesh",
        "userId": "59a526bbd73408ce4f736572",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59bffbfe7b7d98d30d0e5914",
    "text": "About numbers in Solidity. Is there an advantage to always use `uint256` instead of just `uint` ? And does it cost more gas to store, or will it only cost storage for the used bytes?",
    "html": "About numbers in Solidity. Is there an advantage to always use <code>uint256</code> instead of just <code>uint</code> ? And does it cost more gas to store, or will it only cost storage for the used bytes?",
    "sent": "2017-09-18T17:01:50.522Z",
    "fromUser": {
      "id": "554e1cee15522ed4b3e02727",
      "username": "flockonus",
      "displayName": "FabianoPS",
      "url": "/flockonus",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/flockonus",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/165553?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/165553?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59bffd17bac826f054d2a734",
    "text": "I see OpenZeppelin contracts always use `uint256` with SafeMath, but not quite clear why",
    "html": "I see OpenZeppelin contracts always use <code>uint256</code> with SafeMath, but not quite clear why",
    "sent": "2017-09-18T17:06:31.002Z",
    "editedAt": "2017-09-18T17:06:40.042Z",
    "fromUser": {
      "id": "554e1cee15522ed4b3e02727",
      "username": "flockonus",
      "displayName": "FabianoPS",
      "url": "/flockonus",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/flockonus",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/165553?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/165553?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "59c00b73177fb9fe7ed8402f",
    "text": "@flockonus `uint` is just an alias to `uint256` ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"flockonus\" class=\"mention\">@flockonus</span> <code>uint</code> is just an alias to <code>uint256</code> ",
    "sent": "2017-09-18T18:07:47.680Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [
      {
        "screenName": "flockonus",
        "userId": "554e1cee15522ed4b3e02727",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59c00b81210ac269204871f4",
    "text": "Also gas costs are not linear with the amount of bytes occupied",
    "html": "Also gas costs are not linear with the amount of bytes occupied",
    "sent": "2017-09-18T18:08:01.306Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59c00bbc7b7d98d30d0eb6e6",
    "text": "first of all because the savings stemming from tightly packing data types only happen in storage (talking about Solidity in specific, here)",
    "html": "first of all because the savings stemming from tightly packing data types only happen in storage (talking about Solidity in specific, here)",
    "sent": "2017-09-18T18:09:00.618Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59c00c351081499f1f48f7bd",
    "text": "and also because everything in the EVM natively works with 32 bytes (256 bits, hence the `256` in front of `uint`) and more opcodes are generally necessary to deal with smaller sized data types",
    "html": "and also because everything in the EVM natively works with 32 bytes (256 bits, hence the <code>256</code> in front of <code>uint</code>) and more opcodes are generally necessary to deal with smaller sized data types",
    "sent": "2017-09-18T18:11:01.752Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59c00c8f614889d475135dc6",
    "text": "TL;DR: `uint` is an alias to `uint256` & the size of the data type is not directly related to gas costs",
    "html": "TL;DR: <code>uint</code> is an alias to <code>uint256</code> &amp; the size of the data type is not directly related to gas costs",
    "sent": "2017-09-18T18:12:31.045Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59c0137e177fb9fe7ed87030",
    "text": "Ok, but you mention the cost of storage may differ depending on how much is stored, right? Arguably that's what i want to optimize for, since it's thousands of times more expensive than memory",
    "html": "Ok, but you mention the cost of storage may differ depending on how much is stored, right? Arguably that&#39;s what i want to optimize for, since it&#39;s thousands of times more expensive than memory",
    "sent": "2017-09-18T18:42:06.484Z",
    "fromUser": {
      "id": "554e1cee15522ed4b3e02727",
      "username": "flockonus",
      "displayName": "FabianoPS",
      "url": "/flockonus",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/flockonus",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/165553?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/165553?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59c2645fcfeed2eb652fd997",
    "text": "hello everyone, We have used he \"https://ethereum.gitbooks.io/frontier-guide/content/rpc.html\" method. and when call the \"eth_sendTransaction\" is bydefault pickup the gas value, but i want to send \"fix gas value\". please help us.",
    "html": "hello everyone, We have used he &quot;<a href=\"https://ethereum.gitbooks.io/frontier-guide/content/rpc.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://ethereum.gitbooks.io/frontier-guide/content/rpc.html</a>&quot; method. and when call the &quot;eth_sendTransaction&quot; is bydefault pickup the gas value, but i want to send &quot;fix gas value&quot;. please help us.",
    "sent": "2017-09-20T12:51:43.126Z",
    "fromUser": {
      "id": "59a526bbd73408ce4f736572",
      "username": "PadharaHitesh",
      "displayName": "PadharaHitesh",
      "url": "/PadharaHitesh",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/PadharaHitesh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/31240842?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/31240842?v=4&s=128",
      "v": 149,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [
      {
        "url": "https://ethereum.gitbooks.io/frontier-guide/content/rpc.html"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59c2814dc101bc4e3aecd44d",
    "text": "Lol ",
    "html": "Lol ",
    "sent": "2017-09-20T14:55:09.916Z",
    "fromUser": {
      "id": "5775ff8fc2f0db084a20e319",
      "username": "tcsiwula",
      "displayName": "Tim Siwula",
      "url": "/tcsiwula",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/tcsiwula",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2419150?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2419150?v=4&s=128",
      "v": 54,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59c30916177fb9fe7ee67589",
    "text": "Is it common for people to use `uint32` to store `block.number`, or is it recommended to be on the extra safe side and use `uint64` ?",
    "html": "Is it common for people to use <code>uint32</code> to store <code>block.number</code>, or is it recommended to be on the extra safe side and use <code>uint64</code> ?",
    "sent": "2017-09-21T00:34:30.125Z",
    "fromUser": {
      "id": "554e1cee15522ed4b3e02727",
      "username": "flockonus",
      "displayName": "FabianoPS",
      "url": "/flockonus",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/flockonus",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/165553?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/165553?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59c51388bac826f054e9dd43",
    "text": "Anyone have a suggestion for more complete documentation on Truffle?",
    "html": "Anyone have a suggestion for more complete documentation on Truffle?",
    "sent": "2017-09-22T13:43:36.858Z",
    "fromUser": {
      "id": "585a3133d73408ce4f3e7374",
      "username": "kwaazaar",
      "displayName": "Robert te Kaat",
      "url": "/kwaazaar",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/kwaazaar",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8937587?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8937587?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59c5139732fc8b7e402c753d",
    "text": "The site only contains basic samples and documentation.",
    "html": "The site only contains basic samples and documentation.",
    "sent": "2017-09-22T13:43:51.509Z",
    "fromUser": {
      "id": "585a3133d73408ce4f3e7374",
      "username": "kwaazaar",
      "displayName": "Robert te Kaat",
      "url": "/kwaazaar",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/kwaazaar",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/8937587?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/8937587?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59c54bdd7b7d98d30d26ffd8",
    "text": "@flockonus I would recommend using `uint256`. There are usually no gas cost gains from using smaller data types, quite the contrary actually, you usually end up spending more.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"flockonus\" class=\"mention\">@flockonus</span> I would recommend using <code>uint256</code>. There are usually no gas cost gains from using smaller data types, quite the contrary actually, you usually end up spending more.",
    "sent": "2017-09-22T17:43:57.699Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [
      {
        "screenName": "flockonus",
        "userId": "554e1cee15522ed4b3e02727",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59c54bf6210ac269205ffaae",
    "text": "@kwaazaar I'll let someone else chime in. Don't know of any other good Truffle resources myself",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"kwaazaar\" class=\"mention\">@kwaazaar</span> I&#39;ll let someone else chime in. Don&#39;t know of any other good Truffle resources myself",
    "sent": "2017-09-22T17:44:22.262Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [
      {
        "screenName": "kwaazaar",
        "userId": "585a3133d73408ce4f3e7374",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59c78896614889d47532f35c",
    "text": "Hey, been writing smart contracts for a few days now, using the testrpc node package, and solidity with web3.eth, I have a few questions. \n\nIf I make a token. How do I accept ether deposit and then automatically return with the token amount (or update the balance of the user).\n\nJust to be clear, I know how to update the balance, but whenever I use web3.eth.sendTranaction({from: addressofUser, to: addressofContract, value: 100})\n\nThen I check balance, The balance hasn't been updated. its like it never saw the incoming ether? @here",
    "html": "<p>Hey, been writing smart contracts for a few days now, using the testrpc node package, and solidity with web3.eth, I have a few questions. </p><p>If I make a token. How do I accept ether deposit and then automatically return with the token amount (or update the balance of the user).</p><p>Just to be clear, I know how to update the balance, but whenever I use web3.eth.sendTranaction({from: addressofUser, to: addressofContract, value: 100})</p><p>Then I check balance, The balance hasn&#39;t been updated. its like it never saw the incoming ether? <span data-link-type=\"mention\" data-screen-name=\"here\" class=\"mention\">@here</span></p>",
    "sent": "2017-09-24T10:27:34.905Z",
    "editedAt": "2017-09-24T10:29:41.843Z",
    "fromUser": {
      "id": "5780c02fc2f0db084a222dc7",
      "username": "vince-lynch",
      "displayName": "Vince Lynch",
      "url": "/vince-lynch",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/vince-lynch",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16373282?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16373282?v=4&s=128",
      "v": 39,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [
      {
        "screenName": "here",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "59c8f2a6c101bc4e3a063f45",
    "text": "@vince-lynch it could be that the amount you are depositing is vanishingly small.  Try using `value: web3.toWei(100, ether)`",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"vince-lynch\" class=\"mention\">@vince-lynch</span> it could be that the amount you are depositing is vanishingly small.  Try using <code>value: web3.toWei(100, ether)</code>",
    "sent": "2017-09-25T12:12:22.823Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [
      {
        "screenName": "vince-lynch",
        "userId": "5780c02fc2f0db084a222dc7",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59c8fd90f7299e8f536d9b34",
    "text": "@maurelian  - thankyou. Also I wasn't using function() payable{}",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span>  - thankyou. Also I wasn&#39;t using function() payable{}",
    "sent": "2017-09-25T12:58:56.014Z",
    "fromUser": {
      "id": "5780c02fc2f0db084a222dc7",
      "username": "vince-lynch",
      "displayName": "Vince Lynch",
      "url": "/vince-lynch",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/vince-lynch",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16373282?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16373282?v=4&s=128",
      "v": 39,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59c8fdb7cfeed2eb654a2c5d",
    "text": "@maurelian  I have another question. For my dApp to see the transactions incoming to my contract does my server with the dApp on it also need the full geth Mainnet",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span>  I have another question. For my dApp to see the transactions incoming to my contract does my server with the dApp on it also need the full geth Mainnet",
    "sent": "2017-09-25T12:59:35.635Z",
    "fromUser": {
      "id": "5780c02fc2f0db084a222dc7",
      "username": "vince-lynch",
      "displayName": "Vince Lynch",
      "url": "/vince-lynch",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/vince-lynch",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16373282?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16373282?v=4&s=128",
      "v": 39,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59c8fdc3cfeed2eb654a2cf0",
    "text": "or is geth --light / --fast good enough?",
    "html": "or is geth --light / --fast good enough?",
    "sent": "2017-09-25T12:59:47.291Z",
    "fromUser": {
      "id": "5780c02fc2f0db084a222dc7",
      "username": "vince-lynch",
      "displayName": "Vince Lynch",
      "url": "/vince-lynch",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/vince-lynch",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16373282?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16373282?v=4&s=128",
      "v": 39,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59c8fe97f7299e8f536da14d",
    "text": "@vince-lynch I'm maybe not the best person for that question. I believe those modes would suffice.  I think `fast` is still a full node once the initial sync is complete, not a sure about `light`. ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"vince-lynch\" class=\"mention\">@vince-lynch</span> I&#39;m maybe not the best person for that question. I believe those modes would suffice.  I think <code>fast</code> is still a full node once the initial sync is complete, not a sure about <code>light</code>. ",
    "sent": "2017-09-25T13:03:19.343Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [
      {
        "screenName": "vince-lynch",
        "userId": "5780c02fc2f0db084a222dc7",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59c8febf614889d4753889a8",
    "text": "I'd say check ethereu.stackexchange, if you find nothing there, try the geth gitter .:)",
    "html": "I&#39;d say check ethereu.stackexchange, if you find nothing there, try the geth gitter .:)",
    "sent": "2017-09-25T13:03:59.182Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59c9ff5ebc46472974773b60",
    "text": "Hello, can anyone tell me how to detect contract transaction? https://etherscan.io/tx/0x31eebe9982b7fa990e0b4188e832451404c74b11a8b4c4e140a5fd2ce2edf14d on this transaction. i can get receiver address of 0x1522900b6dafac587d499a862861c0869be6e428 but i want this 0xcc038c92a500510a6d7c7ee57d59050dd5b16b90 address from given transaction hash.\nis it possible?",
    "html": "Hello, can anyone tell me how to detect contract transaction? <a href=\"https://etherscan.io/tx/0x31eebe9982b7fa990e0b4188e832451404c74b11a8b4c4e140a5fd2ce2edf14d\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://etherscan.io/tx/0x31eebe9982b7fa990e0b4188e832451404c74b11a8b4c4e140a5fd2ce2edf14d</a> on this transaction. i can get receiver address of 0x1522900b6dafac587d499a862861c0869be6e428 but i want this 0xcc038c92a500510a6d7c7ee57d59050dd5b16b90 address from given transaction hash.<br>is it possible?",
    "sent": "2017-09-26T07:18:54.403Z",
    "fromUser": {
      "id": "59a526bbd73408ce4f736572",
      "username": "PadharaHitesh",
      "displayName": "PadharaHitesh",
      "url": "/PadharaHitesh",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/PadharaHitesh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/31240842?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/31240842?v=4&s=128",
      "v": 149,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [
      {
        "url": "https://etherscan.io/tx/0x31eebe9982b7fa990e0b4188e832451404c74b11a8b4c4e140a5fd2ce2edf14d"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cb79b1b20c6424299152cb",
    "text": "Anyone there?",
    "html": "Anyone there?",
    "sent": "2017-09-27T10:13:05.079Z",
    "fromUser": {
      "id": "59a526bbd73408ce4f736572",
      "username": "PadharaHitesh",
      "displayName": "PadharaHitesh",
      "url": "/PadharaHitesh",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/PadharaHitesh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/31240842?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/31240842?v=4&s=128",
      "v": 149,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cb79e8bac826f05404c193",
    "text": "i am stack in making contract for getting contract  txhash?",
    "html": "i am stack in making contract for getting contract  txhash?",
    "sent": "2017-09-27T10:14:00.503Z",
    "fromUser": {
      "id": "59a526bbd73408ce4f736572",
      "username": "PadharaHitesh",
      "displayName": "PadharaHitesh",
      "url": "/PadharaHitesh",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/PadharaHitesh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/31240842?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/31240842?v=4&s=128",
      "v": 149,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cb7a0bf7299e8f537a0e06",
    "text": "thanks. please help us..!!",
    "html": "thanks. please help us..!!",
    "sent": "2017-09-27T10:14:35.928Z",
    "fromUser": {
      "id": "59a526bbd73408ce4f736572",
      "username": "PadharaHitesh",
      "displayName": "PadharaHitesh",
      "url": "/PadharaHitesh",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/PadharaHitesh",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/31240842?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/31240842?v=4&s=128",
      "v": 149,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cb95ed7b7d98d30d416587",
    "text": "@PadharaHitesh It's not clear what you are trying to do. Do you have some sample code you can share that might clarify?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"PadharaHitesh\" class=\"mention\">@PadharaHitesh</span> It&#39;s not clear what you are trying to do. Do you have some sample code you can share that might clarify?",
    "sent": "2017-09-27T12:13:33.151Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [
      {
        "screenName": "PadharaHitesh",
        "userId": "59a526bbd73408ce4f736572",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cba8ffbac826f05405e4ed",
    "text": "Hello everyone, hope you guys are all doing well. I would like to know something ",
    "html": "Hello everyone, hope you guys are all doing well. I would like to know something ",
    "sent": "2017-09-27T13:34:55.965Z",
    "fromUser": {
      "id": "59c7af98d73408ce4f772185",
      "username": "rickie247",
      "displayName": "Rick Morales",
      "url": "/rickie247",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/rickie247",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/31505335?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/31505335?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cba9a17b7d98d30d41e464",
    "text": "I am just starting out with the smart contracts and I am getting confused about whether I could copy and paste some of the contracts that have already been published to then add features if I wanted to (not necessarily)? I mean it is open source code and it is not like I should reinvent the wheel here as that could lead to problems; Is that ok to do. What does it exactly mean when you have someone on github licensed under the Apache 2.0?",
    "html": "I am just starting out with the smart contracts and I am getting confused about whether I could copy and paste some of the contracts that have already been published to then add features if I wanted to (not necessarily)? I mean it is open source code and it is not like I should reinvent the wheel here as that could lead to problems; Is that ok to do. What does it exactly mean when you have someone on github licensed under the Apache 2.0?",
    "sent": "2017-09-27T13:37:37.082Z",
    "fromUser": {
      "id": "59c7af98d73408ce4f772185",
      "username": "rickie247",
      "displayName": "Rick Morales",
      "url": "/rickie247",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/rickie247",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/31505335?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/31505335?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cba9a832fc8b7e4047abbf",
    "text": "Any answers appreciated",
    "html": "Any answers appreciated",
    "sent": "2017-09-27T13:37:44.295Z",
    "fromUser": {
      "id": "59c7af98d73408ce4f772185",
      "username": "rickie247",
      "displayName": "Rick Morales",
      "url": "/rickie247",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/rickie247",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/31505335?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/31505335?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cbac68b20c64242992920c",
    "text": "@rickie247 good questions. For contracts that will live on the main ethereum blockchain, we'd strongly encourage you to copy and reuse as much code as possible. Especially if it has been previously audited.  Search for \"reuse\" here: https://github.com/ConsenSys/smart-contract-best-practices",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"rickie247\" class=\"mention\">@rickie247</span> good questions. For contracts that will live on the main ethereum blockchain, we&#39;d strongly encourage you to copy and reuse as much code as possible. Especially if it has been previously audited.  Search for &quot;reuse&quot; here: <a href=\"https://github.com/ConsenSys/smart-contract-best-practices\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/ConsenSys/smart-contract-best-practices</a>",
    "sent": "2017-09-27T13:49:28.305Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [
      {
        "url": "https://github.com/ConsenSys/smart-contract-best-practices"
      }
    ],
    "mentions": [
      {
        "screenName": "rickie247",
        "userId": "59c7af98d73408ce4f772185",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cbac7cbac826f05405fbac",
    "text": "for learning purposes, I'd recommend you write as much new code as possible, and see how it works.",
    "html": "for learning purposes, I&#39;d recommend you write as much new code as possible, and see how it works.",
    "sent": "2017-09-27T13:49:48.780Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cbac86cfeed2eb6558220f",
    "text": "remix.ethereum.org is an awesome learning tool for that. ",
    "html": "remix.ethereum.org is an awesome learning tool for that. ",
    "sent": "2017-09-27T13:49:58.209Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cbacbfb20c64242992940f",
    "text": "regarding licenses, this is a good resource: https://github.com/blog/1530-choosing-an-open-source-license",
    "html": "regarding licenses, this is a good resource: <a href=\"https://github.com/blog/1530-choosing-an-open-source-license\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/blog/1530-choosing-an-open-source-license</a>",
    "sent": "2017-09-27T13:50:55.538Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [
      {
        "url": "https://github.com/blog/1530-choosing-an-open-source-license"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cbaf14b20c64242992a226",
    "text": "Thank you so much for the information! I've came across  tokenmarket which has great repositories in which he uses codes from different places such as OpenZeppelin, etc. but he also adds the following:",
    "html": "Thank you so much for the information! I&#39;ve came across  tokenmarket which has great repositories in which he uses codes from different places such as OpenZeppelin, etc. but he also adds the following:",
    "sent": "2017-09-27T14:00:52.287Z",
    "fromUser": {
      "id": "59c7af98d73408ce4f772185",
      "username": "rickie247",
      "displayName": "Rick Morales",
      "url": "/rickie247",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/rickie247",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/31505335?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/31505335?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cbaf167b7d98d30d420b50",
    "text": "/**\n * This smart contract code is Copyright 2017 TokenMarket Ltd. For more information see https://tokenmarket.net\n *\n * Licensed under the Apache License, version 2.0: https://github.com/TokenMarketNet/ico/blob/master/LICENSE.txt\n */\n",
    "html": "/**<ul>\n<li>This smart contract code is Copyright 2017 TokenMarket Ltd. For more information see <a href=\"https://tokenmarket.net\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://tokenmarket.net</a><br>*</li>\n<li>Licensed under the Apache License, version 2.0: <a href=\"https://github.com/TokenMarketNet/ico/blob/master/LICENSE.txt\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/TokenMarketNet/ico/blob/master/LICENSE.txt</a><br>*/</li>\n</ul>\n",
    "sent": "2017-09-27T14:00:54.545Z",
    "fromUser": {
      "id": "59c7af98d73408ce4f772185",
      "username": "rickie247",
      "displayName": "Rick Morales",
      "url": "/rickie247",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/rickie247",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/31505335?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/31505335?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [
      {
        "url": "https://tokenmarket.net"
      },
      {
        "url": "https://github.com/TokenMarketNet/ico/blob/master/LICENSE.txt"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cbaf2c210ac269207ab94c",
    "text": "Does this mean that I can/cant use it?",
    "html": "Does this mean that I can/cant use it?",
    "sent": "2017-09-27T14:01:16.928Z",
    "fromUser": {
      "id": "59c7af98d73408ce4f772185",
      "username": "rickie247",
      "displayName": "Rick Morales",
      "url": "/rickie247",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/rickie247",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/31505335?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/31505335?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cbaf4af7299e8f537b5657",
    "text": "I am not a lawyer. ",
    "html": "I am not a lawyer. ",
    "sent": "2017-09-27T14:01:46.171Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cbaf4bf7299e8f537b5666",
    "text": "¯\\_(ツ)_/¯",
    "html": "¯_(ツ)_/¯",
    "sent": "2017-09-27T14:01:47.653Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cbaf79177fb9fe7e0bfc46",
    "text": "Yeah thats the tricky part. The definitions are pretty confusing",
    "html": "Yeah thats the tricky part. The definitions are pretty confusing",
    "sent": "2017-09-27T14:02:33.537Z",
    "fromUser": {
      "id": "59c7af98d73408ce4f772185",
      "username": "rickie247",
      "displayName": "Rick Morales",
      "url": "/rickie247",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/rickie247",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/31505335?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/31505335?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cbaf7a614889d475468205",
    "text": "lol",
    "html": "lol",
    "sent": "2017-09-27T14:02:34.824Z",
    "fromUser": {
      "id": "59c7af98d73408ce4f772185",
      "username": "rickie247",
      "displayName": "Rick Morales",
      "url": "/rickie247",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/rickie247",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/31505335?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/31505335?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cbb1b5b20c64242992b20a",
    "text": "Another question, what is the best platform to use to develop the smart contracts in? Truffle or just the mist wallet? Or it doesnt really matters?",
    "html": "Another question, what is the best platform to use to develop the smart contracts in? Truffle or just the mist wallet? Or it doesnt really matters?",
    "sent": "2017-09-27T14:12:05.368Z",
    "fromUser": {
      "id": "59c7af98d73408ce4f772185",
      "username": "rickie247",
      "displayName": "Rick Morales",
      "url": "/rickie247",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/rickie247",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/31505335?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/31505335?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cbb1c6b59d55b823436843",
    "text": "we like truffle.",
    "html": "we like truffle.",
    "sent": "2017-09-27T14:12:22.734Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cbb1d8f7299e8f537b654f",
    "text": "I don't think mist is widely used for professional dev purposes. ",
    "html": "I don&#39;t think mist is widely used for professional dev purposes. ",
    "sent": "2017-09-27T14:12:40.264Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cbb1ef32fc8b7e4047e09f",
    "text": "truffle enables the creation of robust deployment and testing scripts, which is essential.",
    "html": "truffle enables the creation of robust deployment and testing scripts, which is essential.",
    "sent": "2017-09-27T14:13:03.394Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cbb211b20c64242992b3ab",
    "text": "They're also pretty helpful in gitter.im/consensys/truffle",
    "html": "They&#39;re also pretty helpful in <a href=\"http://gitter.im/consensys/truffle\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">gitter.im/consensys/truffle</a>",
    "sent": "2017-09-27T14:13:37.585Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [
      {
        "url": "http://gitter.im/consensys/truffle"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cbb259f7299e8f537b6889",
    "text": "thank you!!",
    "html": "thank you!!",
    "sent": "2017-09-27T14:14:49.866Z",
    "fromUser": {
      "id": "59c7af98d73408ce4f772185",
      "username": "rickie247",
      "displayName": "Rick Morales",
      "url": "/rickie247",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/rickie247",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/31505335?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/31505335?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cbb278f7299e8f537b6936",
    "text": "where would be a great place to recruit some developers for a project",
    "html": "where would be a great place to recruit some developers for a project",
    "sent": "2017-09-27T14:15:20.692Z",
    "fromUser": {
      "id": "59c7af98d73408ce4f772185",
      "username": "rickie247",
      "displayName": "Rick Morales",
      "url": "/rickie247",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/rickie247",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/31505335?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/31505335?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59cbb29dcfeed2eb65584939",
    "text": "maybe reddit.com/r/ethdev",
    "html": "maybe <a href=\"http://reddit.com/r/ethdev\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">reddit.com/r/ethdev</a>",
    "sent": "2017-09-27T14:15:57.319Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [
      {
        "url": "http://reddit.com/r/ethdev"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595ce6d689aea4761d695275",
    "text": "And tracking the energy spending is just a matter of putting some IoT devices securely dump their data onto the blockchain",
    "html": "And tracking the energy spending is just a matter of putting some IoT devices securely dump their data onto the blockchain",
    "sent": "2017-07-05T13:17:10.581Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595ce6ddc101bc4e3a5440bb",
    "text": "Check out Grid+",
    "html": "Check out Grid+",
    "sent": "2017-07-05T13:17:17.533Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595ce6e4c101bc4e3a5440e6",
    "text": "Will Apple allow Ethereum based (purchase/sale of Ether to use) within the App Store? I heard they’re being very picky on crypto DApps",
    "html": "Will Apple allow Ethereum based (purchase/sale of Ether to use) within the App Store? I heard they’re being very picky on crypto DApps",
    "sent": "2017-07-05T13:17:24.870Z",
    "editedAt": "2017-07-05T13:17:54.747Z",
    "fromUser": {
      "id": "5525229815522ed4b3deaeea",
      "username": "yozef",
      "displayName": "Joseph",
      "url": "/yozef",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/yozef",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/287256?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/287256?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 3
  },
  {
    "id": "595ce7381c8697534af21b0e",
    "text": "I guess that if they ever went down that road, in a near future their devices would start to drastically fall in sales numebrs",
    "html": "I guess that if they ever went down that road, in a near future their devices would start to drastically fall in sales numebrs",
    "sent": "2017-07-05T13:18:48.610Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595ce74a3230e14f3a29e2c2",
    "text": "Don't believe they will forbid Status from launching to the app store, no",
    "html": "Don&#39;t believe they will forbid Status from launching to the app store, no",
    "sent": "2017-07-05T13:19:06.006Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595ce7673230e14f3a29e322",
    "text": "Status.im is quite different from other mobile dApps because it is in fact a mobile node",
    "html": "Status.im is quite different from other mobile dApps because it is in fact a mobile node",
    "sent": "2017-07-05T13:19:35.772Z",
    "editedAt": "2017-07-05T13:19:46.223Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "595ce78e329651f46e577467",
    "text": "instead of just a UI that is querying a full node (probably INFURA :D) in the back",
    "html": "instead of just a UI that is querying a full node (probably INFURA :D) in the back",
    "sent": "2017-07-05T13:20:14.939Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595ce7a3329651f46e57748c",
    "text": "We have not seen mobile Dapps where you can use coins/eths within the App… To date I’ve seen Crypto price charts. Maybe someone has some some, would like to check them out",
    "html": "We have not seen mobile Dapps where you can use coins/eths within the App… To date I’ve seen Crypto price charts. Maybe someone has some some, would like to check them out",
    "sent": "2017-07-05T13:20:35.429Z",
    "editedAt": "2017-07-05T13:21:08.907Z",
    "fromUser": {
      "id": "5525229815522ed4b3deaeea",
      "username": "yozef",
      "displayName": "Joseph",
      "url": "/yozef",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/yozef",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/287256?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/287256?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "595ce7c1c101bc4e3a54454b",
    "text": "Yep. Status.im is a full fledged wallet",
    "html": "Yep. Status.im is a full fledged wallet",
    "sent": "2017-07-05T13:21:05.398Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595ce7d876a757f808dc285c",
    "text": "So you're gonna be able to spend ETH, ERC20 tokens, ... Do any kind of transactions on the blockchain, really",
    "html": "So you&#39;re gonna be able to spend ETH, ERC20 tokens, ... Do any kind of transactions on the blockchain, really",
    "sent": "2017-07-05T13:21:28.504Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595ce7db329651f46e5775de",
    "text": "is it on the App Store? I’ve seen a TestFlight (Beta distribution)",
    "html": "is it on the App Store? I’ve seen a TestFlight (Beta distribution)",
    "sent": "2017-07-05T13:21:31.617Z",
    "fromUser": {
      "id": "5525229815522ed4b3deaeea",
      "username": "yozef",
      "displayName": "Joseph",
      "url": "/yozef",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/yozef",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/287256?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/287256?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595ce7e776a757f808dc28d7",
    "text": "just on TestFlight, I believe",
    "html": "just on TestFlight, I believe",
    "sent": "2017-07-05T13:21:43.493Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595ce817c101bc4e3a54487b",
    "text": "I wish them the best of luck & hopefully they will approve it :) This will open the door to our (D)Apps on the App Store too. Google Play is no issue as we know.",
    "html": "I wish them the best of luck &amp; hopefully they will approve it :) This will open the door to our (D)Apps on the App Store too. Google Play is no issue as we know.",
    "sent": "2017-07-05T13:22:31.454Z",
    "fromUser": {
      "id": "5525229815522ed4b3deaeea",
      "username": "yozef",
      "displayName": "Joseph",
      "url": "/yozef",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/yozef",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/287256?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/287256?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595da7830de4d2545efacd32",
    "text": "Didn't apple went on record to state that they want 30% of all in-app crypto-coin transactions few weeks ago?",
    "html": "Didn&#39;t apple went on record to state that they want 30% of all in-app crypto-coin transactions few weeks ago?",
    "sent": "2017-07-06T02:59:15.818Z",
    "fromUser": {
      "id": "5936f257d73408ce4f6526e9",
      "username": "imosdevteam",
      "displayName": "ImmersiveOS Core Dev Team",
      "url": "/imosdevteam",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/imosdevteam",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/28583741?v=3&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/28583741?v=3&s=128",
      "v": 1,
      "gv": "3"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595e42e889aea4761d6f6ae8",
    "text": "Did they? Cool 😎",
    "html": "Did they? Cool 😎",
    "sent": "2017-07-06T14:02:16.888Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595f52d8c101bc4e3a5eec66",
    "text": "Hello all! \nI have a question: I created a cryptocurrency following the tutorial given by Ethereum. Considering the name of my token is newtoken, I want to develop a program/smart contract where all the users have some score and the user with score > (somevalue) should be given 10 newtokens from the main/central account. Any idea how this can be done ? ",
    "html": "Hello all!<br>I have a question: I created a cryptocurrency following the tutorial given by Ethereum. Considering the name of my token is newtoken, I want to develop a program/smart contract where all the users have some score and the user with score &gt; (somevalue) should be given 10 newtokens from the main/central account. Any idea how this can be done ? ",
    "sent": "2017-07-07T09:22:32.987Z",
    "fromUser": {
      "id": "594bbf15d73408ce4f69508c",
      "username": "Shreekavithaa",
      "displayName": "Shree",
      "url": "/Shreekavithaa",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/Shreekavithaa",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8644765?v=3&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8644765?v=3&s=128",
      "v": 2,
      "gv": "3"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595f53063230e14f3a349efb",
    "text": "I want this to be done automatically when the score of any user crosses specified value ",
    "html": "I want this to be done automatically when the score of any user crosses specified value ",
    "sent": "2017-07-07T09:23:18.309Z",
    "fromUser": {
      "id": "594bbf15d73408ce4f69508c",
      "username": "Shreekavithaa",
      "displayName": "Shree",
      "url": "/Shreekavithaa",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/Shreekavithaa",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8644765?v=3&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8644765?v=3&s=128",
      "v": 2,
      "gv": "3"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595f86c976a757f808e80fe8",
    "text": "Whats the safest was to generate a Random Number Generator in Solidity? (Any Libs?)",
    "html": "Whats the safest was to generate a Random Number Generator in Solidity? (Any Libs?)",
    "sent": "2017-07-07T13:04:09.242Z",
    "fromUser": {
      "id": "5525229815522ed4b3deaeea",
      "username": "yozef",
      "displayName": "Joseph",
      "url": "/yozef",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/yozef",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/287256?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/287256?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595f87cc0de4d2545e032732",
    "text": "Oh man @yozef that's a big, fascinating topic. Start here: https://github.com/ConsenSys/smart-contract-best-practices/blob/95f6b56d58bde77e33c2164ae4f039e5353288e1/README.md#L301\n\nThat section could probably be updated too, so if in your travels you find some new approaches you think could be included, please open an issue. ",
    "html": "<p>Oh man <span data-link-type=\"mention\" data-screen-name=\"yozef\" class=\"mention\">@yozef</span> that&#39;s a big, fascinating topic. Start here: <a href=\"https://github.com/ConsenSys/smart-contract-best-practices/blob/95f6b56d58bde77e33c2164ae4f039e5353288e1/README.md#L301\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/ConsenSys/smart-contract-best-practices/blob/95f6b56d58bde77e33c2164ae4f039e5353288e1/README.md#L301</a></p><p>That section could probably be updated too, so if in your travels you find some new approaches you think could be included, please open an issue. </p>",
    "sent": "2017-07-07T13:08:28.960Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [
      {
        "url": "https://github.com/ConsenSys/smart-contract-best-practices/blob/95f6b56d58bde77e33c2164ae4f039e5353288e1/README.md#L301"
      }
    ],
    "mentions": [
      {
        "screenName": "yozef",
        "userId": "5525229815522ed4b3deaeea",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595f87eebf7e6af22cb4a25a",
    "text": "much appreciated @maurelian :)",
    "html": "much appreciated <span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> :)",
    "sent": "2017-07-07T13:09:02.664Z",
    "fromUser": {
      "id": "5525229815522ed4b3deaeea",
      "username": "yozef",
      "displayName": "Joseph",
      "url": "/yozef",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/yozef",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/287256?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/287256?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595f8848bf7e6af22cb4a3a7",
    "text": "I will surely be auditing my code before publishing to the live blockchain (I hear at least 2 - 4 devs is the norm)",
    "html": "I will surely be auditing my code before publishing to the live blockchain (I hear at least 2 - 4 devs is the norm)",
    "sent": "2017-07-07T13:10:32.552Z",
    "editedAt": "2017-07-07T13:10:47.057Z",
    "fromUser": {
      "id": "5525229815522ed4b3deaeea",
      "username": "yozef",
      "displayName": "Joseph",
      "url": "/yozef",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/yozef",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/287256?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/287256?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "595f8de31c8697534afe005a",
    "text": "yeah... it's a long road if you're planning to deploy anything serious. We hope to being publishing a lot more content to outline that road. :)",
    "html": "yeah... it&#39;s a long road if you&#39;re planning to deploy anything serious. We hope to being publishing a lot more content to outline that road. :)",
    "sent": "2017-07-07T13:34:27.155Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595f8e390de4d2545e03461b",
    "text": "The Contract itself is pretty simple… I am hoping to use a lib thats been audited before for the RNG (seeing if this is currently possible and how that number truly gets generated is my current research)",
    "html": "The Contract itself is pretty simple… I am hoping to use a lib thats been audited before for the RNG (seeing if this is currently possible and how that number truly gets generated is my current research)",
    "sent": "2017-07-07T13:35:53.126Z",
    "editedAt": "2017-07-07T13:36:11.931Z",
    "fromUser": {
      "id": "5525229815522ed4b3deaeea",
      "username": "yozef",
      "displayName": "Joseph",
      "url": "/yozef",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/yozef",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/287256?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/287256?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "595fab95329651f46e63f640",
    "text": "@yozef that's exactly what the section I linked to discusses. BTCRelay (currently not always available at the moment), and RandDAO. ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"yozef\" class=\"mention\">@yozef</span> that&#39;s exactly what the section I linked to discusses. BTCRelay (currently not always available at the moment), and RandDAO. ",
    "sent": "2017-07-07T15:41:09.187Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [
      {
        "screenName": "yozef",
        "userId": "5525229815522ed4b3deaeea",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5961e97fbf7e6af22cbcecdb",
    "text": "i am curious what are differences between solidity and serpent?",
    "html": "i am curious what are differences between solidity and serpent?",
    "sent": "2017-07-09T08:29:51.576Z",
    "fromUser": {
      "id": "58984085d73408ce4f4861e2",
      "username": "mathcrypto",
      "displayName": "mathcrypto",
      "url": "/mathcrypto",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/mathcrypto",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20124778?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20124778?v=4&s=128",
      "v": 25,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5962cc0876a757f808f3d24b",
    "text": "They're two completely different HLLs @mathcrypto ",
    "html": "They&#39;re two completely different HLLs <span data-link-type=\"mention\" data-screen-name=\"mathcrypto\" class=\"mention\">@mathcrypto</span> ",
    "sent": "2017-07-10T00:36:24.057Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [
      {
        "screenName": "mathcrypto",
        "userId": "58984085d73408ce4f4861e2",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5962cc264bcd78af56931bec",
    "text": "Solidity syntax largely resembles Javascript with some Python-related traits like the inheritance",
    "html": "Solidity syntax largely resembles Javascript with some Python-related traits like the inheritance",
    "sent": "2017-07-10T00:36:54.193Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5962cc3af5b3458e302d9ae2",
    "text": "And Serpent was created to have a Python-like syntax itself",
    "html": "And Serpent was created to have a Python-like syntax itself",
    "sent": "2017-07-10T00:37:14.161Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5962cc7c3230e14f3a411bc9",
    "text": "But in compiled bytecode there's no clear advantages in either one or the other",
    "html": "But in compiled bytecode there&#39;s no clear advantages in either one or the other",
    "sent": "2017-07-10T00:38:20.537Z",
    "editedAt": "2017-07-10T00:39:00.624Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5962cc9d3230e14f3a411c1a",
    "text": "as opposed to LLL that being much more low-level than these two usually compiles to somewhat smaller bytecode",
    "html": "as opposed to LLL that being much more low-level than these two usually compiles to somewhat smaller bytecode",
    "sent": "2017-07-10T00:38:53.586Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "596376bf3230e14f3a43d60c",
    "text": "I'm making and application where users can buy and add tokens. And my requirement says that i should make API for this purpose. Now my doubts are that transaction of ether cannot happened through API because then my API will need the private key of the user account which it shouldnt get. Now if I add a payment gateway to make ether transactions and still integrate functionalities like transfer of tokens which requires gas amount to be reduced from the user's account which again would require private key of the users(which again shouldn't happen). So is it impossible or perhaps against the standards of Dapps to make API for this functionality??",
    "html": "I&#39;m making and application where users can buy and add tokens. And my requirement says that i should make API for this purpose. Now my doubts are that transaction of ether cannot happened through API because then my API will need the private key of the user account which it shouldnt get. Now if I add a payment gateway to make ether transactions and still integrate functionalities like transfer of tokens which requires gas amount to be reduced from the user&#39;s account which again would require private key of the users(which again shouldn&#39;t happen). So is it impossible or perhaps against the standards of Dapps to make API for this functionality??",
    "sent": "2017-07-10T12:44:47.775Z",
    "fromUser": {
      "id": "58d98635d73408ce4f54222c",
      "username": "Shubhabrata-Mukherjee",
      "displayName": "Shubhabrata-Mukherjee",
      "url": "/Shubhabrata-Mukherjee",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Shubhabrata-Mukherjee",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21312050?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21312050?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5966812a4bcd78af56a377cd",
    "text": "@thanks @GNSPS ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"thanks\" class=\"mention\">@thanks</span> <span data-link-type=\"mention\" data-screen-name=\"GNSPS\" class=\"mention\">@GNSPS</span> ",
    "sent": "2017-07-12T20:06:02.495Z",
    "fromUser": {
      "id": "58984085d73408ce4f4861e2",
      "username": "mathcrypto",
      "displayName": "mathcrypto",
      "url": "/mathcrypto",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/mathcrypto",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20124778?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20124778?v=4&s=128",
      "v": 25,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [
      {
        "screenName": "thanks",
        "userId": "55e4b5b30fc9f982beaf3606",
        "userIds": []
      },
      {
        "screenName": "GNSPS",
        "userId": "54bd42addb8155e6700ed45e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5967abdc3230e14f3a566f04",
    "text": "-sameroom portal",
    "html": "-sameroom portal",
    "sent": "2017-07-13T17:20:28.747Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5967abdd329651f46e841cad",
    "text": "**<Sameroom>** Your Portal URL is [https://sameroom.io/yGimgTJO](https://sameroom.io/yGimgTJO) -- you can send the URL to someone on a different team to share this room. Note: you can connect more than two teams this way.",
    "html": "<strong>&lt;Sameroom&gt;</strong> Your Portal URL is <a href=\"https://sameroom.io/yGimgTJO\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://sameroom.io/yGimgTJO</a> -- you can send the URL to someone on a different team to share this room. Note: you can connect more than two teams this way.",
    "sent": "2017-07-13T17:20:29.303Z",
    "fromUser": {
      "id": "586c74d2d73408ce4f41116f",
      "username": "sameroom-bot",
      "displayName": "Sameroom",
      "url": "/sameroom-bot",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/sameroom-bot",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/24907736?v=3&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/24907736?v=3&s=128",
      "v": 2,
      "gv": "3"
    },
    "unread": false,
    "readBy": 23,
    "urls": [
      {
        "url": "https://sameroom.io/yGimgTJO"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5967ae1f329651f46e84276e",
    "text": "**<Sameroom>** I've connected **1 new room** _\\#gitter-best-practices \\(ConsenSys\\)_ on Slack. See [map](https://sameroom.io/maps/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MDAwNTE2MDAsInJvb21faWQiOjI4NzM5MDUsImlkZW50aXR5X2lkIjotMTAzfQ.qDzrt5YW7yG6fn8qHUWs0ycT2A_v2OLpMQ9lWB1pwhk)",
    "html": "<strong>&lt;Sameroom&gt;</strong> I&#39;ve connected <strong>1 new room</strong> <em>#gitter-best-practices (ConsenSys)</em> on Slack. See <a href=\"https://sameroom.io/maps/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MDAwNTE2MDAsInJvb21faWQiOjI4NzM5MDUsImlkZW50aXR5X2lkIjotMTAzfQ.qDzrt5YW7yG6fn8qHUWs0ycT2A_v2OLpMQ9lWB1pwhk\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">map</a>",
    "sent": "2017-07-13T17:30:07.229Z",
    "fromUser": {
      "id": "586c74d2d73408ce4f41116f",
      "username": "sameroom-bot",
      "displayName": "Sameroom",
      "url": "/sameroom-bot",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/sameroom-bot",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/24907736?v=3&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/24907736?v=3&s=128",
      "v": 2,
      "gv": "3"
    },
    "unread": false,
    "readBy": 25,
    "urls": [
      {
        "url": "https://sameroom.io/maps/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MDAwNTE2MDAsInJvb21faWQiOjI4NzM5MDUsImlkZW50aXR5X2lkIjotMTAzfQ.qDzrt5YW7yG6fn8qHUWs0ycT2A_v2OLpMQ9lWB1pwhk"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5967aff776a757f8080977fb",
    "text": "**\\[John M, ConsenSys\\]** interesting",
    "html": "<strong>[John M, ConsenSys]</strong> interesting",
    "sent": "2017-07-13T17:37:59.966Z",
    "fromUser": {
      "id": "586c74d2d73408ce4f41116f",
      "username": "sameroom-bot",
      "displayName": "Sameroom",
      "url": "/sameroom-bot",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/sameroom-bot",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/24907736?v=3&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/24907736?v=3&s=128",
      "v": 2,
      "gv": "3"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5967b01cc101bc4e3a809ade",
    "text": "hmm....",
    "html": "hmm....",
    "sent": "2017-07-13T17:38:36.745Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5967b03c329651f46e843456",
    "text": "that bot is probably better just for notifications about activity here. ",
    "html": "that bot is probably better just for notifications about activity here. ",
    "sent": "2017-07-13T17:39:08.249Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5967b040c101bc4e3a809bf1",
    "text": "Which isn't bad.",
    "html": "Which isn&#39;t bad.",
    "sent": "2017-07-13T17:39:12.703Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5968ebce89aea4761d9b10c3",
    "text": "**\\[Joseph Chow, ConsenSys\\]** when someone posts on the gitter, we see it here?",
    "html": "<strong>[Joseph Chow, ConsenSys]</strong> when someone posts on the gitter, we see it here?",
    "sent": "2017-07-14T16:05:34.533Z",
    "fromUser": {
      "id": "586c74d2d73408ce4f41116f",
      "username": "sameroom-bot",
      "displayName": "Sameroom",
      "url": "/sameroom-bot",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/sameroom-bot",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/24907736?v=3&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/24907736?v=3&s=128",
      "v": 2,
      "gv": "3"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5968ebf5329651f46e892b67",
    "text": "**\\[John M, ConsenSys\\]** and vice versa. :\\)",
    "html": "<strong>[John M, ConsenSys]</strong> and vice versa. :)",
    "sent": "2017-07-14T16:06:13.393Z",
    "fromUser": {
      "id": "586c74d2d73408ce4f41116f",
      "username": "sameroom-bot",
      "displayName": "Sameroom",
      "url": "/sameroom-bot",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/sameroom-bot",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/24907736?v=3&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/24907736?v=3&s=128",
      "v": 2,
      "gv": "3"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "596fb2c0bc4647297406fade",
    "text": "Gavin has announced a security defect in the Parity multisigwallet contract https://blog.ethcore.io/security-alert-high-2/",
    "html": "Gavin has announced a security defect in the Parity multisigwallet contract <a href=\"https://blog.ethcore.io/security-alert-high-2/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://blog.ethcore.io/security-alert-high-2/</a>",
    "sent": "2017-07-19T19:28:00.177Z",
    "fromUser": {
      "id": "53e05886107e137846ba93c7",
      "username": "salis",
      "displayName": "Paul Salisbury",
      "url": "/salis",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/salis",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/161331?v=3&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/161331?v=3&s=128",
      "v": 3,
      "gv": "3"
    },
    "unread": false,
    "readBy": 20,
    "urls": [
      {
        "url": "https://blog.ethcore.io/security-alert-high-2/"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "596fb3354bcd78af56c7c340",
    "text": "While we wait for more details to be reported it's worth taking a closer look at the contract https://github.com/paritytech/parity/blob/4d08e7b0aec46443bf26547b17d10cb302672835/js/src/contracts/snippets/enhanced-wallet.sol",
    "html": "While we wait for more details to be reported it&#39;s worth taking a closer look at the contract <a href=\"https://github.com/paritytech/parity/blob/4d08e7b0aec46443bf26547b17d10cb302672835/js/src/contracts/snippets/enhanced-wallet.sol\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/paritytech/parity/blob/4d08e7b0aec46443bf26547b17d10cb302672835/js/src/contracts/snippets/enhanced-wallet.sol</a>",
    "sent": "2017-07-19T19:29:57.880Z",
    "fromUser": {
      "id": "53e05886107e137846ba93c7",
      "username": "salis",
      "displayName": "Paul Salisbury",
      "url": "/salis",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/salis",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/161331?v=3&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/161331?v=3&s=128",
      "v": 3,
      "gv": "3"
    },
    "unread": false,
    "readBy": 20,
    "urls": [
      {
        "url": "https://github.com/paritytech/parity/blob/4d08e7b0aec46443bf26547b17d10cb302672835/js/src/contracts/snippets/enhanced-wallet.sol"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "596fd551329651f46ea3b683",
    "text": "Hi there, I'm quite new to Solidity, but I'm curious about the data structure support it offers. The application I want to develop requires mapping and referencing many thousands of items of various combination of characteristics. Not much different from a supply catalog model. While I plan to keep the bulk of the \"fluff\" about the items off chain, I still want to have verifiable identification of a particular item and its characteristics. Are there any fancy data structures, maybe bitmapping or bitmasking based indexing, being used to highly condense this information down?",
    "html": "Hi there, I&#39;m quite new to Solidity, but I&#39;m curious about the data structure support it offers. The application I want to develop requires mapping and referencing many thousands of items of various combination of characteristics. Not much different from a supply catalog model. While I plan to keep the bulk of the &quot;fluff&quot; about the items off chain, I still want to have verifiable identification of a particular item and its characteristics. Are there any fancy data structures, maybe bitmapping or bitmasking based indexing, being used to highly condense this information down?",
    "sent": "2017-07-19T21:55:29.511Z",
    "fromUser": {
      "id": "596fb39ad73408ce4f6de67f",
      "username": "radarcg_twitter",
      "displayName": "Charles Glommen",
      "url": "/radarcg_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/radarcg_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/293840748/1241900862776_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/293840748/1241900862776.jpg"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "597048e3bc46472974091cf6",
    "text": "**\\[Joseph Chow, ConsenSys\\]** i don't understand, how does this channel get msgs ?",
    "html": "<strong>[Joseph Chow, ConsenSys]</strong> i don&#39;t understand, how does this channel get msgs ?",
    "sent": "2017-07-20T06:08:35.675Z",
    "fromUser": {
      "id": "586c74d2d73408ce4f41116f",
      "username": "sameroom-bot",
      "displayName": "Sameroom",
      "url": "/sameroom-bot",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/sameroom-bot",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/24907736?v=3&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/24907736?v=3&s=128",
      "v": 2,
      "gv": "3"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5971160f1c8697534a445e3f",
    "text": "Hey Guys, \nWith regards to actually running state channels between peers, is there a best practice methodology? I've personally been thinking about using something like PeerJS to enable communication between two peers and then coding up the logic of maintaining state myself.",
    "html": "Hey Guys,<br>With regards to actually running state channels between peers, is there a best practice methodology? I&#39;ve personally been thinking about using something like PeerJS to enable communication between two peers and then coding up the logic of maintaining state myself.",
    "sent": "2017-07-20T20:43:59.941Z",
    "fromUser": {
      "id": "55d64d720fc9f982beae18b3",
      "username": "ArjunRajJain",
      "displayName": "Arjun Raj Jain",
      "url": "/ArjunRajJain",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ArjunRajJain",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2289559?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2289559?v=4&s=128",
      "v": 7,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59711d253230e14f3a7b9d64",
    "text": "Hey @ArjunRajJain, sorry,  I'm not very familiar with the off-chain aspect of state channel patterns myself. ",
    "html": "Hey <span data-link-type=\"mention\" data-screen-name=\"ArjunRajJain\" class=\"mention\">@ArjunRajJain</span>, sorry,  I&#39;m not very familiar with the off-chain aspect of state channel patterns myself. ",
    "sent": "2017-07-20T21:14:13.954Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [
      {
        "screenName": "ArjunRajJain",
        "userId": "55d64d720fc9f982beae18b3",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59711e482723db8d5e2f3ee7",
    "text": "@radarcg_twitter I think a common approach would be to store the full data on IPFS, which would handle the \"verifiable identification of an item and it's characteristics\". Then an on chain registry contract for mapping identifiers to the IPFS object hashes.  https://www.reddit.com/r/ethdev/comments/6lbmhy/a_practical_guide_to_cheap_ipfs_hash_storage_in/",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"radarcg_twitter\" class=\"mention\">@radarcg_twitter</span> I think a common approach would be to store the full data on IPFS, which would handle the &quot;verifiable identification of an item and it&#39;s characteristics&quot;. Then an on chain registry contract for mapping identifiers to the IPFS object hashes.  <a href=\"https://www.reddit.com/r/ethdev/comments/6lbmhy/a_practical_guide_to_cheap_ipfs_hash_storage_in/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.reddit.com/r/ethdev/comments/6lbmhy/a_practical_guide_to_cheap_ipfs_hash_storage_in/</a>",
    "sent": "2017-07-20T21:19:04.588Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [
      {
        "url": "https://www.reddit.com/r/ethdev/comments/6lbmhy/a_practical_guide_to_cheap_ipfs_hash_storage_in/"
      }
    ],
    "mentions": [
      {
        "screenName": "radarcg_twitter",
        "userId": "596fb39ad73408ce4f6de67f",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59739f97614889d475dded05",
    "text": "thanks @maurelian I'll check that out!",
    "html": "thanks <span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> I&#39;ll check that out!",
    "sent": "2017-07-22T18:55:19.541Z",
    "fromUser": {
      "id": "596fb39ad73408ce4f6de67f",
      "username": "radarcg_twitter",
      "displayName": "Charles Glommen",
      "url": "/radarcg_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/radarcg_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/293840748/1241900862776_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/293840748/1241900862776.jpg"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59746e51f5b3458e3073c49b",
    "text": "Hi all - I would love to hear people's feedback on a EIP draft I'm working on regarding standardisation around responsible disclosure for Ethereum related projects: https://dickolsson.com/evrf-ethereum-vulnerability-reporting-framework/",
    "html": "Hi all - I would love to hear people&#39;s feedback on a EIP draft I&#39;m working on regarding standardisation around responsible disclosure for Ethereum related projects: <a href=\"https://dickolsson.com/evrf-ethereum-vulnerability-reporting-framework/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://dickolsson.com/evrf-ethereum-vulnerability-reporting-framework/</a>",
    "sent": "2017-07-23T09:37:21.709Z",
    "fromUser": {
      "id": "5947bfe6d73408ce4f6868ea",
      "username": "dickolsson",
      "displayName": "Dick Olsson",
      "url": "/dickolsson",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/dickolsson",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/112085?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/112085?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [
      {
        "url": "https://dickolsson.com/evrf-ethereum-vulnerability-reporting-framework/"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59746eddf5b3458e3073c5b8",
    "text": "There's a lot of work going into best security practices when it comes to development. But unfortunately vulnerabilities will keep popping up, because we're all human after all :g",
    "html": "There&#39;s a lot of work going into best security practices when it comes to development. But unfortunately vulnerabilities will keep popping up, because we&#39;re all human after all :g",
    "sent": "2017-07-23T09:39:41.588Z",
    "fromUser": {
      "id": "5947bfe6d73408ce4f6868ea",
      "username": "dickolsson",
      "displayName": "Dick Olsson",
      "url": "/dickolsson",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/dickolsson",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/112085?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/112085?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59746f512723db8d5e3adfd2",
    "text": "And after seeing a lack of best practices around disclosure procedures I decided to propose the Ethereum Vulnerability Reporting Framework. It's inspired by how other large open source projects manage these processes in their universe",
    "html": "And after seeing a lack of best practices around disclosure procedures I decided to propose the Ethereum Vulnerability Reporting Framework. It&#39;s inspired by how other large open source projects manage these processes in their universe",
    "sent": "2017-07-23T09:41:37.900Z",
    "fromUser": {
      "id": "5947bfe6d73408ce4f6868ea",
      "username": "dickolsson",
      "displayName": "Dick Olsson",
      "url": "/dickolsson",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/dickolsson",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/112085?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/112085?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5975b13676a757f8083ec5cd",
    "text": "Hi everyone, what's the best way to pass an array of strings to a function? Is there a better way beside serialized byte[] ?",
    "html": "Hi everyone, what&#39;s the best way to pass an array of strings to a function? Is there a better way beside serialized byte[] ?",
    "sent": "2017-07-24T08:35:02.058Z",
    "fromUser": {
      "id": "58ff96eed73408ce4f5af1ff",
      "username": "xphoniex",
      "displayName": "Dave",
      "url": "/xphoniex",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xphoniex",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/14107758?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/14107758?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5977646489aea4761dd23661",
    "text": "@xphoniex byte[] is really a very bad design decision",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"xphoniex\" class=\"mention\">@xphoniex</span> byte[] is really a very bad design decision",
    "sent": "2017-07-25T15:31:48.830Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [
      {
        "screenName": "xphoniex",
        "userId": "58ff96eed73408ce4f5af1ff",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5977647d89aea4761dd236b5",
    "text": "because what that entails is that each byte in the array is actually gonna be padded to 256 bits",
    "html": "because what that entails is that each byte in the array is actually gonna be padded to 256 bits",
    "sent": "2017-07-25T15:32:13.388Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "597764a8614889d475ec0845",
    "text": "when considering usage of `byte[]` please try to change your design to factor `bytes` in",
    "html": "when considering usage of <code>byte[]</code> please try to change your design to factor <code>bytes</code> in",
    "sent": "2017-07-25T15:32:56.055Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "597764b42723db8d5e467079",
    "text": "which is the tightly packed version of `byte[]`",
    "html": "which is the tightly packed version of <code>byte[]</code>",
    "sent": "2017-07-25T15:33:08.027Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "597764c24bcd78af56e4d096",
    "text": "about your specific scenario:",
    "html": "about your specific scenario:",
    "sent": "2017-07-25T15:33:22.818Z",
    "editedAt": "2017-07-25T15:33:33.504Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "597764fff5b3458e307f518e",
    "text": "if your array has got a fixed size (and isn't huge!) I'd say go for multiple `string` parameters",
    "html": "if your array has got a fixed size (and isn&#39;t huge!) I&#39;d say go for multiple <code>string</code> parameters",
    "sent": "2017-07-25T15:34:23.742Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5977650df5b3458e307f51a9",
    "text": "explicitly declared",
    "html": "explicitly declared",
    "sent": "2017-07-25T15:34:37.283Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59776558c101bc4e3abc8edd",
    "text": "if you want to pass a dynamically-sized number of `string`s I'd say your best bet is to choose a delimiter character which you specifically forbid as valid input",
    "html": "if you want to pass a dynamically-sized number of <code>string</code>s I&#39;d say your best bet is to choose a delimiter character which you specifically forbid as valid input",
    "sent": "2017-07-25T15:35:52.681Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "597765ca1c8697534a5b79f1",
    "text": "and use Nick Johnson's library to parse it (https://github.com/Arachnid/solidity-stringutils)",
    "html": "and use Nick Johnson&#39;s library to parse it (<a href=\"https://github.com/Arachnid/solidity-stringutils\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/Arachnid/solidity-stringutils</a>)",
    "sent": "2017-07-25T15:37:46.008Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [
      {
        "url": "https://github.com/Arachnid/solidity-stringutils"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "597765dff5b3458e307f552f",
    "text": "or even better try to devise your own version of a specific assembly parser for your case ;)",
    "html": "or even better try to devise your own version of a specific assembly parser for your case ;)",
    "sent": "2017-07-25T15:38:07.943Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "597765ebc101bc4e3abc9280",
    "text": "(off you can always come here for help)",
    "html": "(off you can always come here for help)",
    "sent": "2017-07-25T15:38:19.763Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "597765fd714ea96f781f6e05",
    "text": "@dickolsson Thanks for the heads up!",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"dickolsson\" class=\"mention\">@dickolsson</span> Thanks for the heads up!",
    "sent": "2017-07-25T15:38:37.332Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [
      {
        "screenName": "dickolsson",
        "userId": "5947bfe6d73408ce4f6868ea",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59776624614889d475ec0f7c",
    "text": "We'll surely chime in on that until end of next week! :D",
    "html": "We&#39;ll surely chime in on that until end of next week! :D",
    "sent": "2017-07-25T15:39:16.271Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5977662e89aea4761dd23ce2",
    "text": "Thanks @GNSPS , let me read the git you sent. But to be clear, you're suggesting to pass it all as many strings, right?",
    "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"GNSPS\" class=\"mention\">@GNSPS</span> , let me read the git you sent. But to be clear, you&#39;re suggesting to pass it all as many strings, right?",
    "sent": "2017-07-25T15:39:26.642Z",
    "fromUser": {
      "id": "58ff96eed73408ce4f5af1ff",
      "username": "xphoniex",
      "displayName": "Dave",
      "url": "/xphoniex",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xphoniex",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/14107758?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/14107758?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [
      {
        "screenName": "GNSPS",
        "userId": "54bd42addb8155e6700ed45e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5977664476a757f80845e485",
    "text": "and use a delimeter to process it inside the contract. Am I right?",
    "html": "and use a delimeter to process it inside the contract. Am I right?",
    "sent": "2017-07-25T15:39:48.792Z",
    "fromUser": {
      "id": "58ff96eed73408ce4f5af1ff",
      "username": "xphoniex",
      "displayName": "Dave",
      "url": "/xphoniex",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xphoniex",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/14107758?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/14107758?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "597766da89aea4761dd24038",
    "text": "Yes! TL;DR:\n* if you're passing a *fixed, small number* of strings pass them as explicitly declared params like `foo(string firstString, string secondString, ... )`\n* if you're passing a *dynamic or very big number* of strings then I say you pass them as a single string argument  like `foo(string tooManyStrings)` and then parse them internally with a delimiter character",
    "html": "Yes! TL;DR:<ul>\n<li>if you&#39;re passing a <em>fixed, small number</em> of strings pass them as explicitly declared params like <code>foo(string firstString, string secondString, ... )</code></li>\n<li>if you&#39;re passing a <em>dynamic or very big number</em> of strings then I say you pass them as a single string argument  like <code>foo(string tooManyStrings)</code> and then parse them internally with a delimiter character</li>\n</ul>\n",
    "sent": "2017-07-25T15:42:18.260Z",
    "editedAt": "2017-07-25T15:42:38.000Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "597766f9bc4647297424212c",
    "text": "^ @xphoniex ",
    "html": "^ <span data-link-type=\"mention\" data-screen-name=\"xphoniex\" class=\"mention\">@xphoniex</span> ",
    "sent": "2017-07-25T15:42:49.010Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [
      {
        "screenName": "xphoniex",
        "userId": "58ff96eed73408ce4f5af1ff",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59776727f5b3458e307f5b4c",
    "text": "Yup, but I thought strings can't be more than 32bytes?",
    "html": "Yup, but I thought strings can&#39;t be more than 32bytes?",
    "sent": "2017-07-25T15:43:35.162Z",
    "fromUser": {
      "id": "58ff96eed73408ce4f5af1ff",
      "username": "xphoniex",
      "displayName": "Dave",
      "url": "/xphoniex",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xphoniex",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/14107758?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/14107758?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59776739329651f46ebff1d1",
    "text": "my case is dynamic/big number of strings",
    "html": "my case is dynamic/big number of strings",
    "sent": "2017-07-25T15:43:53.977Z",
    "fromUser": {
      "id": "58ff96eed73408ce4f5af1ff",
      "username": "xphoniex",
      "displayName": "Dave",
      "url": "/xphoniex",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xphoniex",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/14107758?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/14107758?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5977674376a757f80845e896",
    "text": "Nope, strings can be of any size",
    "html": "Nope, strings can be of any size",
    "sent": "2017-07-25T15:44:03.429Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5977675345fc670746c66937",
    "text": "they behave much like a tightly packed `bytes` array",
    "html": "they behave much like a tightly packed <code>bytes</code> array",
    "sent": "2017-07-25T15:44:19.487Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5977675e45fc670746c6693f",
    "text": "Oh",
    "html": "Oh",
    "sent": "2017-07-25T15:44:30.952Z",
    "fromUser": {
      "id": "58ff96eed73408ce4f5af1ff",
      "username": "xphoniex",
      "displayName": "Dave",
      "url": "/xphoniex",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xphoniex",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/14107758?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/14107758?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5977676ac101bc4e3abc9834",
    "text": "except Solidity does decode them in UTF-8",
    "html": "except Solidity does decode them in UTF-8",
    "sent": "2017-07-25T15:44:42.127Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5977676e714ea96f781f7416",
    "text": ":D",
    "html": ":D",
    "sent": "2017-07-25T15:44:46.236Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "597767bc2723db8d5e467fdf",
    "text": "I see, I thought they're capped at 32 bytes. Thanks a lot man!",
    "html": "I see, I thought they&#39;re capped at 32 bytes. Thanks a lot man!",
    "sent": "2017-07-25T15:46:04.569Z",
    "fromUser": {
      "id": "58ff96eed73408ce4f5af1ff",
      "username": "xphoniex",
      "displayName": "Dave",
      "url": "/xphoniex",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xphoniex",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/14107758?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/14107758?v=4&s=128",
      "v": 1,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59777fc6329651f46ec063d4",
    "text": "@dickolsson Just glanced through the whole document",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"dickolsson\" class=\"mention\">@dickolsson</span> Just glanced through the whole document",
    "sent": "2017-07-25T17:28:38.655Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [
      {
        "screenName": "dickolsson",
        "userId": "5947bfe6d73408ce4f6868ea",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59777fda2723db8d5e46ef06",
    "text": "Only thing I'm wary of: using CVSS",
    "html": "Only thing I&#39;m wary of: using CVSS",
    "sent": "2017-07-25T17:28:58.504Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59777fe61c8697534a5bf472",
    "text": "I've been thinking for a long time about it now",
    "html": "I&#39;ve been thinking for a long time about it now",
    "sent": "2017-07-25T17:29:10.068Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59777ff41c8697534a5bf556",
    "text": "and thought we could really use a specific threat model for smart contracts",
    "html": "and thought we could really use a specific threat model for smart contracts",
    "sent": "2017-07-25T17:29:24.878Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59778016614889d475ec86da",
    "text": "I've been trying to tackle that but still haven't found neither the strength or time necessary to",
    "html": "I&#39;ve been trying to tackle that but still haven&#39;t found neither the strength or time necessary to",
    "sent": "2017-07-25T17:29:58.725Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59778023614889d475ec8731",
    "text": "but would be very open to start collaboration on that",
    "html": "but would be very open to start collaboration on that",
    "sent": "2017-07-25T17:30:11.993Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5977ba38bc4647297425a51c",
    "text": "@GNSPS I have thought a lot about the same! I do think dapps and smart contracts do warrant their own threat model. However, part of the idea with the proposal is also to facilitate integration with existing security tooling that organisations and enterprises already rely on",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"GNSPS\" class=\"mention\">@GNSPS</span> I have thought a lot about the same! I do think dapps and smart contracts do warrant their own threat model. However, part of the idea with the proposal is also to facilitate integration with existing security tooling that organisations and enterprises already rely on",
    "sent": "2017-07-25T21:38:00.372Z",
    "fromUser": {
      "id": "5947bfe6d73408ce4f6868ea",
      "username": "dickolsson",
      "displayName": "Dick Olsson",
      "url": "/dickolsson",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/dickolsson",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/112085?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/112085?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [
      {
        "screenName": "GNSPS",
        "userId": "54bd42addb8155e6700ed45e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5977bab2bc4647297425a6c9",
    "text": "@GNSPS I will probably submit the proposal more or less as it is now, then we can follow up and iterate on a new threat model as an iteration down the line.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"GNSPS\" class=\"mention\">@GNSPS</span> I will probably submit the proposal more or less as it is now, then we can follow up and iterate on a new threat model as an iteration down the line.",
    "sent": "2017-07-25T21:40:02.884Z",
    "fromUser": {
      "id": "5947bfe6d73408ce4f6868ea",
      "username": "dickolsson",
      "displayName": "Dick Olsson",
      "url": "/dickolsson",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/dickolsson",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/112085?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/112085?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [
      {
        "screenName": "GNSPS",
        "userId": "54bd42addb8155e6700ed45e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5977bae52723db8d5e47f8e8",
    "text": "It's not a small task to repurpose CVSS for dapps and smart contracts :)",
    "html": "It&#39;s not a small task to repurpose CVSS for dapps and smart contracts :)",
    "sent": "2017-07-25T21:40:53.286Z",
    "fromUser": {
      "id": "5947bfe6d73408ce4f6868ea",
      "username": "dickolsson",
      "displayName": "Dick Olsson",
      "url": "/dickolsson",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/dickolsson",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/112085?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/112085?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5977d28c45fc670746c848e8",
    "text": "> It's not a small task to repurpose CVSS for dapps and smart contracts :)\n\nSure! And you're right, better to discuss this already in place as en EIP than delay its discussion much more!",
    "html": "<blockquote>\n<p>It&#39;s not a small task to repurpose CVSS for dapps and smart contracts :)</p></blockquote>\n<p>Sure! And you&#39;re right, better to discuss this already in place as en EIP than delay its discussion much more!</p>",
    "sent": "2017-07-25T23:21:48.795Z",
    "editedAt": "2017-07-25T23:22:08.994Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5977d2b6329651f46ec1ad60",
    "text": "Please do give an heads up when you do post the issue @dickolsson ;)",
    "html": "Please do give an heads up when you do post the issue <span data-link-type=\"mention\" data-screen-name=\"dickolsson\" class=\"mention\">@dickolsson</span> ;)",
    "sent": "2017-07-25T23:22:30.855Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [
      {
        "screenName": "dickolsson",
        "userId": "5947bfe6d73408ce4f6868ea",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59784e9fbc46472974279a89",
    "text": "@GNSPS I will let you know! Thanks for being interested :)\n\nI have made a few tweaks to my draft in the blog post in the past two days. Feel free to come with any other feedback if you have some :)",
    "html": "<p><span data-link-type=\"mention\" data-screen-name=\"GNSPS\" class=\"mention\">@GNSPS</span> I will let you know! Thanks for being interested :)</p><p>I have made a few tweaks to my draft in the blog post in the past two days. Feel free to come with any other feedback if you have some :)</p>",
    "sent": "2017-07-26T08:11:11.403Z",
    "fromUser": {
      "id": "5947bfe6d73408ce4f6868ea",
      "username": "dickolsson",
      "displayName": "Dick Olsson",
      "url": "/dickolsson",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/dickolsson",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/112085?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/112085?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [
      {
        "screenName": "GNSPS",
        "userId": "54bd42addb8155e6700ed45e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5978b2d645fc670746cbb013",
    "text": "@dickolsson \n1) great initiative, thank you for sharing here. \n2) it's a bit difficult to comment on changes and modifications made to a blog post without a change history. I think this is a good forum for a first few iterations, a good next step would be to put the content into your own fork of the ethereum/EIPs repo where discussion can focus on lines and commits diffs.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"dickolsson\" class=\"mention\">@dickolsson</span><br>1) great initiative, thank you for sharing here.<br>2) it&#39;s a bit difficult to comment on changes and modifications made to a blog post without a change history. I think this is a good forum for a first few iterations, a good next step would be to put the content into your own fork of the ethereum/EIPs repo where discussion can focus on lines and commits diffs.",
    "sent": "2017-07-26T15:18:46.749Z",
    "editedAt": "2017-07-26T15:19:32.691Z",
    "fromUser": {
      "id": "580e2cf8d73408ce4f307b49",
      "username": "maurelian",
      "displayName": "Maurelian",
      "url": "/maurelian",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/maurelian",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23033765?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 24,
    "urls": [],
    "mentions": [
      {
        "screenName": "dickolsson",
        "userId": "5947bfe6d73408ce4f6868ea",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5978b4d34bcd78af56ea065f",
    "text": "@maurelian Yeah, that's a very good point. I will do that tonight to facilitate easier reviews 👍",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> Yeah, that&#39;s a very good point. I will do that tonight to facilitate easier reviews 👍",
    "sent": "2017-07-26T15:27:15.855Z",
    "fromUser": {
      "id": "5947bfe6d73408ce4f6868ea",
      "username": "dickolsson",
      "displayName": "Dick Olsson",
      "url": "/dickolsson",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/dickolsson",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/112085?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/112085?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59798dc7bc464729742c583f",
    "text": "Nice to find a room for smart contract",
    "html": "Nice to find a room for smart contract",
    "sent": "2017-07-27T06:52:55.743Z",
    "fromUser": {
      "id": "59798d77d73408ce4f6ef42e",
      "username": "yu_fionaimage_twitter",
      "displayName": "Fiona Yu",
      "url": "/yu_fionaimage_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/yu_fionaimage_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128"
    },
    "unread": false,
    "readBy": 26,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "597b9013c101bc4e3acc263f",
    "text": "@maurelian @GNSPS hey, just wanted to let you know that I just submitted the EIP we discussed earlier: https://github.com/ethereum/EIPs/pull/679",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"maurelian\" class=\"mention\">@maurelian</span> <span data-link-type=\"mention\" data-screen-name=\"GNSPS\" class=\"mention\">@GNSPS</span> hey, just wanted to let you know that I just submitted the EIP we discussed earlier: <span data-link-type=\"issue\" data-issue=\"679\" data-issue-repo=\"ethereum/EIPs\" class=\"issue\">ethereum/EIPs#679</span>",
    "sent": "2017-07-28T19:27:15.846Z",
    "fromUser": {
      "id": "5947bfe6d73408ce4f6868ea",
      "username": "dickolsson",
      "displayName": "Dick Olsson",
      "url": "/dickolsson",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/dickolsson",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/112085?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/112085?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [
      {
        "screenName": "maurelian",
        "userId": "580e2cf8d73408ce4f307b49",
        "userIds": []
      },
      {
        "screenName": "GNSPS",
        "userId": "54bd42addb8155e6700ed45e",
        "userIds": []
      }
    ],
    "issues": [
      {
        "repo": "ethereum/EIPs",
        "number": "679"
      }
    ],
    "meta": [],
    "v": 1
  },
  {
    "id": "598b0ffd2723db8d5e8b231c",
    "text": "hey everyone!\nhow are token sales collecting other cryptocurrencies in their ico using smart contracts?\nany leads?",
    "html": "hey everyone!<br>how are token sales collecting other cryptocurrencies in their ico using smart contracts?<br>any leads?",
    "sent": "2017-08-09T13:37:01.858Z",
    "fromUser": {
      "id": "58ee42aed73408ce4f57e9b4",
      "username": "karankohli13",
      "displayName": "Karan Kohli",
      "url": "/karankohli13",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/karankohli13",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/17060212?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/17060212?v=4&s=128",
      "v": 4,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "598b167280d90ca024e26370",
    "text": "@karankohli13 if you're referring to ERC20 compatible tokens I guess that would just entail having token receiving functions that comply with the standard",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"karankohli13\" class=\"mention\">@karankohli13</span> if you&#39;re referring to ERC20 compatible tokens I guess that would just entail having token receiving functions that comply with the standard",
    "sent": "2017-08-09T14:04:34.253Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [
      {
        "screenName": "karankohli13",
        "userId": "58ee42aed73408ce4f57e9b4",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "598b16981c8697534aa0e46f",
    "text": "if you're referring to other currencies like Bitcoin you'd need some kind of interledger interface like BTCRelay",
    "html": "if you&#39;re referring to other currencies like Bitcoin you&#39;d need some kind of interledger interface like BTCRelay",
    "sent": "2017-08-09T14:05:12.668Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "598b16c0329651f46e04338e",
    "text": "some of the chains, not having relays of their own, you'd have to support with some other off-chain method like Shapeshift",
    "html": "some of the chains, not having relays of their own, you&#39;d have to support with some other off-chain method like Shapeshift",
    "sent": "2017-08-09T14:05:52.372Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "598b1760329651f46e043617",
    "text": "@GNSPS yeah i looked into BTCRelay, whats with shapeshift integration, like it can help me get diversified user investment but it will be more like n->ETH conversion..right? (* n is any other cryptocurrency)",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"GNSPS\" class=\"mention\">@GNSPS</span> yeah i looked into BTCRelay, whats with shapeshift integration, like it can help me get diversified user investment but it will be more like n-&gt;ETH conversion..right? (* n is any other cryptocurrency)",
    "sent": "2017-08-09T14:08:32.860Z",
    "fromUser": {
      "id": "58ee42aed73408ce4f57e9b4",
      "username": "karankohli13",
      "displayName": "Karan Kohli",
      "url": "/karankohli13",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/karankohli13",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/17060212?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/17060212?v=4&s=128",
      "v": 4,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [
      {
        "screenName": "GNSPS",
        "userId": "54bd42addb8155e6700ed45e",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "598b264b614889d47531a3dd",
    "text": "yes",
    "html": "yes",
    "sent": "2017-08-09T15:12:11.124Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "587f41146c1635643c43c800",
    "text": "I'm using testrpc and when I would to deploy my smart contract I've this error\n```Error: Error: VM Exception while executing transaction: out of gas```\n!!!! ",
    "html": "I&#39;m using testrpc and when I would to deploy my smart contract I&#39;ve this error<br><code>Error: Error: VM Exception while executing transaction: out of gas</code><br>!!!! ",
    "sent": "2017-01-18T10:19:00.839Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5881b303519afee26b8c62c7",
    "text": "How to decode logsBloom?",
    "html": "How to decode logsBloom?",
    "sent": "2017-01-20T06:49:39.181Z",
    "fromUser": {
      "id": "5837f5b1d73408ce4f38864a",
      "username": "luren5",
      "displayName": "路人-戊",
      "url": "/luren5",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/luren5",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4065596?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4065596?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5884c5c6d43728124e8caacf",
    "text": "@KerchoucheKahi_twitter try it on your private network. depending on your computer, it might take longer to deploy, but this problem should not occur anymore.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"KerchoucheKahi_twitter\" class=\"mention\">@KerchoucheKahi_twitter</span> try it on your private network. depending on your computer, it might take longer to deploy, but this problem should not occur anymore.",
    "sent": "2017-01-22T14:46:30.678Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [
      {
        "screenName": "KerchoucheKahi_twitter",
        "userId": "58761734d73408ce4f42c3e3",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5885d061519afee26b9ebd08",
    "text": "@nikita-fuchs  I've this also with my private network : ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"nikita-fuchs\" class=\"mention\">@nikita-fuchs</span>  I&#39;ve this also with my private network : ",
    "sent": "2017-01-23T09:44:01.359Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [
      {
        "screenName": "nikita-fuchs",
        "userId": "57efcb4ed73408ce4f2af4cc",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5885d06adcb66e4f769bcaa8",
    "text": "``` Error encountered, bailing. Network state unknown. Review successful transactions manually.\nError: The contract code couldn't be stored, please check your gas amount. ```",
    "html": "<code>Error encountered, bailing. Network state unknown. Review successful transactions manually.\nError: The contract code couldn&#39;t be stored, please check your gas amount.</code>",
    "sent": "2017-01-23T09:44:10.789Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58870948e836bf701083ec11",
    "text": "Whad do you use for larger smart contracts? Browser solidity doesnt report events anymore and truffle ... I hate pudding",
    "html": "Whad do you use for larger smart contracts? Browser solidity doesnt report events anymore and truffle ... I hate pudding",
    "sent": "2017-01-24T07:59:04.812Z",
    "fromUser": {
      "id": "543be8b1db8155e6700cb0be",
      "username": "rolandkofler",
      "displayName": "Roland Kofler",
      "url": "/rolandkofler",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/rolandkofler",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/979444?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/979444?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5898aa1faa800ee52c5cf458",
    "text": "hi every one, I have a questiona about smart contract: so can a smart contract  A deploy another smart contract B ( so inside A if a condition is true we deploy else no) so automate the creation!!!!",
    "html": "hi every one, I have a questiona about smart contract: so can a smart contract  A deploy another smart contract B ( so inside A if a condition is true we deploy else no) so automate the creation!!!!",
    "sent": "2017-02-06T16:53:51.052Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5898aa8c6b2d8dd5520b869f",
    "text": "Yep",
    "html": "Yep",
    "sent": "2017-02-06T16:55:40.023Z",
    "editedAt": "2017-02-06T16:55:50.307Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5898aaba6b2d8dd5520b8852",
    "text": "can you tell me please  how to do this ( an example) ",
    "html": "can you tell me please  how to do this ( an example) ",
    "sent": "2017-02-06T16:56:26.978Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5899e4a01465c46a56333de1",
    "text": "Hi ,  is it possible to call  from a smart contract another smart contract deployed in the blockchain knowing just its address!!  (I'm not the deployer) , because I find in the most examples in the net  \" import the file or write the smart contract in the same file \" !!!! if yes , can I just write in my smart contract address.Thefunction!!!!!! ",
    "html": "Hi ,  is it possible to call  from a smart contract another smart contract deployed in the blockchain knowing just its address!!  (I&#39;m not the deployer) , because I find in the most examples in the net  &quot; import the file or write the smart contract in the same file &quot; !!!! if yes , can I just write in my smart contract address.Thefunction!!!!!! ",
    "sent": "2017-02-07T15:15:44.280Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5899efaf6b2d8dd552129bf2",
    "text": "just like you would do if you had imported the smart contract into your code. however, there is no way to validate yet if the function you're calling really exists or what parameters it takes. so you, the caller, must know what you're doing.",
    "html": "just like you would do if you had imported the smart contract into your code. however, there is no way to validate yet if the function you&#39;re calling really exists or what parameters it takes. so you, the caller, must know what you&#39;re doing.",
    "sent": "2017-02-07T16:02:55.402Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5899f5c6aa800ee52c6453f5",
    "text": "No I have just to call this smart contract to have an infomation from it , but I have just the address , function to call and its parameters!! ",
    "html": "No I have just to call this smart contract to have an infomation from it , but I have just the address , function to call and its parameters!! ",
    "sent": "2017-02-07T16:28:54.939Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5899f5ef1465c46a5633b74e",
    "text": "@nikita-fuchs can you tell the way to do this!! ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"nikita-fuchs\" class=\"mention\">@nikita-fuchs</span> can you tell the way to do this!! ",
    "sent": "2017-02-07T16:29:35.023Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [
      {
        "screenName": "nikita-fuchs",
        "userId": "57efcb4ed73408ce4f2af4cc",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "589c47acaa800ee52c7124a2",
    "text": "hi, I'm confused, \nI have this function for example: \n\n```\nuint convert;\nfunction convert(uint  pts, uint rate) onlyOwner() returns (string){\n if (pts< 100) return \" You do not have enough points\";\nelse {\nconvert=pts*rate;\nreturn \"Your points are converted\";\n}\n}\n```\nwhen we call this function  with pts=15  we haven't done any changes inside so it is doesn't a transaction it is just a call ( we will not pay no!! ) and if pts=500 it will be a transaction and we pay , is it right!!!!  or we pay also in the first case!!",
    "html": "<p>hi, I&#39;m confused,<br>I have this function for example: </p><pre><code>uint convert;\n<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">convert</span><span class=\"params\">(uint  pts, uint rate)</span> <span class=\"title\">onlyOwner</span><span class=\"params\">()</span> <span class=\"title\">returns</span> <span class=\"params\">(string)</span></span>{\n <span class=\"keyword\">if</span> (pts&lt; <span class=\"number\">100</span>) <span class=\"keyword\">return</span> <span class=\"string\">\" You do not have enough points\"</span>;\n<span class=\"keyword\">else</span> {\nconvert=pts*rate;\n<span class=\"keyword\">return</span> <span class=\"string\">\"Your points are converted\"</span>;\n}\n}</code></pre><p>when we call this function  with pts=15  we haven&#39;t done any changes inside so it is doesn&#39;t a transaction it is just a call ( we will not pay no!! ) and if pts=500 it will be a transaction and we pay , is it right!!!!  or we pay also in the first case!!</p>",
    "sent": "2017-02-09T10:42:52.696Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "589c6866872fc8ce6212b0f4",
    "text": "I've tested it, it generates a transaction in the two case whyyyyyy!",
    "html": "I&#39;ve tested it, it generates a transaction in the two case whyyyyyy!",
    "sent": "2017-02-09T13:02:30.468Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "589cbbf900c00c3d4f197cc1",
    "text": "because even in the first case you're using the computer power of the EVM, to compute the function body. In this case, it doesn't matter if anything changes in the end or not. If you want to prevent transactions to happen which won't change anything, to that computation locally, on the client. for example, in javascript. make sure the action you are about to take really requires a transaction. possible solution here: write a getter method for the value 100, name it in the contract```benchmark``` for example. then, before doing a transaction, get the benchmark's value with a (free) call, and only if your number is equal to benchmark or higher, do the transaction.",
    "html": "because even in the first case you&#39;re using the computer power of the EVM, to compute the function body. In this case, it doesn&#39;t matter if anything changes in the end or not. If you want to prevent transactions to happen which won&#39;t change anything, to that computation locally, on the client. for example, in javascript. make sure the action you are about to take really requires a transaction. possible solution here: write a getter method for the value 100, name it in the contract<code>benchmark</code> for example. then, before doing a transaction, get the benchmark&#39;s value with a (free) call, and only if your number is equal to benchmark or higher, do the transaction.",
    "sent": "2017-02-09T18:59:05.453Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "589d84d71465c46a564752e0",
    "text": "yes thank's :) ",
    "html": "yes thank&#39;s :) ",
    "sent": "2017-02-10T09:16:07.307Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58a403bc238b1dae57100437",
    "text": "hii , can you give me please  the syntax how to call a smart contract knowing just its address!!! ",
    "html": "hii , can you give me please  the syntax how to call a smart contract knowing just its address!!! ",
    "sent": "2017-02-15T07:31:08.697Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58a41330238b1dae57105478",
    "text": "I've sent you the link, it's in soliditys readthedocs",
    "html": "I&#39;ve sent you the link, it&#39;s in soliditys readthedocs",
    "sent": "2017-02-15T08:37:04.537Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58a41515238b1dae57105e65",
    "text": "but I don't find the way everything I find ,it needs the ABI also!!! ",
    "html": "but I don&#39;t find the way everything I find ,it needs the ABI also!!! ",
    "sent": "2017-02-15T08:45:09.230Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58a419fa872fc8ce623a4b0d",
    "text": "No it doesnt,' jusr specify the address and call the method from within solidity",
    "html": "No it doesnt,&#39; jusr specify the address and call the method from within solidity",
    "sent": "2017-02-15T09:06:02.060Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58a41abd21d548df2c100efa",
    "text": "how to specify can you give  me the syntax please!!!",
    "html": "how to specify can you give  me the syntax please!!!",
    "sent": "2017-02-15T09:09:17.814Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58a41b25de50490822ce0056",
    "text": "http://solidity.readthedocs.io/en/develop/types.html?highlight=library#members-of-addresses <- call contract with its address from another contract",
    "html": "<a href=\"http://solidity.readthedocs.io/en/develop/types.html?highlight=library#members-of-addresses\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://solidity.readthedocs.io/en/develop/types.html?highlight=library#members-of-addresses</a> &lt;- call contract with its address from another contract",
    "sent": "2017-02-15T09:11:01.498Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [
      {
        "url": "http://solidity.readthedocs.io/en/develop/types.html?highlight=library#members-of-addresses"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58a41c55de50490822ce06b0",
    "text": "nooooo, sorry I haven't specify from where, in my javascript so now some one have deployed a smart contract and I'd like to interact with it knowing just its address ( I create a truffle folder (truffle init)  and I modify just  app.js  ( I haven't to deploy any contract just interact with an existing contract) ) ",
    "html": "nooooo, sorry I haven&#39;t specify from where, in my javascript so now some one have deployed a smart contract and I&#39;d like to interact with it knowing just its address ( I create a truffle folder (truffle init)  and I modify just  app.js  ( I haven&#39;t to deploy any contract just interact with an existing contract) ) ",
    "sent": "2017-02-15T09:16:05.109Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58a432c400c00c3d4f40096b",
    "text": "what is an external call in  smart contracts? and why it is not secure?",
    "html": "what is an external call in  smart contracts? and why it is not secure?",
    "sent": "2017-02-15T10:51:48.323Z",
    "fromUser": {
      "id": "58984085d73408ce4f4861e2",
      "username": "mathcrypto",
      "displayName": "mathcrypto",
      "url": "/mathcrypto",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/mathcrypto",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20124778?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20124778?v=4&s=128",
      "v": 25,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58a43c29872fc8ce623b09c1",
    "text": "@mathcrypto without proper security mechanisms, external calls (\"interacting with other contracts\") could make contracts you do not know/trust interact with your own contract in an unwanted way",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"mathcrypto\" class=\"mention\">@mathcrypto</span> without proper security mechanisms, external calls (&quot;interacting with other contracts&quot;) could make contracts you do not know/trust interact with your own contract in an unwanted way",
    "sent": "2017-02-15T11:31:53.873Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [
      {
        "screenName": "mathcrypto",
        "userId": "58984085d73408ce4f4861e2",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58a43d35238b1dae57114a04",
    "text": "@KerchoucheKahi_twitter you can't interact with a contract through JS without knowing it's ABI. Workaround: write a contract that interacts with the other ine through solidity and returns the results through JS.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"KerchoucheKahi_twitter\" class=\"mention\">@KerchoucheKahi_twitter</span> you can&#39;t interact with a contract through JS without knowing it&#39;s ABI. Workaround: write a contract that interacts with the other ine through solidity and returns the results through JS.",
    "sent": "2017-02-15T11:36:21.290Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [
      {
        "screenName": "KerchoucheKahi_twitter",
        "userId": "58761734d73408ce4f42c3e3",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58a45175238b1dae5711bb4b",
    "text": "thank you @nikita-fuchs ",
    "html": "thank you <span data-link-type=\"mention\" data-screen-name=\"nikita-fuchs\" class=\"mention\">@nikita-fuchs</span> ",
    "sent": "2017-02-15T13:02:45.613Z",
    "fromUser": {
      "id": "58984085d73408ce4f4861e2",
      "username": "mathcrypto",
      "displayName": "mathcrypto",
      "url": "/mathcrypto",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/mathcrypto",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/20124778?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/20124778?v=4&s=128",
      "v": 25,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [
      {
        "screenName": "nikita-fuchs",
        "userId": "57efcb4ed73408ce4f2af4cc",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58a46125f045df0a224efc75",
    "text": "ok thank you  @nikita-fuchs \n",
    "html": "ok thank you  <span data-link-type=\"mention\" data-screen-name=\"nikita-fuchs\" class=\"mention\">@nikita-fuchs</span> ",
    "sent": "2017-02-15T14:09:41.326Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [
      {
        "screenName": "nikita-fuchs",
        "userId": "57efcb4ed73408ce4f2af4cc",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58a482e921d548df2c12b5f9",
    "text": "I don't get what you are trying to do. Just take what you got crom truffle build after you deployed your contracts. Then put the build files on a server and let users communicate with that contract by loading that website",
    "html": "I don&#39;t get what you are trying to do. Just take what you got crom truffle build after you deployed your contracts. Then put the build files on a server and let users communicate with that contract by loading that website",
    "sent": "2017-02-15T16:33:45.479Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58a484fff045df0a224fefec",
    "text": "nooo what is the content of the build folder!!! it is related to the content of app.js or no!!",
    "html": "nooo what is the content of the build folder!!! it is related to the content of app.js or no!!",
    "sent": "2017-02-15T16:42:39.036Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58a48549872fc8ce623cf809",
    "text": "The build folder's content is your dApp, your final ethereum based application",
    "html": "The build folder&#39;s content is your dApp, your final ethereum based application",
    "sent": "2017-02-15T16:43:53.074Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58a485c900c00c3d4f4216f2",
    "text": "so in the first machine  in the app.js  I just  subscribe for example client, and from the other machine I read the list of client subscribed ( so the two  app.js are different!!!! so in the second machine I build another Dapp using the same contract deployed in the network  from the first machine ",
    "html": "so in the first machine  in the app.js  I just  subscribe for example client, and from the other machine I read the list of client subscribed ( so the two  app.js are different!!!! so in the second machine I build another Dapp using the same contract deployed in the network  from the first machine ",
    "sent": "2017-02-15T16:46:01.005Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58a49b871465c46a566c696b",
    "text": "I should make all the content of the build folder in the server!!!  ",
    "html": "I should make all the content of the build folder in the server!!!  ",
    "sent": "2017-02-15T18:18:47.656Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58a5b9ee00c00c3d4f48ce0b",
    "text": "Hi everybody, someone know how to send ther to a smart-contract ?",
    "html": "Hi everybody, someone know how to send ther to a smart-contract ?",
    "sent": "2017-02-16T14:40:46.555Z",
    "fromUser": {
      "id": "58a5b20bd73408ce4f4ac9bf",
      "username": "petitbx",
      "displayName": "Benoît - Xavier HOUVET",
      "url": "/petitbx",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/petitbx",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16669624?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16669624?v=4&s=128",
      "v": 2,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58a5dcac21d548df2c1a90dc",
    "text": "@petitbx 1. the function of the smartcontract you are calling must be tagged as payable . Or if you just want to send ether to a smart contract in general, the fallback function must be marked payable.\n2. next, send ether, or from within another smart contract, use .send()\n(you can find information about all of that in the solidity doc)",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"petitbx\" class=\"mention\">@petitbx</span> 1. the function of the smartcontract you are calling must be tagged as payable . Or if you just want to send ether to a smart contract in general, the fallback function must be marked payable.<ol>\n<li>next, send ether, or from within another smart contract, use .send()<br>(you can find information about all of that in the solidity doc)</li>\n</ol>\n",
    "sent": "2017-02-16T17:09:00.774Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [
      {
        "screenName": "petitbx",
        "userId": "58a5b20bd73408ce4f4ac9bf",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58ab2bd3f045df0a2270feaf",
    "text": "Hello ConsenSys! Is anyone here familiar with pyethapps? It seems to not want to sync/download the blockchain.",
    "html": "Hello ConsenSys! Is anyone here familiar with pyethapps? It seems to not want to sync/download the blockchain.",
    "sent": "2017-02-20T17:48:03.238Z",
    "fromUser": {
      "id": "553ec7a715522ed4b3df9ab0",
      "username": "jeffanthony",
      "displayName": "Jeffrey Anthony",
      "url": "/jeffanthony",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jeffanthony",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/553756?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/553756?v=4&s=128",
      "v": 38,
      "gv": "4"
    },
    "unread": false,
    "readBy": 25,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58bce1fc872fc8ce62bf4b0a",
    "text": "Question: I sent generated tokens from minime contract to my Parity wallet because I didn't know how to access the contract if I sent it there, thinking it would be ok. Can I still transfer from Parity to the contract I created and still get functionality of contract as intended?",
    "html": "Question: I sent generated tokens from minime contract to my Parity wallet because I didn&#39;t know how to access the contract if I sent it there, thinking it would be ok. Can I still transfer from Parity to the contract I created and still get functionality of contract as intended?",
    "sent": "2017-03-06T04:13:48.742Z",
    "fromUser": {
      "id": "5657261716b6c7089cbc4656",
      "username": "btcmacroecon",
      "displayName": "Woodman",
      "url": "/btcmacroecon",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/btcmacroecon",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7543793?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7543793?v=4&s=128",
      "v": 25,
      "gv": "4"
    },
    "unread": false,
    "readBy": 28,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58bce23500c00c3d4fc55e4b",
    "text": "@jeffanthony I'd answer you if I could!",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"jeffanthony\" class=\"mention\">@jeffanthony</span> I&#39;d answer you if I could!",
    "sent": "2017-03-06T04:14:45.755Z",
    "fromUser": {
      "id": "5657261716b6c7089cbc4656",
      "username": "btcmacroecon",
      "displayName": "Woodman",
      "url": "/btcmacroecon",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/btcmacroecon",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7543793?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7543793?v=4&s=128",
      "v": 25,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [
      {
        "screenName": "jeffanthony",
        "userId": "553ec7a715522ed4b3df9ab0",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58bd61ae7ceae5376a7a734a",
    "text": "is it possible to ci/cd meta coin smart contract such that the supply and name of the token can be customized and build can be automated?",
    "html": "is it possible to ci/cd meta coin smart contract such that the supply and name of the token can be customized and build can be automated?",
    "sent": "2017-03-06T13:18:38.991Z",
    "fromUser": {
      "id": "560b884fd33f749381a7c734",
      "username": "Niko-La",
      "displayName": "Niko-La",
      "url": "/Niko-La",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Niko-La",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/14004559?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/14004559?v=4&s=128",
      "v": 17,
      "gv": "4"
    },
    "unread": false,
    "readBy": 29,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58cccf25b809ca5f4a584ea7",
    "text": "guys any guide as to how to do best bitmanipulation on solidity ",
    "html": "guys any guide as to how to do best bitmanipulation on solidity ",
    "sent": "2017-03-18T06:09:41.993Z",
    "fromUser": {
      "id": "5589b15715522ed4b3e28765",
      "username": "18dew",
      "displayName": "thedewer",
      "url": "/18dew",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/18dew",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4244970?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4244970?v=4&s=128",
      "v": 27,
      "gv": "4"
    },
    "unread": false,
    "readBy": 28,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58cd365aa84f611959bb073d",
    "text": "```\n> eth.estimateGas({from:eth.accounts[1], to: eth.accounts[2], value:50000000000000})\n21001\n```\nwhy it's 21001 , not 21000 ?",
    "html": "<pre><code>&gt; eth.estimateGas({<span class=\"string\">from:</span>eth.accounts[<span class=\"number\">1</span>], <span class=\"string\">to:</span> eth.accounts[<span class=\"number\">2</span>], <span class=\"string\">value:</span><span class=\"number\">50000000000000</span>})\n<span class=\"number\">21001</span></code></pre>why it&#39;s 21001 , not 21000 ?",
    "sent": "2017-03-18T13:30:02.573Z",
    "fromUser": {
      "id": "5837f5b1d73408ce4f38864a",
      "username": "luren5",
      "displayName": "路人-戊",
      "url": "/luren5",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/luren5",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4065596?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4065596?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 27,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58cfa0dca84f611959c36ba9",
    "text": "@rolandkofler\nhey guys, hope It's agreeable to post here advertisment for a security bounty hunt\nhttps://np.reddit.com/r/ethereum/comments/60figs/ann_the_sikoba_bounty_hunt_starts/",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"rolandkofler\" class=\"mention\">@rolandkofler</span><br>hey guys, hope It&#39;s agreeable to post here advertisment for a security bounty hunt<br><a href=\"https://np.reddit.com/r/ethereum/comments/60figs/ann_the_sikoba_bounty_hunt_starts/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://np.reddit.com/r/ethereum/comments/60figs/ann_the_sikoba_bounty_hunt_starts/</a>",
    "sent": "2017-03-20T09:29:00.297Z",
    "fromUser": {
      "id": "543be8b1db8155e6700cb0be",
      "username": "rolandkofler",
      "displayName": "Roland Kofler",
      "url": "/rolandkofler",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/rolandkofler",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/979444?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/979444?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [
      {
        "url": "https://np.reddit.com/r/ethereum/comments/60figs/ann_the_sikoba_bounty_hunt_starts/"
      }
    ],
    "mentions": [
      {
        "screenName": "rolandkofler",
        "userId": "543be8b1db8155e6700cb0be",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58f4469fbdf4acc11267de25",
    "text": "Need help in building smart contract for insurance services , ",
    "html": "Need help in building smart contract for insurance services , ",
    "sent": "2017-04-17T04:37:51.441Z",
    "fromUser": {
      "id": "58f445b2d73408ce4f58e114",
      "username": "moabughoush_twitter",
      "displayName": "Mag",
      "url": "/moabughoush_twitter",
      "avatarUrl": "https://avatars-02.gitter.im/g/u/moabughoush_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58f4588bdddd87f332d316f2",
    "text": "@moabughoush_twitter Let’s chat...",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"moabughoush_twitter\" class=\"mention\">@moabughoush_twitter</span> Let’s chat...",
    "sent": "2017-04-17T05:54:19.903Z",
    "fromUser": {
      "id": "55a56cc25e0d51bd787b619c",
      "username": "superphly",
      "displayName": "Cody Marx Bailey",
      "url": "/superphly",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/superphly",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/238?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/238?v=4&s=128",
      "v": 8,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [
      {
        "screenName": "moabughoush_twitter",
        "userId": "58f445b2d73408ce4f58e114",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58ff8b888e4b63533d025cd7",
    "text": "What's the rationale behind checking for `_value > 0` in this ERC20 `transfer` (https://github.com/ConsenSys/Tokens/blob/master/Token_Contracts/contracts/StandardToken.sol#L20 )? Isn't the sender paying gas for a check they or their application could make?",
    "html": "What&#39;s the rationale behind checking for <code>_value &gt; 0</code> in this ERC20 <code>transfer</code> (<a href=\"https://github.com/ConsenSys/Tokens/blob/master/Token_Contracts/contracts/StandardToken.sol#L20\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/ConsenSys/Tokens/blob/master/Token_Contracts/contracts/StandardToken.sol#L20</a> )? Isn&#39;t the sender paying gas for a check they or their application could make?",
    "sent": "2017-04-25T17:46:48.958Z",
    "editedAt": "2017-04-25T17:47:27.146Z",
    "fromUser": {
      "id": "567d299b16b6c7089cc025ab",
      "username": "willnwhite",
      "displayName": "Will White",
      "url": "/willnwhite",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/willnwhite",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8081877?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8081877?v=4&s=128",
      "v": 21,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [
      {
        "url": "https://github.com/ConsenSys/Tokens/blob/master/Token_Contracts/contracts/StandardToken.sol#L20"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "58ffaab86aea30763d4037a4",
    "text": "Is there an advantage to returning false, rather than throwing? https://github.com/ConsenSys/Tokens/blob/master/Token_Contracts/contracts/StandardToken.sol#L25",
    "html": "Is there an advantage to returning false, rather than throwing? <a href=\"https://github.com/ConsenSys/Tokens/blob/master/Token_Contracts/contracts/StandardToken.sol#L25\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/ConsenSys/Tokens/blob/master/Token_Contracts/contracts/StandardToken.sol#L25</a>",
    "sent": "2017-04-25T19:59:52.259Z",
    "fromUser": {
      "id": "567d299b16b6c7089cc025ab",
      "username": "willnwhite",
      "displayName": "Will White",
      "url": "/willnwhite",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/willnwhite",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8081877?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8081877?v=4&s=128",
      "v": 21,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [
      {
        "url": "https://github.com/ConsenSys/Tokens/blob/master/Token_Contracts/contracts/StandardToken.sol#L25"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59024749881b89e101913bc9",
    "text": "Sorry if my question is off the topic. I would like to know the experience of yours with Mist Ethereum Wallet. When I connect to Test Net network it keeps of downloading till certain percentage. After sometime it starts again from 0% and blocks are increased\nhow to overcome this situation?\nIt seems It keep on downloading endlessly.",
    "html": "Sorry if my question is off the topic. I would like to know the experience of yours with Mist Ethereum Wallet. When I connect to Test Net network it keeps of downloading till certain percentage. After sometime it starts again from 0% and blocks are increased<br>how to overcome this situation?<br>It seems It keep on downloading endlessly.",
    "sent": "2017-04-27T19:32:25.478Z",
    "fromUser": {
      "id": "58d2c54fd73408ce4f52e133",
      "username": "MahenRathod_twitter",
      "displayName": "Mahen Rathod",
      "url": "/MahenRathod_twitter",
      "avatarUrl": "https://avatars-02.gitter.im/g/u/MahenRathod_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/424433089775816704/9obKYdwi_bigger.jpeg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/424433089775816704/9obKYdwi.jpeg"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59026667e3700b1461c9f318",
    "text": "@willnwhite when you throw, the execution stops and returns all gas.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"willnwhite\" class=\"mention\">@willnwhite</span> when you throw, the execution stops and returns all gas.",
    "sent": "2017-04-27T21:45:11.537Z",
    "fromUser": {
      "id": "55a56cc25e0d51bd787b619c",
      "username": "superphly",
      "displayName": "Cody Marx Bailey",
      "url": "/superphly",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/superphly",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/238?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/238?v=4&s=128",
      "v": 8,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [
      {
        "screenName": "willnwhite",
        "userId": "567d299b16b6c7089cc025ab",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5902667b7b553c707c52c4df",
    "text": "if you return an error, it’s helpful, but you still have to pay for the computations up until that point.",
    "html": "if you return an error, it’s helpful, but you still have to pay for the computations up until that point.",
    "sent": "2017-04-27T21:45:31.642Z",
    "fromUser": {
      "id": "55a56cc25e0d51bd787b619c",
      "username": "superphly",
      "displayName": "Cody Marx Bailey",
      "url": "/superphly",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/superphly",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/238?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/238?v=4&s=128",
      "v": 8,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "590339c28e4b63533d11e00f",
    "text": "@superphly Is throwing the same as returning an error?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"superphly\" class=\"mention\">@superphly</span> Is throwing the same as returning an error?",
    "sent": "2017-04-28T12:46:58.189Z",
    "fromUser": {
      "id": "567d299b16b6c7089cc025ab",
      "username": "willnwhite",
      "displayName": "Will White",
      "url": "/willnwhite",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/willnwhite",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8081877?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8081877?v=4&s=128",
      "v": 21,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [
      {
        "screenName": "superphly",
        "userId": "55a56cc25e0d51bd787b619c",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59033ca8f22385553d85fe28",
    "text": "@MahenRathod_twitter My Ethereum Wallet was saying \"a month since last block\" a few days ago and I've been unable to mine test Ether. This is even after deleting the old testnet blocks and downloading the new revived Ropsten testnet blocks.\nThe best place to ask this question should be https://gitter.im/ethereum/mist.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"MahenRathod_twitter\" class=\"mention\">@MahenRathod_twitter</span> My Ethereum Wallet was saying &quot;a month since last block&quot; a few days ago and I&#39;ve been unable to mine test Ether. This is even after deleting the old testnet blocks and downloading the new revived Ropsten testnet blocks.<br>The best place to ask this question should be <a href=\"https://gitter.im/ethereum/mist\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gitter.im/ethereum/mist</a>.",
    "sent": "2017-04-28T12:59:20.656Z",
    "fromUser": {
      "id": "567d299b16b6c7089cc025ab",
      "username": "willnwhite",
      "displayName": "Will White",
      "url": "/willnwhite",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/willnwhite",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8081877?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8081877?v=4&s=128",
      "v": 21,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [
      {
        "url": "https://gitter.im/ethereum/mist"
      }
    ],
    "mentions": [
      {
        "screenName": "MahenRathod_twitter",
        "userId": "58d2c54fd73408ce4f52e133",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59033d01d32c6f2f094c5ee2",
    "text": "@MahenRathod_twitter To deploy and use contracts, I've resorted to using MetaMask and their faucet.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"MahenRathod_twitter\" class=\"mention\">@MahenRathod_twitter</span> To deploy and use contracts, I&#39;ve resorted to using MetaMask and their faucet.",
    "sent": "2017-04-28T13:00:49.781Z",
    "fromUser": {
      "id": "567d299b16b6c7089cc025ab",
      "username": "willnwhite",
      "displayName": "Will White",
      "url": "/willnwhite",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/willnwhite",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8081877?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8081877?v=4&s=128",
      "v": 21,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [
      {
        "screenName": "MahenRathod_twitter",
        "userId": "58d2c54fd73408ce4f52e133",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59039697587a245e245ab9ea",
    "text": "Thanks @willnwhite, MetaMask looks promising.",
    "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"willnwhite\" class=\"mention\">@willnwhite</span>, MetaMask looks promising.",
    "sent": "2017-04-28T19:23:03.219Z",
    "fromUser": {
      "id": "58d2c54fd73408ce4f52e133",
      "username": "MahenRathod_twitter",
      "displayName": "Mahen Rathod",
      "url": "/MahenRathod_twitter",
      "avatarUrl": "https://avatars-02.gitter.im/g/u/MahenRathod_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/424433089775816704/9obKYdwi_bigger.jpeg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/424433089775816704/9obKYdwi.jpeg"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [
      {
        "screenName": "willnwhite",
        "userId": "567d299b16b6c7089cc025ab",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5903997012d2409935aaa1a9",
    "text": "@willnwhite, https://gitter.im/ethereum/mist is allowing only GitHub users to become member :worried: ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"willnwhite\" class=\"mention\">@willnwhite</span>, <a href=\"https://gitter.im/ethereum/mist\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gitter.im/ethereum/mist</a> is allowing only GitHub users to become member :worried: ",
    "sent": "2017-04-28T19:35:12.502Z",
    "fromUser": {
      "id": "58d2c54fd73408ce4f52e133",
      "username": "MahenRathod_twitter",
      "displayName": "Mahen Rathod",
      "url": "/MahenRathod_twitter",
      "avatarUrl": "https://avatars-02.gitter.im/g/u/MahenRathod_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/424433089775816704/9obKYdwi_bigger.jpeg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/424433089775816704/9obKYdwi.jpeg"
    },
    "unread": false,
    "readBy": 21,
    "urls": [
      {
        "url": "https://gitter.im/ethereum/mist"
      }
    ],
    "mentions": [
      {
        "screenName": "willnwhite",
        "userId": "567d299b16b6c7089cc025ab",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "590399a6c1d3b501542e4982",
    "text": "mist mystery :smile: ",
    "html": "mist mystery :smile: ",
    "sent": "2017-04-28T19:36:06.750Z",
    "fromUser": {
      "id": "58d2c54fd73408ce4f52e133",
      "username": "MahenRathod_twitter",
      "displayName": "Mahen Rathod",
      "url": "/MahenRathod_twitter",
      "avatarUrl": "https://avatars-02.gitter.im/g/u/MahenRathod_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/424433089775816704/9obKYdwi_bigger.jpeg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/424433089775816704/9obKYdwi.jpeg"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5903d030c4ac989f3cb902d4",
    "text": "@willnwhite no, because returning an error is a complete transaction, throwing basically craps out and acts like NOTHING happened.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"willnwhite\" class=\"mention\">@willnwhite</span> no, because returning an error is a complete transaction, throwing basically craps out and acts like NOTHING happened.",
    "sent": "2017-04-28T23:28:48.916Z",
    "fromUser": {
      "id": "55a56cc25e0d51bd787b619c",
      "username": "superphly",
      "displayName": "Cody Marx Bailey",
      "url": "/superphly",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/superphly",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/238?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/238?v=4&s=128",
      "v": 8,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [
      {
        "screenName": "willnwhite",
        "userId": "567d299b16b6c7089cc025ab",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59060e256aea30763d58c13b",
    "text": "@superphly How do you return an error? Do you mean returning false in this case?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"superphly\" class=\"mention\">@superphly</span> How do you return an error? Do you mean returning false in this case?",
    "sent": "2017-04-30T16:17:41.546Z",
    "editedAt": "2017-04-30T16:17:59.700Z",
    "fromUser": {
      "id": "567d299b16b6c7089cc025ab",
      "username": "willnwhite",
      "displayName": "Will White",
      "url": "/willnwhite",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/willnwhite",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8081877?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8081877?v=4&s=128",
      "v": 21,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [
      {
        "screenName": "superphly",
        "userId": "55a56cc25e0d51bd787b619c",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5909109301d449152eb68ec9",
    "text": "",
    "html": "",
    "sent": "2017-05-02T23:04:51.702Z",
    "editedAt": "2017-05-02T23:05:33.948Z",
    "fromUser": {
      "id": "55a56cc25e0d51bd787b619c",
      "username": "superphly",
      "displayName": "Cody Marx Bailey",
      "url": "/superphly",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/superphly",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/238?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/238?v=4&s=128",
      "v": 8,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "590910b5c4ac989f3cb92b7b",
    "text": "@willnwhite You can return true, for one condition, false for another condition or just error out by throwing.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"willnwhite\" class=\"mention\">@willnwhite</span> You can return true, for one condition, false for another condition or just error out by throwing.",
    "sent": "2017-05-02T23:05:25.398Z",
    "fromUser": {
      "id": "55a56cc25e0d51bd787b619c",
      "username": "superphly",
      "displayName": "Cody Marx Bailey",
      "url": "/superphly",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/superphly",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/238?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/238?v=4&s=128",
      "v": 8,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [
      {
        "screenName": "willnwhite",
        "userId": "567d299b16b6c7089cc025ab",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "590f937c9d90dc7a1c567506",
    "text": " Hello world! ",
    "html": " Hello world! ",
    "sent": "2017-05-07T21:37:00.397Z",
    "fromUser": {
      "id": "542de2c3163965c9bc208444",
      "username": "tesla809",
      "displayName": "Anthony Albertorio",
      "url": "/tesla809",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tesla809",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2049414?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2049414?v=4&s=128",
      "v": 27,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59114eb6c4d73f445a8a01b2",
    "text": "I have a MultiSigWallet contract with 2 owners that requires 2 signatures. It was deployed and paid for by  a third account, using a MultiSigWalletFactory contract. Is calling the MultiSigWallet contract method submitTransaction() only possible from either of the 2 owner accounts, and not by the third account?",
    "html": "I have a MultiSigWallet contract with 2 owners that requires 2 signatures. It was deployed and paid for by  a third account, using a MultiSigWalletFactory contract. Is calling the MultiSigWallet contract method submitTransaction() only possible from either of the 2 owner accounts, and not by the third account?",
    "sent": "2017-05-09T05:08:06.882Z",
    "fromUser": {
      "id": "58a599dad73408ce4f4ac456",
      "username": "mattvick",
      "displayName": "Matthew Vickery",
      "url": "/mattvick",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mattvick",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/651430?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/651430?v=4&s=128",
      "v": 8,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59114f37ac693c532ad4938e",
    "text": "MultiSigWallet contracts from here: https://github.com/ConsenSys/MultiSigWallet/tree/master/contracts/solidity",
    "html": "MultiSigWallet contracts from here: <a href=\"https://github.com/ConsenSys/MultiSigWallet/tree/master/contracts/solidity\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/ConsenSys/MultiSigWallet/tree/master/contracts/solidity</a>",
    "sent": "2017-05-09T05:10:15.841Z",
    "fromUser": {
      "id": "58a599dad73408ce4f4ac456",
      "username": "mattvick",
      "displayName": "Matthew Vickery",
      "url": "/mattvick",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mattvick",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/651430?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/651430?v=4&s=128",
      "v": 8,
      "gv": "4"
    },
    "unread": false,
    "readBy": 23,
    "urls": [
      {
        "url": "https://github.com/ConsenSys/MultiSigWallet/tree/master/contracts/solidity"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5917d7038a05641b117da7e4",
    "text": "has anyone dealt with token registries enough to guide me toward how to use web3 calls to list my tokens? I've tried making ```abi = myAbi; var registry = web3.eth.contract(abi); var r = registry.at([0x11434E50f1849B90647A4F01Ef2ADbE396cAa236]);```",
    "html": "has anyone dealt with token registries enough to guide me toward how to use web3 calls to list my tokens? I&#39;ve tried making <code>abi = myAbi; var registry = web3.eth.contract(abi); var r = registry.at([0x11434E50f1849B90647A4F01Ef2ADbE396cAa236]);</code>",
    "sent": "2017-05-14T04:03:15.124Z",
    "editedAt": "2017-05-14T04:03:57.892Z",
    "fromUser": {
      "id": "553ec7a715522ed4b3df9ab0",
      "username": "jeffanthony",
      "displayName": "Jeffrey Anthony",
      "url": "/jeffanthony",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jeffanthony",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/553756?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/553756?v=4&s=128",
      "v": 38,
      "gv": "4"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "591f0e192b926f8a67705ecf",
    "text": "Hi! I would like to use a method of contract A inside an other contract B. I import A in B , and in a B method I do `var chapterStorage = Registry(registryAddress).getContract('s:chapter');` ",
    "html": "Hi! I would like to use a method of contract A inside an other contract B. I import A in B , and in a B method I do <code>var chapterStorage = Registry(registryAddress).getContract(&#39;s:chapter&#39;);</code> ",
    "sent": "2017-05-19T15:24:09.686Z",
    "fromUser": {
      "id": "5483820ddb8155e6700dc867",
      "username": "Janaka-Steph",
      "displayName": "Janaka-Steph",
      "url": "/Janaka-Steph",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Janaka-Steph",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4022128?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4022128?v=4&s=128",
      "v": 67,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "591f0e3300efc2bb3e83e059",
    "text": "In A I do `address public registryAddress = this;`",
    "html": "In A I do <code>address public registryAddress = this;</code>",
    "sent": "2017-05-19T15:24:35.962Z",
    "fromUser": {
      "id": "5483820ddb8155e6700dc867",
      "username": "Janaka-Steph",
      "displayName": "Janaka-Steph",
      "url": "/Janaka-Steph",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Janaka-Steph",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4022128?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4022128?v=4&s=128",
      "v": 67,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "591f0e3c83cb5db0734a0d4e",
    "text": "why it doesn't work ?",
    "html": "why it doesn&#39;t work ?",
    "sent": "2017-05-19T15:24:44.480Z",
    "fromUser": {
      "id": "5483820ddb8155e6700dc867",
      "username": "Janaka-Steph",
      "displayName": "Janaka-Steph",
      "url": "/Janaka-Steph",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Janaka-Steph",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4022128?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4022128?v=4&s=128",
      "v": 67,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "591f0e96f3001cd3423a3bed",
    "text": "it says that registryAddress is `Undeclared identifier`",
    "html": "it says that registryAddress is <code>Undeclared identifier</code>",
    "sent": "2017-05-19T15:26:14.959Z",
    "fromUser": {
      "id": "5483820ddb8155e6700dc867",
      "username": "Janaka-Steph",
      "displayName": "Janaka-Steph",
      "url": "/Janaka-Steph",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Janaka-Steph",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4022128?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4022128?v=4&s=128",
      "v": 67,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "591f0f4a83cb5db0734a1432",
    "text": "it fails at compilation time, so it is not a deployment issue",
    "html": "it fails at compilation time, so it is not a deployment issue",
    "sent": "2017-05-19T15:29:14.116Z",
    "fromUser": {
      "id": "5483820ddb8155e6700dc867",
      "username": "Janaka-Steph",
      "displayName": "Janaka-Steph",
      "url": "/Janaka-Steph",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Janaka-Steph",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4022128?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4022128?v=4&s=128",
      "v": 67,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "591f202e33e9ee771cc36395",
    "text": "the only way I found is to inherit and set registryAddress in the constructor. I thought it was not necessary. I don't like inheritance",
    "html": "the only way I found is to inherit and set registryAddress in the constructor. I thought it was not necessary. I don&#39;t like inheritance",
    "sent": "2017-05-19T16:41:18.478Z",
    "fromUser": {
      "id": "5483820ddb8155e6700dc867",
      "username": "Janaka-Steph",
      "displayName": "Janaka-Steph",
      "url": "/Janaka-Steph",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Janaka-Steph",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4022128?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4022128?v=4&s=128",
      "v": 67,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "592290f6f3001cd34246af41",
    "text": "@Janaka-Steph did you try casting `this` to address explicitly ? `address public registryAddress = address(this)` ? ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"Janaka-Steph\" class=\"mention\">@Janaka-Steph</span> did you try casting <code>this</code> to address explicitly ? <code>address public registryAddress = address(this)</code> ? ",
    "sent": "2017-05-22T07:19:18.222Z",
    "fromUser": {
      "id": "56d0a5f7e610378809c3b9c2",
      "username": "pgrzesik",
      "displayName": "Piotr Grzesik",
      "url": "/pgrzesik",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pgrzesik",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/17499590?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/17499590?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [
      {
        "screenName": "Janaka-Steph",
        "userId": "5483820ddb8155e6700dc867",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5922984f92217cca589e7185",
    "text": "also, why reference to address and not to the contract ? if A is used in B then maybe pass it in the constructor ?\n```\nfunction B(A _a) {\n  a = _a; \n}\n```",
    "html": "also, why reference to address and not to the contract ? if A is used in B then maybe pass it in the constructor ?<pre><code><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">B</span><span class=\"params\">(A _a)</span> </span>{\n  a = _a; \n}</code></pre>",
    "sent": "2017-05-22T07:50:39.082Z",
    "fromUser": {
      "id": "56d0a5f7e610378809c3b9c2",
      "username": "pgrzesik",
      "displayName": "Piotr Grzesik",
      "url": "/pgrzesik",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pgrzesik",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/17499590?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/17499590?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59229864c4d73f445acf338a",
    "text": "where a is `A public a;` ",
    "html": "where a is <code>A public a;</code> ",
    "sent": "2017-05-22T07:51:00.105Z",
    "fromUser": {
      "id": "56d0a5f7e610378809c3b9c2",
      "username": "pgrzesik",
      "displayName": "Piotr Grzesik",
      "url": "/pgrzesik",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pgrzesik",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/17499590?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/17499590?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 19,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "593f139ff6a78eab48413d84",
    "text": "Would it be general best practice to use require wherever you have an if (!x) throw; situation going forward?",
    "html": "Would it be general best practice to use require wherever you have an if (!x) throw; situation going forward?",
    "sent": "2017-06-12T22:20:15.254Z",
    "fromUser": {
      "id": "591de365d73408ce4f608c44",
      "username": "mnakachi",
      "displayName": "Mas Nakachi",
      "url": "/mnakachi",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/mnakachi",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4912592?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4912592?v=4&s=128",
      "v": 3,
      "gv": "4"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59530ba74bcd78af5651ee3c",
    "text": "hi @mnakachi a recent update was https://github.com/ConsenSys/smart-contract-best-practices#use-assert-and-require-properly  Is it clearer?",
    "html": "hi <span data-link-type=\"mention\" data-screen-name=\"mnakachi\" class=\"mention\">@mnakachi</span> a recent update was <a href=\"https://github.com/ConsenSys/smart-contract-best-practices#use-assert-and-require-properly\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/ConsenSys/smart-contract-best-practices#use-assert-and-require-properly</a>  Is it clearer?",
    "sent": "2017-06-28T01:51:35.114Z",
    "fromUser": {
      "id": "550ca3db15522ed4b3dd93b2",
      "username": "ethers",
      "displayName": "ethers",
      "url": "/ethers",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/ethers",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6937903?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6937903?v=4&s=128",
      "v": 53,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [
      {
        "url": "https://github.com/ConsenSys/smart-contract-best-practices#use-assert-and-require-properly"
      }
    ],
    "mentions": [
      {
        "screenName": "mnakachi",
        "userId": "591de365d73408ce4f608c44",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595479fd8dae42503165bc1b",
    "text": "Anyone here have any suggestions around best practices for storage contracts?",
    "html": "Anyone here have any suggestions around best practices for storage contracts?",
    "sent": "2017-06-29T03:54:37.009Z",
    "fromUser": {
      "id": "54121353163965c9bc2040cf",
      "username": "skilesare",
      "displayName": "skilesare",
      "url": "/skilesare",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/skilesare",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/643387?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/643387?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595521144bcd78af565ae7f4",
    "text": "pragma solidity ^0.4.0;\n\ncontract exchange {\n\n\tmapping (address => uint256) public balances;\n    event PaymentDone(string s);\n\tfunction Channel( uint value) payable {\n\t\t balances[msg.sender] -=value;\n            balances[this] +=value;\n\t\t\n\t}\n\n\tfunction CloseChannel( address to,uint value){\n\n\t\n    if (to.send(value)) {\n    PaymentDone(\"Done\");\n    \n}\t\t}\n\n\t}\n\n\t\nis it possible to send ether from contract address to my account address using the CloseChannel function",
    "html": "<p>pragma solidity ^0.4.0;</p><p>contract exchange {</p><pre><code>mapping (address =&gt; uint256) <span class=\"keyword\">public</span> balances;\n<span class=\"function\"><span class=\"keyword\">event</span> <span class=\"title\">PaymentDone</span><span class=\"params\">(<span class=\"keyword\">string</span> s)</span></span>;\n<span class=\"function\">function <span class=\"title\">Channel</span><span class=\"params\">( <span class=\"keyword\">uint</span> <span class=\"keyword\">value</span>)</span> payable </span>{\n     balances[msg.sender] -=<span class=\"keyword\">value</span>;\n        balances[<span class=\"keyword\">this</span>] +=<span class=\"keyword\">value</span>;\n\n}\n\n<span class=\"function\">function <span class=\"title\">CloseChannel</span><span class=\"params\">( address to,<span class=\"keyword\">uint</span> <span class=\"keyword\">value</span>)</span></span>{\n\n\n<span class=\"keyword\">if</span> (to.send(<span class=\"keyword\">value</span>)) {\nPaymentDone(<span class=\"string\">\"Done\"</span>);</code></pre><p>}        }</p><pre><code>}</code></pre><p>is it possible to send ether from contract address to my account address using the CloseChannel function</p>",
    "sent": "2017-06-29T15:47:32.425Z",
    "fromUser": {
      "id": "58d98635d73408ce4f54222c",
      "username": "Shubhabrata-Mukherjee",
      "displayName": "Shubhabrata-Mukherjee",
      "url": "/Shubhabrata-Mukherjee",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Shubhabrata-Mukherjee",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21312050?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21312050?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5955213b3230e14f3a09c577",
    "text": "@Shubhabrata-Mukherjee i'd suggest you look into PushPull model",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"Shubhabrata-Mukherjee\" class=\"mention\">@Shubhabrata-Mukherjee</span> i&#39;d suggest you look into PushPull model",
    "sent": "2017-06-29T15:48:11.495Z",
    "fromUser": {
      "id": "5508f39d15522ed4b3dd6ca8",
      "username": "jamesdwilson",
      "displayName": "James",
      "url": "/jamesdwilson",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/jamesdwilson",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/943132?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/943132?v=4&s=128",
      "v": 21,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [
      {
        "screenName": "Shubhabrata-Mukherjee",
        "userId": "58d98635d73408ce4f54222c",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595521c411755ab056362753",
    "text": "do you have any link or document?",
    "html": "do you have any link or document?",
    "sent": "2017-06-29T15:50:28.380Z",
    "fromUser": {
      "id": "58d98635d73408ce4f54222c",
      "username": "Shubhabrata-Mukherjee",
      "displayName": "Shubhabrata-Mukherjee",
      "url": "/Shubhabrata-Mukherjee",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Shubhabrata-Mukherjee",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21312050?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21312050?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595521f7703e565c33583bf7",
    "text": "https://medium.com/zeppelin-blog/onward-with-ethereum-smart-contract-security-97a827e47702",
    "html": "<a href=\"https://medium.com/zeppelin-blog/onward-with-ethereum-smart-contract-security-97a827e47702\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://medium.com/zeppelin-blog/onward-with-ethereum-smart-contract-security-97a827e47702</a>",
    "sent": "2017-06-29T15:51:19.098Z",
    "fromUser": {
      "id": "5508f39d15522ed4b3dd6ca8",
      "username": "jamesdwilson",
      "displayName": "James",
      "url": "/jamesdwilson",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/jamesdwilson",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/943132?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/943132?v=4&s=128",
      "v": 21,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [
      {
        "url": "https://medium.com/zeppelin-blog/onward-with-ethereum-smart-contract-security-97a827e47702"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595522605a1ab55f643a2c71",
    "text": "@jamesdwilson thanks",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"jamesdwilson\" class=\"mention\">@jamesdwilson</span> thanks",
    "sent": "2017-06-29T15:53:04.203Z",
    "fromUser": {
      "id": "58d98635d73408ce4f54222c",
      "username": "Shubhabrata-Mukherjee",
      "displayName": "Shubhabrata-Mukherjee",
      "url": "/Shubhabrata-Mukherjee",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Shubhabrata-Mukherjee",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21312050?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21312050?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [
      {
        "screenName": "jamesdwilson",
        "userId": "5508f39d15522ed4b3dd6ca8",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5955241a703e565c3358461c",
    "text": "How to send ether from contract address to two different account in a single function",
    "html": "How to send ether from contract address to two different account in a single function",
    "sent": "2017-06-29T16:00:26.663Z",
    "fromUser": {
      "id": "58d98635d73408ce4f54222c",
      "username": "Shubhabrata-Mukherjee",
      "displayName": "Shubhabrata-Mukherjee",
      "url": "/Shubhabrata-Mukherjee",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Shubhabrata-Mukherjee",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21312050?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21312050?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59566922bf7e6af22c8db626",
    "text": "In response to my question above, here is an article I wrote about my futzing around with storage contracts.  http://catallax.info/news/2017/6/29/storage-contracts-mappings-and-etl-dev-log-8",
    "html": "In response to my question above, here is an article I wrote about my futzing around with storage contracts.  <a href=\"http://catallax.info/news/2017/6/29/storage-contracts-mappings-and-etl-dev-log-8\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://catallax.info/news/2017/6/29/storage-contracts-mappings-and-etl-dev-log-8</a>",
    "sent": "2017-06-30T15:07:14.878Z",
    "fromUser": {
      "id": "54121353163965c9bc2040cf",
      "username": "skilesare",
      "displayName": "skilesare",
      "url": "/skilesare",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/skilesare",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/643387?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/643387?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 12,
    "urls": [
      {
        "url": "http://catallax.info/news/2017/6/29/storage-contracts-mappings-and-etl-dev-log-8"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5957b39c4bcd78af566560bb",
    "text": "the warnings against using block time (\"now\" in solidity) are rather fuzzy, and i understand why they are. but let's say you have a case where people DO have a financial incentive to cheat. Within what +/- of time could I consider something to be reasonably \"safe\"? As in, \"They could cheat, but they can't really cheat by more than X minutes.\" Does such a \"safe\" zone exist? ",
    "html": "the warnings against using block time (&quot;now&quot; in solidity) are rather fuzzy, and i understand why they are. but let&#39;s say you have a case where people DO have a financial incentive to cheat. Within what +/- of time could I consider something to be reasonably &quot;safe&quot;? As in, &quot;They could cheat, but they can&#39;t really cheat by more than X minutes.&quot; Does such a &quot;safe&quot; zone exist? ",
    "sent": "2017-07-01T14:37:16.879Z",
    "fromUser": {
      "id": "529c6d52ed5ab0b3bf04db62",
      "username": "jwietelmann",
      "displayName": "Joel Wietelmann",
      "url": "/jwietelmann",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/jwietelmann",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/550889?v=3&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/550889?v=3&s=128",
      "v": 3,
      "gv": "3"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595837c7c101bc4e3a401b67",
    "text": "is it still considered best practice to make contracts pausable?",
    "html": "is it still considered best practice to make contracts pausable?",
    "sent": "2017-07-02T00:01:11.778Z",
    "fromUser": {
      "id": "5508f39d15522ed4b3dd6ca8",
      "username": "jamesdwilson",
      "displayName": "James",
      "url": "/jamesdwilson",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/jamesdwilson",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/943132?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/943132?v=4&s=128",
      "v": 21,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59583ac13230e14f3a16080e",
    "text": "@jamesdwilson it really depends on the context... for example in most cases an ERC20 token contract *should not* be pausable as that could advantage the contract owner over other token holders. Voting is another example where pausability could undermine the functioning of the contract.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"jamesdwilson\" class=\"mention\">@jamesdwilson</span> it really depends on the context... for example in most cases an ERC20 token contract <em>should not</em> be pausable as that could advantage the contract owner over other token holders. Voting is another example where pausability could undermine the functioning of the contract.",
    "sent": "2017-07-02T00:13:53.323Z",
    "fromUser": {
      "id": "53e05886107e137846ba93c7",
      "username": "salis",
      "displayName": "Paul Salisbury",
      "url": "/salis",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/salis",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/161331?v=3&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/161331?v=3&s=128",
      "v": 3,
      "gv": "3"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [
      {
        "screenName": "jamesdwilson",
        "userId": "5508f39d15522ed4b3dd6ca8",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "59583d2dad9c781843bf1a66",
    "text": "tyty",
    "html": "tyty",
    "sent": "2017-07-02T00:24:13.917Z",
    "fromUser": {
      "id": "5508f39d15522ed4b3dd6ca8",
      "username": "jamesdwilson",
      "displayName": "James",
      "url": "/jamesdwilson",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/jamesdwilson",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/943132?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/943132?v=4&s=128",
      "v": 21,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595b9f392723db8d5ed737ce",
    "text": "@jwietelmann https://ethereum.stackexchange.com/a/432/5973",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"jwietelmann\" class=\"mention\">@jwietelmann</span> <a href=\"https://ethereum.stackexchange.com/a/432/5973\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://ethereum.stackexchange.com/a/432/5973</a>",
    "sent": "2017-07-04T13:59:21.612Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [
      {
        "url": "https://ethereum.stackexchange.com/a/432/5973"
      }
    ],
    "mentions": [
      {
        "screenName": "jwietelmann",
        "userId": "529c6d52ed5ab0b3bf04db62",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595cb9253230e14f3a28edbe",
    "text": "\nI was making a smart contract which involves people to buy tokens in exchange of ether they send. It works fine in testrpc as all accounts are unlocked, but how do I do it for actual accounts in main network using web3 in nodejs. What fields would be required to invoke these payable functionalities of smartcontract except the wallet address ofcourse? Any code snippets or examples? ",
    "html": "I was making a smart contract which involves people to buy tokens in exchange of ether they send. It works fine in testrpc as all accounts are unlocked, but how do I do it for actual accounts in main network using web3 in nodejs. What fields would be required to invoke these payable functionalities of smartcontract except the wallet address ofcourse? Any code snippets or examples? ",
    "sent": "2017-07-05T10:02:13.237Z",
    "fromUser": {
      "id": "58d98635d73408ce4f54222c",
      "username": "Shubhabrata-Mukherjee",
      "displayName": "Shubhabrata-Mukherjee",
      "url": "/Shubhabrata-Mukherjee",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Shubhabrata-Mukherjee",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21312050?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21312050?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595cbe783230e14f3a29074e",
    "text": "@Shreekavithaa\nHello folks. So I want to build a smart contract that shows the leader board stats of several users in the network. For example: consider a set of nodes doing some transaction and I want to reward the node which has done highest number of transactions. This means that I need to access the account details of the node and then project it out on a leader board. Can this sort of thing be done with ethereum? If yes some heads up please>?\nAlso I would like to know if it is possible to build a thin client using ethereum? ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"Shreekavithaa\" class=\"mention\">@Shreekavithaa</span><br>Hello folks. So I want to build a smart contract that shows the leader board stats of several users in the network. For example: consider a set of nodes doing some transaction and I want to reward the node which has done highest number of transactions. This means that I need to access the account details of the node and then project it out on a leader board. Can this sort of thing be done with ethereum? If yes some heads up please&gt;?<br>Also I would like to know if it is possible to build a thin client using ethereum? ",
    "sent": "2017-07-05T10:24:56.743Z",
    "fromUser": {
      "id": "594bbf15d73408ce4f69508c",
      "username": "Shreekavithaa",
      "displayName": "Shree",
      "url": "/Shreekavithaa",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/Shreekavithaa",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8644765?v=3&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8644765?v=3&s=128",
      "v": 2,
      "gv": "3"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [
      {
        "screenName": "Shreekavithaa",
        "userId": "594bbf15d73408ce4f69508c",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595cbf0af5b3458e30156963",
    "text": "@Shubhabrata-Mukherjee I also have the similar query. Kindly let me know if you come across something interesting ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"Shubhabrata-Mukherjee\" class=\"mention\">@Shubhabrata-Mukherjee</span> I also have the similar query. Kindly let me know if you come across something interesting ",
    "sent": "2017-07-05T10:27:22.577Z",
    "fromUser": {
      "id": "594bbf15d73408ce4f69508c",
      "username": "Shreekavithaa",
      "displayName": "Shree",
      "url": "/Shreekavithaa",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/Shreekavithaa",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8644765?v=3&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8644765?v=3&s=128",
      "v": 2,
      "gv": "3"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [
      {
        "screenName": "Shubhabrata-Mukherjee",
        "userId": "58d98635d73408ce4f54222c",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595cd547329651f46e5712e3",
    "text": "@Shubhabrata-Mukherjee This bitter is most focused in development best practices. I would say that question would be more easily answered if you asked it in https://gitter.im/ConsenSys/truffle",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"Shubhabrata-Mukherjee\" class=\"mention\">@Shubhabrata-Mukherjee</span> This bitter is most focused in development best practices. I would say that question would be more easily answered if you asked it in <a href=\"https://gitter.im/ConsenSys/truffle\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gitter.im/ConsenSys/truffle</a>",
    "sent": "2017-07-05T12:02:15.333Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [
      {
        "url": "https://gitter.im/ConsenSys/truffle"
      }
    ],
    "mentions": [
      {
        "screenName": "Shubhabrata-Mukherjee",
        "userId": "58d98635d73408ce4f54222c",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595cd9662723db8d5edd3333",
    "text": "@Shreekavithaa \nRe: light client\nDepends on your conception of \"thin\" client. (v. https://blog.ethereum.org/2017/01/07/introduction-light-client-dapp-developers/)\nRe: Nodes TX count\nOnce again depends on your definition of \"node\". Do you want to price the miner of the block with the highest number of transactions?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"Shreekavithaa\" class=\"mention\">@Shreekavithaa</span><br>Re: light client<br>Depends on your conception of &quot;thin&quot; client. (v. <a href=\"https://blog.ethereum.org/2017/01/07/introduction-light-client-dapp-developers/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://blog.ethereum.org/2017/01/07/introduction-light-client-dapp-developers/</a>)<br>Re: Nodes TX count<br>Once again depends on your definition of &quot;node&quot;. Do you want to price the miner of the block with the highest number of transactions?",
    "sent": "2017-07-05T12:19:50.923Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [
      {
        "url": "https://blog.ethereum.org/2017/01/07/introduction-light-client-dapp-developers/"
      }
    ],
    "mentions": [
      {
        "screenName": "Shreekavithaa",
        "userId": "594bbf15d73408ce4f69508c",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595cdccf0de4d2545ef6fac3",
    "text": "By thin client I mean a mobile interface",
    "html": "By thin client I mean a mobile interface",
    "sent": "2017-07-05T12:34:23.682Z",
    "fromUser": {
      "id": "594bbf15d73408ce4f69508c",
      "username": "Shreekavithaa",
      "displayName": "Shree",
      "url": "/Shreekavithaa",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/Shreekavithaa",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8644765?v=3&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8644765?v=3&s=128",
      "v": 2,
      "gv": "3"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595cdce3bf7e6af22ca84c27",
    "text": "By node I mean all the users ",
    "html": "By node I mean all the users ",
    "sent": "2017-07-05T12:34:43.448Z",
    "fromUser": {
      "id": "594bbf15d73408ce4f69508c",
      "username": "Shreekavithaa",
      "displayName": "Shree",
      "url": "/Shreekavithaa",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/Shreekavithaa",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8644765?v=3&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8644765?v=3&s=128",
      "v": 2,
      "gv": "3"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595cdd56f5b3458e30160187",
    "text": "Consider the use case of energy trading, I want to reward the person who sold more solar energy. Or the person who used the least energy. ",
    "html": "Consider the use case of energy trading, I want to reward the person who sold more solar energy. Or the person who used the least energy. ",
    "sent": "2017-07-05T12:36:38.688Z",
    "fromUser": {
      "id": "594bbf15d73408ce4f69508c",
      "username": "Shreekavithaa",
      "displayName": "Shree",
      "url": "/Shreekavithaa",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/Shreekavithaa",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8644765?v=3&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8644765?v=3&s=128",
      "v": 2,
      "gv": "3"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595cdd733230e14f3a29ae15",
    "text": "I want to keep track of the statistics of the energy usage or the transactions done by the users ",
    "html": "I want to keep track of the statistics of the energy usage or the transactions done by the users ",
    "sent": "2017-07-05T12:37:07.665Z",
    "fromUser": {
      "id": "594bbf15d73408ce4f69508c",
      "username": "Shreekavithaa",
      "displayName": "Shree",
      "url": "/Shreekavithaa",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/Shreekavithaa",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8644765?v=3&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8644765?v=3&s=128",
      "v": 2,
      "gv": "3"
    },
    "unread": false,
    "readBy": 20,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595cdd802723db8d5edd49e5",
    "text": "Is this kind of smart contract possible ? ",
    "html": "Is this kind of smart contract possible ? ",
    "sent": "2017-07-05T12:37:20.332Z",
    "fromUser": {
      "id": "594bbf15d73408ce4f69508c",
      "username": "Shreekavithaa",
      "displayName": "Shree",
      "url": "/Shreekavithaa",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/Shreekavithaa",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8644765?v=3&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8644765?v=3&s=128",
      "v": 2,
      "gv": "3"
    },
    "unread": false,
    "readBy": 21,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "595ce688329651f46e576f8b",
    "text": "Sure",
    "html": "Sure",
    "sent": "2017-07-05T13:15:52.872Z",
    "editedAt": "2017-07-05T13:16:01.374Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "595ce6ac4bcd78af567b400a",
    "text": "You've got Status.im to build a good mobile-first Ethereum dApp",
    "html": "You&#39;ve got Status.im to build a good mobile-first Ethereum dApp",
    "sent": "2017-07-05T13:16:28.416Z",
    "fromUser": {
      "id": "54bd42addb8155e6700ed45e",
      "username": "GNSPS",
      "displayName": "Gonçalo Sá",
      "url": "/GNSPS",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/GNSPS",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4008213?v=4&s=128",
      "v": 20,
      "gv": "4"
    },
    "unread": false,
    "readBy": 22,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "583d906973abd79c55aef73c",
    "text": "@nikita-fuchs the easy way would be to make a withdraw function so each recipient pays the gas to retrieve their ether. Withdraw instead of send is generally the best idea anyway",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"nikita-fuchs\" class=\"mention\">@nikita-fuchs</span> the easy way would be to make a withdraw function so each recipient pays the gas to retrieve their ether. Withdraw instead of send is generally the best idea anyway",
    "sent": "2016-11-29T14:27:53.703Z",
    "fromUser": {
      "id": "5759f39ac2f0db084a1d1527",
      "username": "DennisBPeterson",
      "displayName": "DennisBPeterson",
      "url": "/DennisBPeterson",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/DennisBPeterson",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7445180?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7445180?v=4&s=128",
      "v": 13,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [
      {
        "screenName": "nikita-fuchs",
        "userId": "57efcb4ed73408ce4f2af4cc",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "583efc2973abd79c55b725f0",
    "text": "thank you @DennisBPeterson !",
    "html": "thank you <span data-link-type=\"mention\" data-screen-name=\"DennisBPeterson\" class=\"mention\">@DennisBPeterson</span> !",
    "sent": "2016-11-30T16:19:53.585Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [
      {
        "screenName": "DennisBPeterson",
        "userId": "5759f39ac2f0db084a1d1527",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "583f1e9573abd79c55b809c7",
    "text": "hi",
    "html": "hi",
    "sent": "2016-11-30T18:46:45.963Z",
    "fromUser": {
      "id": "583f1350d73408ce4f39c707",
      "username": "AnshulPandey31_twitter",
      "displayName": "Anshul Pandey",
      "url": "/AnshulPandey31_twitter",
      "avatarUrl": "https://avatars-01.gitter.im/g/u/AnshulPandey31_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_6_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_6_normal.png?s=128"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "583f87088255fe6b76ed07e1",
    "text": "@DennisBPeterson so to withdraw ether from a contract I would call a function (which transfers ether from the contract) and pass some ether with that function call - namely the amount that the gas costs will be for the contract for transfering the funds to me ? ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"DennisBPeterson\" class=\"mention\">@DennisBPeterson</span> so to withdraw ether from a contract I would call a function (which transfers ether from the contract) and pass some ether with that function call - namely the amount that the gas costs will be for the contract for transfering the funds to me ? ",
    "sent": "2016-12-01T02:12:24.548Z",
    "editedAt": "2016-12-01T02:12:46.637Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 9,
    "urls": [],
    "mentions": [
      {
        "screenName": "DennisBPeterson",
        "userId": "5759f39ac2f0db084a1d1527",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "584177e273abd79c55c4e37a",
    "text": "yep exactly",
    "html": "yep exactly",
    "sent": "2016-12-02T13:32:18.023Z",
    "fromUser": {
      "id": "5759f39ac2f0db084a1d1527",
      "username": "DennisBPeterson",
      "displayName": "DennisBPeterson",
      "url": "/DennisBPeterson",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/DennisBPeterson",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7445180?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7445180?v=4&s=128",
      "v": 13,
      "gv": "4"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "585a2ad6c02c1a39599425a8",
    "text": "In smart contract, what's the caller of function and what the difference between this and msg.sender?",
    "html": "In smart contract, what&#39;s the caller of function and what the difference between this and msg.sender?",
    "sent": "2016-12-21T07:10:14.611Z",
    "fromUser": {
      "id": "585912c9d73408ce4f3e3ddc",
      "username": "crytography",
      "displayName": "crytography",
      "url": "/crytography",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/crytography",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/15363271?v=3&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/15363271?v=3&s=128",
      "v": 1,
      "gv": "3"
    },
    "unread": false,
    "readBy": 7,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "585a2b8cc02c1a3959942998",
    "text": "Actually it's the same, if i understand your question right. msg.sender also takes into account function calls between smart contracts. But you better check this in the readthedocs of solidity, it's very well explained there",
    "html": "Actually it&#39;s the same, if i understand your question right. msg.sender also takes into account function calls between smart contracts. But you better check this in the readthedocs of solidity, it&#39;s very well explained there",
    "sent": "2016-12-21T07:13:16.966Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 7,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "585e26fe058ca96737871a84",
    "text": "contract state variable does not change after called the function",
    "html": "contract state variable does not change after called the function",
    "sent": "2016-12-24T07:42:54.564Z",
    "fromUser": {
      "id": "5837f5b1d73408ce4f38864a",
      "username": "luren5",
      "displayName": "路人-戊",
      "url": "/luren5",
      "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/luren5",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4065596?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4065596?v=4&s=128",
      "v": 10,
      "gv": "4"
    },
    "unread": false,
    "readBy": 7,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "586e0e869e6f00e74afb9a7f",
    "text": "Guys, how is it possible to output an array like uint[] on the truffle console?",
    "html": "Guys, how is it possible to output an array like uint[] on the truffle console?",
    "sent": "2017-01-05T09:14:46.424Z",
    "fromUser": {
      "id": "580f48f7d73408ce4f30b3fd",
      "username": "crzndx",
      "displayName": "crzndx",
      "url": "/crzndx",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/crzndx",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/528896?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/528896?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 5,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "586e0ea4c895451b755a13cb",
    "text": "  function getBalance() returns (uint[]) {\n    return balance;\n  }",
    "html": "  function getBalance() returns (uint[]) {<br>    return balance;<br>  }",
    "sent": "2017-01-05T09:15:16.107Z",
    "fromUser": {
      "id": "580f48f7d73408ce4f30b3fd",
      "username": "crzndx",
      "displayName": "crzndx",
      "url": "/crzndx",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/crzndx",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/528896?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/528896?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 5,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "586e0eb99e6f00e74afb9b89",
    "text": "balance is:   uint[] public balance;",
    "html": "balance is:   uint[] public balance;",
    "sent": "2017-01-05T09:15:37.400Z",
    "fromUser": {
      "id": "580f48f7d73408ce4f30b3fd",
      "username": "crzndx",
      "displayName": "crzndx",
      "url": "/crzndx",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/crzndx",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/528896?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/528896?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 5,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "586e0eec058ca96737ceada6",
    "text": "I tried HelloWorldContract.getBalance().then(console.log) but that does only return an address",
    "html": "I tried HelloWorldContract.getBalance().then(console.log) but that does only return an address",
    "sent": "2017-01-05T09:16:28.755Z",
    "fromUser": {
      "id": "580f48f7d73408ce4f30b3fd",
      "username": "crzndx",
      "displayName": "crzndx",
      "url": "/crzndx",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/crzndx",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/528896?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/528896?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 6,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "586e118b9e6f00e74afbac00",
    "text": "oh it must be constant return :smile: ",
    "html": "oh it must be constant return :smile: ",
    "sent": "2017-01-05T09:27:39.470Z",
    "fromUser": {
      "id": "580f48f7d73408ce4f30b3fd",
      "username": "crzndx",
      "displayName": "crzndx",
      "url": "/crzndx",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/crzndx",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/528896?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/528896?v=4&s=128",
      "v": 6,
      "gv": "4"
    },
    "unread": false,
    "readBy": 6,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "586e2b6daa6be0472f0e0c7c",
    "text": "Also it's helloworldcontract.deployed().getBalance().call({from:web3.eth.coinbase}).then........",
    "html": "Also it&#39;s helloworldcontract.deployed().getBalance().call({from:web3.eth.coinbase}).then........",
    "sent": "2017-01-05T11:18:05.778Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 6,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58779da7dec171b811ddabe1",
    "text": "Hi, Iive problem using geth client with truffle in a private network , please I need help , so I've created a private blockchain with 2 nodes and create account for each one, I've unlocked then and join them (with addPeer ) and I mined ether , I start RPC in the first node ( IP localhost and port 8545) , so I wrote my smart contract and deployed it with truffle ( network 110) I've modify truffle.js ... so my problem is when I interact with my smart contract I can just get value stocked but when I try to do any changes it is not done, for example subscribe some one (client)  I have the transaction and I verify that is mined but when I verify the number of client subscribed it's stilled at 0 !!! and the list of client is empty  :/",
    "html": "Hi, Iive problem using geth client with truffle in a private network , please I need help , so I&#39;ve created a private blockchain with 2 nodes and create account for each one, I&#39;ve unlocked then and join them (with addPeer ) and I mined ether , I start RPC in the first node ( IP localhost and port 8545) , so I wrote my smart contract and deployed it with truffle ( network 110) I&#39;ve modify truffle.js ... so my problem is when I interact with my smart contract I can just get value stocked but when I try to do any changes it is not done, for example subscribe some one (client)  I have the transaction and I verify that is mined but when I verify the number of client subscribed it&#39;s stilled at 0 !!! and the list of client is empty  :/",
    "sent": "2017-01-12T15:15:51.149Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5877aa9fdec171b811de0af6",
    "text": "Can you post the function call you used for verifying your client list?",
    "html": "Can you post the function call you used for verifying your client list?",
    "sent": "2017-01-12T16:11:11.745Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5877acb66c1635643c1d91cf",
    "text": "@nikita-fuchs , this is my function to subscribe my client : \n```\n  function subscribe (address client) {\n\n\t    clients[client].balanceOfPoints=10;\n\t    accountIndex[numberClient]=client;\n\t    minterBalance=minterBalance-10;\n\t    clients[client].exist=true;\n      numberClient++;\n      Subscribe(client, clients[client].balanceOfPoints, numberClient );\n      }\n```\nI call this function from javascript file like this: \n```\n  myContract.subscribe(addclient, { from: minterAddress });\n```\nSo I've instantiated my contract like this: \n```\nvar myContract =web3.eth.contract(abi).at(address);\n```\nthe address I get it from truffle migrate and the ABI from solidity browser\n",
    "html": "<p><span data-link-type=\"mention\" data-screen-name=\"nikita-fuchs\" class=\"mention\">@nikita-fuchs</span> , this is my function to subscribe my client : </p><pre><code>  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">subscribe</span> <span class=\"params\">(address client)</span> </span>{\n\n        clients[client].balanceOfPoints=<span class=\"number\">10</span>;\n        accountIndex[numberClient]=client;\n        minterBalance=minterBalance-<span class=\"number\">10</span>;\n        clients[client].exist=<span class=\"literal\">true</span>;\n      numberClient++;\n      Subscribe(client, clients[client].balanceOfPoints, numberClient );\n      }</code></pre><p>I call this function from javascript file like this: </p><pre><code>  <span class=\"tag\">myContract</span><span class=\"class\">.subscribe</span>(addclient, { <span class=\"attribute\">from</span>: minterAddress });</code></pre><p>So I&#39;ve instantiated my contract like this: </p><pre><code><span class=\"variable\"><span class=\"keyword\">var</span> myContract</span> =web3.eth.contract(abi).at(address);</code></pre><p>the address I get it from truffle migrate and the ABI from solidity browser</p>",
    "sent": "2017-01-12T16:20:06.864Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [
      {
        "screenName": "nikita-fuchs",
        "userId": "57efcb4ed73408ce4f2af4cc",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5877ad1f300f220a66dc66fc",
    "text": "@nikita-fuchs  I call  the numver of client like this: \n``\n  number=myContract.numberClient.call({from:minter});\n      alert(number);\n``\nAnd I've 0 ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"nikita-fuchs\" class=\"mention\">@nikita-fuchs</span>  I call  the numver of client like this:<br><code>number=myContract.numberClient.call({from:minter});\n      alert(number);</code><br>And I&#39;ve 0 ",
    "sent": "2017-01-12T16:21:51.731Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [
      {
        "screenName": "nikita-fuchs",
        "userId": "57efcb4ed73408ce4f2af4cc",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5877afd5cbcb2817705efdc7",
    "text": "@KerchoucheKahi_twitter before trying everything else, try ``` myContract.deployed().numberClient.call({from:web3.eth.coinbase}).then(function (newResult) {console.log(newResult.toNumber());}) ``` (assuming you're using truffle)",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"KerchoucheKahi_twitter\" class=\"mention\">@KerchoucheKahi_twitter</span> before trying everything else, try <code>myContract.deployed().numberClient.call({from:web3.eth.coinbase}).then(function (newResult) {console.log(newResult.toNumber());})</code> (assuming you&#39;re using truffle)",
    "sent": "2017-01-12T16:33:25.960Z",
    "editedAt": "2017-01-12T16:34:33.819Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [
      {
        "screenName": "KerchoucheKahi_twitter",
        "userId": "58761734d73408ce4f42c3e3",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 3
  },
  {
    "id": "5877b111e836bf701035e083",
    "text": "I use truffle and geth , so I must  I use  ``myContract.deployed()``  after doing  ``var myContract =web3.eth.contract(abi).at(address);``",
    "html": "I use truffle and geth , so I must  I use  <code>myContract.deployed()</code>  after doing  <code>var myContract =web3.eth.contract(abi).at(address);</code>",
    "sent": "2017-01-12T16:38:41.576Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5877b1a06c1635643c1db4cd",
    "text": "@nikita-fuchs   can I do this!! ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"nikita-fuchs\" class=\"mention\">@nikita-fuchs</span>   can I do this!! ",
    "sent": "2017-01-12T16:41:04.355Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [
      {
        "screenName": "nikita-fuchs",
        "userId": "57efcb4ed73408ce4f2af4cc",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5877b1fa300f220a66dc85f8",
    "text": "it told me that \n````\nTypeError: myContract.deployed is not a function[Learn More]\n````\n",
    "html": "it told me that <pre><code>TypeError: myContract<span class=\"class\">.deployed</span> is not <span class=\"tag\">a</span> function[Learn More]</code></pre>",
    "sent": "2017-01-12T16:42:34.947Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5877b56adec171b811de659f",
    "text": "@nikita-fuchs  and when I try with : \n````\nnumberClient.call({from:web3.eth.coinbase}).then(function (newResult) {console.log(newResult.toNumber());});\n````\nit returns: \n````\nTypeError: myContract.numberClient.call(...).then is not a function[Learn More]\n````\n\n",
    "html": "<p><span data-link-type=\"mention\" data-screen-name=\"nikita-fuchs\" class=\"mention\">@nikita-fuchs</span>  and when I try with : </p><pre><code><span class=\"tag\">numberClient</span><span class=\"class\">.call</span>(<span class=\"rules\">{<span class=\"rule\"><span class=\"attribute\">from</span>:<span class=\"value\">web3.eth.coinbase}).<span class=\"function\">then</span>(function (newResult) {console.<span class=\"function\">log</span>(newResult.<span class=\"function\">toNumber</span>())</span></span>;}</span>);</code></pre><p>it returns: </p><pre><code>TypeError: myContract<span class=\"class\">.numberClient</span><span class=\"class\">.call</span>(...)<span class=\"class\">.then</span> is not <span class=\"tag\">a</span> function[Learn More]</code></pre>",
    "sent": "2017-01-12T16:57:14.280Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [
      {
        "screenName": "nikita-fuchs",
        "userId": "57efcb4ed73408ce4f2af4cc",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5877b5ffcbcb2817705f266e",
    "text": "@KerchoucheKahi_twitter you are mixing web3 and truffle up a little bit. here is what you do: you completely forget about web3 things like ``` var myContract =web3.eth.contract(abi).at(address);  ``` and other web3 stuff and only focus on truffle, as it handles all the ABI mess for you automatically ;) what you do is create a truffle project (truffle init), add the stuff you need for your dapp into app.js, do truffle migrate and truffle build. some hard-coded bootstrap code will be added at the beginning of your app.js, where everything is already set up with web3. to give you an example:",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"KerchoucheKahi_twitter\" class=\"mention\">@KerchoucheKahi_twitter</span> you are mixing web3 and truffle up a little bit. here is what you do: you completely forget about web3 things like <code>var myContract =web3.eth.contract(abi).at(address);</code> and other web3 stuff and only focus on truffle, as it handles all the ABI mess for you automatically ;) what you do is create a truffle project (truffle init), add the stuff you need for your dapp into app.js, do truffle migrate and truffle build. some hard-coded bootstrap code will be added at the beginning of your app.js, where everything is already set up with web3. to give you an example:",
    "sent": "2017-01-12T16:59:43.305Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [
      {
        "screenName": "KerchoucheKahi_twitter",
        "userId": "58761734d73408ce4f42c3e3",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5877b769e836bf7010361d38",
    "text": "@nikita-fuchs , so I use a private blockchain so I migrate to it with : \n````\ntruffle migrate  --network staging\n```\nand I have the adresse of my smart contract in the staging network (id 110) , can you tell me with the example metacoin how to do it using truffle and geth client, because with testrpc all work well ",
    "html": "<p><span data-link-type=\"mention\" data-screen-name=\"nikita-fuchs\" class=\"mention\">@nikita-fuchs</span> , so I use a private blockchain so I migrate to it with : </p><pre><code>truffle migrate  <span class=\"comment\">--network staging</span></code></pre><p>and I have the adresse of my smart contract in the staging network (id 110) , can you tell me with the example metacoin how to do it using truffle and geth client, because with testrpc all work well </p>",
    "sent": "2017-01-12T17:05:45.630Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [
      {
        "screenName": "nikita-fuchs",
        "userId": "57efcb4ed73408ce4f2af4cc",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5877b7b6873d96e16d5ce247",
    "text": "```\ncontract mySubscribers {\n\tmapping (address => uint) balances;\n\n\tuint subscribers;\n\n\t\n\n\tfunction mySubscribers() {\n\t\tsubscribers = 0;\n\t}\n\n\tfunction addsubscriber() {\n\t\tsubscribers++\n\t\treturn true;\n\t}\n\n\t\n\tfunction getSubscribers() returns (uint) { \n\t\treturn subscribers,\n\t}\n}\n```\nif you deploy this contract with truffle, you can do ```mySubscribers.deployed().getSubscribers.call({from:web3.eth.coinbase}) ``` to receive the current number of subscribers, and ```mySubscribers.deployed().addSubscribers({from:web3.eth.coinbase}) ``` to add +1 to the number ;) ",
    "html": "<pre><code>contract mySubscribers {\n    mapping (address =&gt; uint) balances;\n\n    uint subscribers;\n\n\n\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mySubscribers</span><span class=\"params\">()</span> </span>{\n        subscribers = <span class=\"number\">0</span>;\n    }\n\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addsubscriber</span><span class=\"params\">()</span> </span>{\n        subscribers++\n        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;\n    }\n\n\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getSubscribers</span><span class=\"params\">()</span> <span class=\"title\">returns</span> <span class=\"params\">(uint)</span> </span>{ \n        <span class=\"keyword\">return</span> subscribers,\n    }\n}</code></pre>if you deploy this contract with truffle, you can do <code>mySubscribers.deployed().getSubscribers.call({from:web3.eth.coinbase})</code> to receive the current number of subscribers, and <code>mySubscribers.deployed().addSubscribers({from:web3.eth.coinbase})</code> to add +1 to the number ;) ",
    "sent": "2017-01-12T17:07:02.620Z",
    "editedAt": "2017-01-12T17:08:31.309Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 3
  },
  {
    "id": "5877b7ece836bf7010361f7f",
    "text": "@KerchoucheKahi_twitter had to edit my last post, there was a mistake in it.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"KerchoucheKahi_twitter\" class=\"mention\">@KerchoucheKahi_twitter</span> had to edit my last post, there was a mistake in it.",
    "sent": "2017-01-12T17:07:56.411Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [
      {
        "screenName": "KerchoucheKahi_twitter",
        "userId": "58761734d73408ce4f42c3e3",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5877b804dec171b811de77a4",
    "text": "oops there is one more",
    "html": "oops there is one more",
    "sent": "2017-01-12T17:08:20.758Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5877b81811e7a7f61d89cd28",
    "text": "@nikita-fuchs  ok \n",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"nikita-fuchs\" class=\"mention\">@nikita-fuchs</span>  ok ",
    "sent": "2017-01-12T17:08:40.013Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [
      {
        "screenName": "nikita-fuchs",
        "userId": "57efcb4ed73408ce4f2af4cc",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5877b820cbcb2817705f339e",
    "text": "not it should be fine. I recommend reading truffle's readthedocs",
    "html": "not it should be fine. I recommend reading truffle&#39;s readthedocs",
    "sent": "2017-01-12T17:08:48.567Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5877b8316c1635643c1de4cf",
    "text": "@KerchoucheKahi_twitter  http://truffleframework.com/docs/",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"KerchoucheKahi_twitter\" class=\"mention\">@KerchoucheKahi_twitter</span>  <a href=\"http://truffleframework.com/docs/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://truffleframework.com/docs/</a>",
    "sent": "2017-01-12T17:09:05.322Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 4,
    "urls": [
      {
        "url": "http://truffleframework.com/docs/"
      }
    ],
    "mentions": [
      {
        "screenName": "KerchoucheKahi_twitter",
        "userId": "58761734d73408ce4f42c3e3",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5877b873873d96e16d5ce69f",
    "text": "So, the difference that you use deployed() but it is not right because if I interact with my contract  from another node it doesn't know the adresse and ABI of the contract ",
    "html": "So, the difference that you use deployed() but it is not right because if I interact with my contract  from another node it doesn&#39;t know the adresse and ABI of the contract ",
    "sent": "2017-01-12T17:10:11.750Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5877b8b2cbcb2817705f372e",
    "text": "so can you tell me how to interact with smart contract deployed in a node and intercat with it from another node using geth client and truffle , this is my problem I must specify the address and ABI",
    "html": "so can you tell me how to interact with smart contract deployed in a node and intercat with it from another node using geth client and truffle , this is my problem I must specify the address and ABI",
    "sent": "2017-01-12T17:11:14.696Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 4,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5877bd68cbcb2817705f5900",
    "text": "@KerchoucheKahi_twitter you have to get a better understanding of how the ethereum network and how truffle works ;) things are never \"deployed in a node\" but either in the network, globally accessible, or not at all. truffle takes the contract address and it's ABI and writes into the app.js when you du ```truffle deploy```. so everytime you enter the commands I posted, all the neccessary information will be looked up in the app.js which was generated by truffle.",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"KerchoucheKahi_twitter\" class=\"mention\">@KerchoucheKahi_twitter</span> you have to get a better understanding of how the ethereum network and how truffle works ;) things are never &quot;deployed in a node&quot; but either in the network, globally accessible, or not at all. truffle takes the contract address and it&#39;s ABI and writes into the app.js when you du <code>truffle deploy</code>. so everytime you enter the commands I posted, all the neccessary information will be looked up in the app.js which was generated by truffle.",
    "sent": "2017-01-12T17:31:20.668Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 5,
    "urls": [],
    "mentions": [
      {
        "screenName": "KerchoucheKahi_twitter",
        "userId": "58761734d73408ce4f42c3e3",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5877be43dec171b811dea087",
    "text": "you can verify this by deploying the example contract MetaCoin with ``` truffle migrate ``` , then ```truffle build``` , and uploading the build to some webserver. no matter who in the world will load up that website, can do MetaCoin.deployed().method(....... and will be able to interact with your contract.",
    "html": "you can verify this by deploying the example contract MetaCoin with <code>truffle migrate</code> , then <code>truffle build</code> , and uploading the build to some webserver. no matter who in the world will load up that website, can do MetaCoin.deployed().method(....... and will be able to interact with your contract.",
    "sent": "2017-01-12T17:34:59.259Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 5,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5877be5e6c1635643c1e0c04",
    "text": "(of course, only on the main net)",
    "html": "(of course, only on the main net)",
    "sent": "2017-01-12T17:35:26.636Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 5,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5877be82dec171b811dea1e0",
    "text": "@KerchoucheKahi_twitter i'm sorry, it's not ```truffle deploy``` , but ```truffle migrate```",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"KerchoucheKahi_twitter\" class=\"mention\">@KerchoucheKahi_twitter</span> i&#39;m sorry, it&#39;s not <code>truffle deploy</code> , but <code>truffle migrate</code>",
    "sent": "2017-01-12T17:36:02.592Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 5,
    "urls": [],
    "mentions": [
      {
        "screenName": "KerchoucheKahi_twitter",
        "userId": "58761734d73408ce4f42c3e3",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5877beb6300f220a66dcdbca",
    "text": "and in this case, the pasting of all information is also done by the ```truffle build``` command, sorry again.",
    "html": "and in this case, the pasting of all information is also done by the <code>truffle build</code> command, sorry again.",
    "sent": "2017-01-12T17:36:54.585Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 5,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5878d4f5873d96e16d62f761",
    "text": "@nikita-fuchs thank you for details, so I know that it is deployed any where in the network my question is how to interact with it from the node because if I have two smart contract for example which are deployed , how to specify which one I'd like to call!!!! if I have to smart contract which have the same name for example so I think that it is necessary tu specify the address and the ABI ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"nikita-fuchs\" class=\"mention\">@nikita-fuchs</span> thank you for details, so I know that it is deployed any where in the network my question is how to interact with it from the node because if I have two smart contract for example which are deployed , how to specify which one I&#39;d like to call!!!! if I have to smart contract which have the same name for example so I think that it is necessary tu specify the address and the ABI ",
    "sent": "2017-01-13T13:24:05.413Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 5,
    "urls": [],
    "mentions": [
      {
        "screenName": "nikita-fuchs",
        "userId": "57efcb4ed73408ce4f2af4cc",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5878d605074f7be763c7db91",
    "text": "I told you to read the truffle documentation, didn't I, @KerchoucheKahi_twitter ? :P no it's okay, just check out the method ```deployed.at()```",
    "html": "I told you to read the truffle documentation, didn&#39;t I, <span data-link-type=\"mention\" data-screen-name=\"KerchoucheKahi_twitter\" class=\"mention\">@KerchoucheKahi_twitter</span> ? :P no it&#39;s okay, just check out the method <code>deployed.at()</code>",
    "sent": "2017-01-13T13:28:37.668Z",
    "editedAt": "2017-01-13T13:31:04.506Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 5,
    "urls": [],
    "mentions": [
      {
        "screenName": "KerchoucheKahi_twitter",
        "userId": "58761734d73408ce4f42c3e3",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5878d676074f7be763c7de76",
    "text": "Also, there is no 'interacting from the node' - you can either interact with the contract from anywherr or not at all. Truffle makes sure that you always have the right address :) and if you want the same contract at another address, just fire up that method.",
    "html": "Also, there is no &#39;interacting from the node&#39; - you can either interact with the contract from anywherr or not at all. Truffle makes sure that you always have the right address :) and if you want the same contract at another address, just fire up that method.",
    "sent": "2017-01-13T13:30:30.735Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 5,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5878d6896c1635643c241e7d",
    "text": "I'll read but tell just , I migrate and inside app.js I instantiate my smart contract or no!! or I'll just call with myContract.deployed.function....",
    "html": "I&#39;ll read but tell just , I migrate and inside app.js I instantiate my smart contract or no!! or I&#39;ll just call with myContract.deployed.function....",
    "sent": "2017-01-13T13:30:49.185Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 5,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5878d72511e7a7f61d9017ff",
    "text": "You don't have to instantiate anything, the app.js already knows about any contract you deployed. You can tell truffle which ones to deploy and how, in the deployment configuration. So just truffle migrate, truffle build, and open that index.html through a webserver.",
    "html": "You don&#39;t have to instantiate anything, the app.js already knows about any contract you deployed. You can tell truffle which ones to deploy and how, in the deployment configuration. So just truffle migrate, truffle build, and open that index.html through a webserver.",
    "sent": "2017-01-13T13:33:25.644Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 7,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5878d7b86c1635643c2424df",
    "text": "my question is: if I'm in another node in another pc how to specify that I would to interact with this smart contract and  not another !!",
    "html": "my question is: if I&#39;m in another node in another pc how to specify that I would to interact with this smart contract and  not another !!",
    "sent": "2017-01-13T13:35:52.365Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5878d7e7dec171b811e4c916",
    "text": "So I haven't migrate from this PC and I don't know the contract address how to interact with it\n",
    "html": "So I haven&#39;t migrate from this PC and I don&#39;t know the contract address how to interact with it",
    "sent": "2017-01-13T13:36:39.266Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5878d869dec171b811e4cbcb",
    "text": "Again, there is no such thing as \"being in another node\". But to interact with your contract, just put the files from the build folder online and load the index.html . there you can open your browsers java console and enter commands. Of course, you need to be connected to the ethereum network for that.",
    "html": "Again, there is no such thing as &quot;being in another node&quot;. But to interact with your contract, just put the files from the build folder online and load the index.html . there you can open your browsers java console and enter commands. Of course, you need to be connected to the ethereum network for that.",
    "sent": "2017-01-13T13:38:49.605Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5878d8db300f220a66e2a5fe",
    "text": "Okay I'will try this :)",
    "html": "Okay I&#39;will try this :)",
    "sent": "2017-01-13T13:40:43.391Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5878dac2300f220a66e2b83c",
    "text": ";) :+1: ",
    "html": ";) :+1: ",
    "sent": "2017-01-13T13:48:50.349Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5878e875cbcb28177065bdbb",
    "text": "@nikita-fuchs, I've tested with metacoin, I just do truffle init truffle compile truffle migrate and truffle build so no I do truffle serve to listen, so now if I want to interact with this smart contract from another pc I need to copy the file /build/app.js !!! to the second PC !! ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"nikita-fuchs\" class=\"mention\">@nikita-fuchs</span>, I&#39;ve tested with metacoin, I just do truffle init truffle compile truffle migrate and truffle build so no I do truffle serve to listen, so now if I want to interact with this smart contract from another pc I need to copy the file /build/app.js !!! to the second PC !! ",
    "sent": "2017-01-13T14:47:17.239Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [
      {
        "screenName": "nikita-fuchs",
        "userId": "57efcb4ed73408ce4f2af4cc",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5878eb9a873d96e16d6380f3",
    "text": "@KerchoucheKahi_twitter you don't need to copy anything. Upload everything from the build folder to a real webserver, open java console and interact from anywhere ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"KerchoucheKahi_twitter\" class=\"mention\">@KerchoucheKahi_twitter</span> you don&#39;t need to copy anything. Upload everything from the build folder to a real webserver, open java console and interact from anywhere ",
    "sent": "2017-01-13T15:00:42.075Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [
      {
        "screenName": "KerchoucheKahi_twitter",
        "userId": "58761734d73408ce4f42c3e3",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5878ef13074f7be763c87a18",
    "text": "A. start geth with following parameters ``` geth --unlock 0 --networkid 110 --rpc --rpcport 8545 --rpcaddr 0.0.0.0 --rpccorsdomain \"*\" --rpcapi \"eth,web3,personal\" --ipcpath ~/.ethereum/geth.ipc console ```\n\nZ.  read the truffle's documentary step by step, i.e. \"interacting with your contract\". http://truffleframework.com/docs/",
    "html": "<p>A. start geth with following parameters <code>geth --unlock 0 --networkid 110 --rpc --rpcport 8545 --rpcaddr 0.0.0.0 --rpccorsdomain &quot;*&quot; --rpcapi &quot;eth,web3,personal&quot; --ipcpath ~/.ethereum/geth.ipc console</code></p><p>Z.  read the truffle&#39;s documentary step by step, i.e. &quot;interacting with your contract&quot;. <a href=\"http://truffleframework.com/docs/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://truffleframework.com/docs/</a></p>",
    "sent": "2017-01-13T15:15:31.166Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 8,
    "urls": [
      {
        "url": "http://truffleframework.com/docs/"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5878efc8cbcb28177065e45f",
    "text": " I know you might be used to quick step-by-step tutorials, but not fully understanding how things work under the hood will result in a catastrophe, because doing mistakes because of superficial knowledge in Ethereum will break your neck one day. I even recommend you to look up, what all the parameters for launching geth mean. because they are **only for development use** and might have you all your Ether stolen, if you don't change them in production. so, there is really **no way** you can do things here with just step-by-step guides. you need to get a proper understanding of what a node is, how the ethereum virtual machine works, and how tu use truffle, @KerchoucheKahi_twitter ",
    "html": " I know you might be used to quick step-by-step tutorials, but not fully understanding how things work under the hood will result in a catastrophe, because doing mistakes because of superficial knowledge in Ethereum will break your neck one day. I even recommend you to look up, what all the parameters for launching geth mean. because they are <strong>only for development use</strong> and might have you all your Ether stolen, if you don&#39;t change them in production. so, there is really <strong>no way</strong> you can do things here with just step-by-step guides. you need to get a proper understanding of what a node is, how the ethereum virtual machine works, and how tu use truffle, <span data-link-type=\"mention\" data-screen-name=\"KerchoucheKahi_twitter\" class=\"mention\">@KerchoucheKahi_twitter</span> ",
    "sent": "2017-01-13T15:18:32.745Z",
    "editedAt": "2017-01-13T15:19:30.753Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [
      {
        "screenName": "KerchoucheKahi_twitter",
        "userId": "58761734d73408ce4f42c3e3",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "5878f0facbcb28177065ecd3",
    "text": "I can just give you this simple hint on your way: forget thinking in nodes. it's either a client is connected to the main / test / your custom network or not. it's always truffle migrate, truffle build, and uploading the files from the build folder on a proper web server. (or cd into the build directory, and do ```php -S localhost:8000``` , open your browser and open http://localhost:8000, then open the java console and do your commands)",
    "html": "I can just give you this simple hint on your way: forget thinking in nodes. it&#39;s either a client is connected to the main / test / your custom network or not. it&#39;s always truffle migrate, truffle build, and uploading the files from the build folder on a proper web server. (or cd into the build directory, and do <code>php -S localhost:8000</code> , open your browser and open <a href=\"http://localhost:8000\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://localhost:8000</a>, then open the java console and do your commands)",
    "sent": "2017-01-13T15:23:38.243Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 8,
    "urls": [
      {
        "url": "http://localhost:8000"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5878f742cbcb2817706612ea",
    "text": "do truffle migrate, truffle build, serve the generated index.html through a webserver. open the website, open the javaconsole, enter the command you wish to test, and you will get the return. (I'm assuming that the node you're using to deploy the contract is mining at that time ? otherwise the migration to the network won't be done)",
    "html": "do truffle migrate, truffle build, serve the generated index.html through a webserver. open the website, open the javaconsole, enter the command you wish to test, and you will get the return. (I&#39;m assuming that the node you&#39;re using to deploy the contract is mining at that time ? otherwise the migration to the network won&#39;t be done)",
    "sent": "2017-01-13T15:50:26.543Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5878f9d8873d96e16d63df31",
    "text": "@nikita-fuchs but when I run index.html in my webserver  so I needn't to open javaconsole",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"nikita-fuchs\" class=\"mention\">@nikita-fuchs</span> but when I run index.html in my webserver  so I needn&#39;t to open javaconsole",
    "sent": "2017-01-13T16:01:28.728Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [
      {
        "screenName": "nikita-fuchs",
        "userId": "57efcb4ed73408ce4f2af4cc",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5878fa4b074f7be763c8c392",
    "text": "so my geth is running and mining and truffle serve also ",
    "html": "so my geth is running and mining and truffle serve also ",
    "sent": "2017-01-13T16:03:23.059Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5878fc1c300f220a66e37f3b",
    "text": "you can open the java console of your browser, to enter testing commands. you know what, a thing changed lately indeed.",
    "html": "you can open the java console of your browser, to enter testing commands. you know what, a thing changed lately indeed.",
    "sent": "2017-01-13T16:11:08.864Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5878fc55e836bf70103d6212",
    "text": "in firefox, open the java console, and do: ``` var meta = MetaCoin.deployed(); ``` and after that do ``` meta.getBalance.call(account, {from: account}).then(function (newResult) {console.log(newResult.toNumber());}) ``` it will return you 10000. ",
    "html": "in firefox, open the java console, and do: <code>var meta = MetaCoin.deployed();</code> and after that do <code>meta.getBalance.call(account, {from: account}).then(function (newResult) {console.log(newResult.toNumber());})</code> it will return you 10000. ",
    "sent": "2017-01-13T16:12:05.554Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5878fc8711e7a7f61d911b84",
    "text": "i don't know why using metacoin.deployed().blaba returns 0 now, but the way i told you works, just checked it.",
    "html": "i don&#39;t know why using metacoin.deployed().blaba returns 0 now, but the way i told you works, just checked it.",
    "sent": "2017-01-13T16:12:55.800Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58790038074f7be763c8e9df",
    "text": "@KerchoucheKahi_twitter of course, in my example, you will have to replace \"account\" with \"web3.eth.coinbase\"  - that should return you the 10.000",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"KerchoucheKahi_twitter\" class=\"mention\">@KerchoucheKahi_twitter</span> of course, in my example, you will have to replace &quot;account&quot; with &quot;web3.eth.coinbase&quot;  - that should return you the 10.000",
    "sent": "2017-01-13T16:28:40.237Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [
      {
        "screenName": "KerchoucheKahi_twitter",
        "userId": "58761734d73408ce4f42c3e3",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58790509cbcb28177066757d",
    "text": "No that should retrun me the number of ether of my balance not 10 000 because I'm not using testRPC\n",
    "html": "No that should retrun me the number of ether of my balance not 10 000 because I&#39;m not using testRPC",
    "sent": "2017-01-13T16:49:13.190Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "587905be11e7a7f61d915d2f",
    "text": "nope, in the metacoin example contract from truffle that should return you the amount of metacoins you own in that contract, being 10.000 by default, @KerchoucheKahi_twitter ",
    "html": "nope, in the metacoin example contract from truffle that should return you the amount of metacoins you own in that contract, being 10.000 by default, <span data-link-type=\"mention\" data-screen-name=\"KerchoucheKahi_twitter\" class=\"mention\">@KerchoucheKahi_twitter</span> ",
    "sent": "2017-01-13T16:52:14.884Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [
      {
        "screenName": "KerchoucheKahi_twitter",
        "userId": "58761734d73408ce4f42c3e3",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5879098ddec171b811e61206",
    "text": "@nikita-fuchs yes you are right, but it doesn't return anything :/ \n",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"nikita-fuchs\" class=\"mention\">@nikita-fuchs</span> yes you are right, but it doesn&#39;t return anything :/ ",
    "sent": "2017-01-13T17:08:29.628Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [
      {
        "screenName": "nikita-fuchs",
        "userId": "57efcb4ed73408ce4f2af4cc",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "587909a4cbcb2817706691dd",
    "text": "I'm readint line by line truffle doc ",
    "html": "I&#39;m readint line by line truffle doc ",
    "sent": "2017-01-13T17:08:52.337Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "587909a8e836bf70103db988",
    "text": "reading",
    "html": "reading",
    "sent": "2017-01-13T17:08:56.284Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58790a60074f7be763c92b08",
    "text": "Could you post the parameters you use for starting geth?",
    "html": "Could you post the parameters you use for starting geth?",
    "sent": "2017-01-13T17:12:00.647Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58790af56c1635643c2570f7",
    "text": "I tried recording a video for you, but vmware wouldn't move and freezes :worried: ",
    "html": "I tried recording a video for you, but vmware wouldn&#39;t move and freezes :worried: ",
    "sent": "2017-01-13T17:14:29.579Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58790e936c1635643c2583da",
    "text": "to start geth : \n```\n geth --datadir ./noeud1 --networkid \"110\" --port 30301 console\n\n```\ninside geth : )\n``` \n> admin.startRPC(\"localhost\",8545,'*','eth,web3,rpc')\n> personal.unlockAccount(eth.coinbase, 'password')\n>miner.start(2) \n```",
    "html": "<p>to start geth : </p><pre><code> geth --datadir ./noeud1 --networkid <span class=\"string\">\"110\"</span> --port <span class=\"number\">30301</span> <span class=\"built_in\">console</span></code></pre><p>inside geth : )</p><pre><code>&gt; admin.<span class=\"function\"><span class=\"title\">startRPC</span><span class=\"params\">(<span class=\"string\">\"localhost\"</span>,<span class=\"number\">8545</span>,<span class=\"string\">'*'</span>,<span class=\"string\">'eth,web3,rpc'</span>)</span></span>\n&gt; personal.<span class=\"function\"><span class=\"title\">unlockAccount</span><span class=\"params\">(eth.coinbase, <span class=\"string\">'password'</span>)</span></span>\n&gt;miner.<span class=\"function\"><span class=\"title\">start</span><span class=\"params\">(<span class=\"number\">2</span>)</span></span></code></pre>",
    "sent": "2017-01-13T17:29:55.613Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58790ed8cbcb28177066b688",
    "text": "and with truffle :smile:\n ```\ntruffle init \ntruffle compile\ntruffle built\ntruffle migrate --network staging\ntruffle serve\n```",
    "html": "and with truffle :smile:<pre><code>truffle init \ntruffle compile\ntruffle built\ntruffle migrate <span class=\"comment\">--network staging</span>\ntruffle serve</code></pre>",
    "sent": "2017-01-13T17:31:04.671Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58790f046c1635643c258666",
    "text": "so I'm  trying just with Metacoin to resolve the problem",
    "html": "so I&#39;m  trying just with Metacoin to resolve the problem",
    "sent": "2017-01-13T17:31:48.440Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58790f2b6c1635643c2586eb",
    "text": "and in my firefox  ``/path/to/index.html``",
    "html": "and in my firefox  <code>/path/to/index.html</code>",
    "sent": "2017-01-13T17:32:27.824Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58790f4d873d96e16d64760b",
    "text": "sorry build not built\n",
    "html": "sorry build not built",
    "sent": "2017-01-13T17:33:01.206Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58791001873d96e16d647aa0",
    "text": "I've modified in truffle.js \n```\n\"networks\":{\n        \"staging\":{\n            network_id:110,\n    \n        }\n    }\n\n```",
    "html": "I&#39;ve modified in truffle.js <pre><code><span class=\"string\">\"networks\"</span>:{\n        <span class=\"string\">\"staging\"</span>:{\n            network_id:<span class=\"number\">110</span>,\n\n        }\n    }</code></pre>",
    "sent": "2017-01-13T17:36:01.971Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 8,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5879100c873d96e16d647abf",
    "text": "that's all",
    "html": "that&#39;s all",
    "sent": "2017-01-13T17:36:12.287Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 9,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58791011e836bf70103dd93e",
    "text": "what do you get with ``` truffle networks``` ?",
    "html": "what do you get with <code>truffle networks</code> ?",
    "sent": "2017-01-13T17:36:17.387Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 9,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58791138300f220a66e40118",
    "text": "try leaving out --network staging, it will leave truffle thinking you're migratin to the main net, which is no problem.",
    "html": "try leaving out --network staging, it will leave truffle thinking you&#39;re migratin to the main net, which is no problem.",
    "sent": "2017-01-13T17:41:12.706Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 9,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5879123f6c1635643c259753",
    "text": "it migrates to the default network \n",
    "html": "it migrates to the default network ",
    "sent": "2017-01-13T17:45:35.603Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 9,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58791265300f220a66e407f8",
    "text": "that can't be, as you'r node is connected to your private network, not the main network.",
    "html": "that can&#39;t be, as you&#39;r node is connected to your private network, not the main network.",
    "sent": "2017-01-13T17:46:13.841Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 9,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5879126f074f7be763c954dd",
    "text": "```\n\nNetwork: default\n  ConvertLib: 0x1efe309c97e98fbeb19fa1f692f9eae25c15f65c\n  MetaCoin: 0xb3aca10e081fc695682210d71d1664830fa8be0e\n  Migrations: 0xc8683bfb5acd14307d790a9d42621667db4382d3\n\nNetwork: staging\n  No contracts deployed.\n\n```",
    "html": "<pre><code>\n<span class=\"attribute\">Network</span>: <span class=\"string\">default</span>\n  <span class=\"attribute\">ConvertLib</span>: <span class=\"string\">0x1efe309c97e98fbeb19fa1f692f9eae25c15f65c</span>\n  <span class=\"attribute\">MetaCoin</span>: <span class=\"string\">0xb3aca10e081fc695682210d71d1664830fa8be0e</span>\n  <span class=\"attribute\">Migrations</span>: <span class=\"string\">0xc8683bfb5acd14307d790a9d42621667db4382d3</span>\n\n<span class=\"css\"><span class=\"rule\"><span class=\"attribute\">Network</span>:<span class=\"value\"> staging\n  No contracts deployed.</span></span></span></code></pre>",
    "sent": "2017-01-13T17:46:23.756Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 9,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5879129b11e7a7f61d91ad48",
    "text": "like i said, it **thinks** it does so. but it's on your private net now. just look at the console window of geth while it's mining. you see the contract's addresses there",
    "html": "like i said, it <strong>thinks</strong> it does so. but it&#39;s on your private net now. just look at the console window of geth while it&#39;s mining. you see the contract&#39;s addresses there",
    "sent": "2017-01-13T17:47:07.682Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "587912b5dec171b811e642e9",
    "text": "yes I'vs seen it",
    "html": "yes I&#39;vs seen it",
    "sent": "2017-01-13T17:47:33.916Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "587912efdec171b811e6447f",
    "text": "So, there you go :)",
    "html": "So, there you go :)",
    "sent": "2017-01-13T17:48:31.959Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58791388873d96e16d64916b",
    "text": "So I've done the migration to the staging network now and I have the transaction in geth: \n```\nTx(0xc8d2c4a8dd8e0402e41a81eefc1b23b340b68cfbc599009d59f12304280f4117) created: 0xafa5963b9b9e8453d9d742c6ebbb65b2eb504975\n\nI0113 18:48:39.922844 internal/ethapi/api.go:1045] Tx(0x1aef41e0cca504223c6fd6d6ace0094b4ec7727b73747e96612507168279d459) created: 0x73c764aa8e92239e84aa4f3a590f188214b7c8e2\n\nI0113 18:48:50.994049 internal/ethapi/api.go:1045] Tx(0x6d542b46da15f93cb7ae215a98fdf51af0fc22718b9abb6df2c11d4054b168d2) created: 0x06f2f45b2e9adc66dffb1e0bdf9d21f9a0c4811d\n\n\nI0113 18:49:01.057257 internal/ethapi/api.go:1047] Tx(0x282eb822d70f126a142414dbfa2f91f4611ad959de084332b94e459b6670960c) to: 0xafa5963b9b9e8453d9d742c6ebbb65b2eb504975\n```\nand now with ``truffle migrate --network staging`` I've : \n```\n\nNetwork: default\n  ConvertLib: 0x1efe309c97e98fbeb19fa1f692f9eae25c15f65c\n  MetaCoin: 0xb3aca10e081fc695682210d71d1664830fa8be0e\n  Migrations: 0xc8683bfb5acd14307d790a9d42621667db4382d3\n\nNetwork: staging\n  ConvertLib: 0x73c764aa8e92239e84aa4f3a590f188214b7c8e2\n  MetaCoin: 0x06f2f45b2e9adc66dffb1e0bdf9d21f9a0c4811d\n  Migrations: 0xafa5963b9b9e8453d9d742c6ebbb65b2eb504975\n\n\n```\n",
    "html": "<p>So I&#39;ve done the migration to the staging network now and I have the transaction in geth: </p><pre><code><span class=\"function\"><span class=\"title\">Tx</span><span class=\"params\">(<span class=\"number\">0</span>xc8d2c4a8dd8e0402e41a81eefc1b23b340b68cfbc599009d59f12304280f4117)</span></span> created: <span class=\"number\">0</span>xafa5963b9b9e8453d9d742c6ebbb65b2eb504975\n\nI0113 <span class=\"number\">18</span>:<span class=\"number\">48</span>:<span class=\"number\">39.922844</span> internal/ethapi/api<span class=\"class\">.go</span>:<span class=\"number\">1045</span>] <span class=\"function\"><span class=\"title\">Tx</span><span class=\"params\">(<span class=\"number\">0</span>x1aef41e0cca504223c6fd6d6ace0094b4ec7727b73747e96612507168279d459)</span></span> created: <span class=\"number\">0</span>x73c764aa8e92239e84aa4f3a590f188214b7c8e2\n\nI0113 <span class=\"number\">18</span>:<span class=\"number\">48</span>:<span class=\"number\">50.994049</span> internal/ethapi/api<span class=\"class\">.go</span>:<span class=\"number\">1045</span>] <span class=\"function\"><span class=\"title\">Tx</span><span class=\"params\">(<span class=\"number\">0</span>x6d542b46da15f93cb7ae215a98fdf51af0fc22718b9abb6df2c11d4054b168d2)</span></span> created: <span class=\"number\">0</span>x06f2f45b2e9adc66dffb1e0bdf9d21f9a0c4811d\n\n\nI0113 <span class=\"number\">18</span>:<span class=\"number\">49</span>:<span class=\"number\">01.057257</span> internal/ethapi/api<span class=\"class\">.go</span>:<span class=\"number\">1047</span>] <span class=\"function\"><span class=\"title\">Tx</span><span class=\"params\">(<span class=\"number\">0</span>x282eb822d70f126a142414dbfa2f91f4611ad959de084332b94e459b6670960c)</span></span> to: <span class=\"number\">0</span>xafa5963b9b9e8453d9d742c6ebbb65b2eb504975</code></pre><p>and now with <code>truffle migrate --network staging</code> I&#39;ve : </p><pre><code>\n<span class=\"attribute\">Network</span>: <span class=\"string\">default</span>\n  <span class=\"attribute\">ConvertLib</span>: <span class=\"string\">0x1efe309c97e98fbeb19fa1f692f9eae25c15f65c</span>\n  <span class=\"attribute\">MetaCoin</span>: <span class=\"string\">0xb3aca10e081fc695682210d71d1664830fa8be0e</span>\n  <span class=\"attribute\">Migrations</span>: <span class=\"string\">0xc8683bfb5acd14307d790a9d42621667db4382d3</span>\n\n<span class=\"http\"><span class=\"attribute\">Network</span>: <span class=\"string\">staging</span>\n  <span class=\"attribute\">ConvertLib</span>: <span class=\"string\">0x73c764aa8e92239e84aa4f3a590f188214b7c8e2</span>\n  <span class=\"attribute\">MetaCoin</span>: <span class=\"string\">0x06f2f45b2e9adc66dffb1e0bdf9d21f9a0c4811d</span>\n  <span class=\"attribute\">Migrations</span>: <span class=\"string\">0xafa5963b9b9e8453d9d742c6ebbb65b2eb504975</span></span></code></pre>",
    "sent": "2017-01-13T17:51:04.307Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "587914206c1635643c25a3fb",
    "text": "So in fact, all that is on your private network. By the way, if you want to redeploy a contract you already deployed, you MUST do truffle reset before.",
    "html": "So in fact, all that is on your private network. By the way, if you want to redeploy a contract you already deployed, you MUST do truffle reset before.",
    "sent": "2017-01-13T17:53:36.930Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58791475cbcb28177066d9e8",
    "text": "I've done it, when I've migrate to the staging network   \n```\nkkerchouche@kkerchouche-VirtualBox:~/brouillon$ truffle migrate --reset --network staging\nRunning migration: 1_initial_migration.js\n  Deploying Migrations...\n  Migrations: 0xafa5963b9b9e8453d9d742c6ebbb65b2eb504975\nSaving successful migration to network...\nSaving artifacts...\nRunning migration: 2_deploy_contracts.js\n  Deploying ConvertLib...\n  ConvertLib: 0x73c764aa8e92239e84aa4f3a590f188214b7c8e2\n  Linking ConvertLib to MetaCoin\n  Deploying MetaCoin...\n  MetaCoin: 0x06f2f45b2e9adc66dffb1e0bdf9d21f9a0c4811d\nSaving successful migration to network...\nSaving artifacts...\n\n```",
    "html": "I&#39;ve done it, when I&#39;ve migrate to the staging network   <pre><code>kkerchouche@kkerchouche-<span class=\"variable\">VirtualBox</span>:~/brouillon$ truffle migrate --reset --network staging\n<span class=\"variable\">Running</span> migration: <span class=\"number\">1</span>_initial_migration.js\n  <span class=\"variable\">Deploying</span> <span class=\"variable\">Migrations</span>...\n  <span class=\"variable\">Migrations</span>: <span class=\"number\">0</span>xafa5963b9b9e8453d9d742c6ebbb65b2eb504975\n<span class=\"variable\">Saving</span> successful migration to network...\n<span class=\"variable\">Saving</span> artifacts...\n<span class=\"variable\">Running</span> migration: <span class=\"number\">2</span>_deploy_contracts.js\n  <span class=\"variable\">Deploying</span> <span class=\"variable\">ConvertLib</span>...\n  <span class=\"variable\">ConvertLib</span>: <span class=\"number\">0</span>x73c764aa8e92239e84aa4f3a590f188214b7c8e2\n  <span class=\"variable\">Linking</span> <span class=\"variable\">ConvertLib</span> to <span class=\"variable\">MetaCoin</span>\n  <span class=\"variable\">Deploying</span> <span class=\"variable\">MetaCoin</span>...\n  <span class=\"variable\">MetaCoin</span>: <span class=\"number\">0</span>x06f2f45b2e9adc66dffb1e0bdf9d21f9a0c4811d\n<span class=\"variable\">Saving</span> successful migration to network...\n<span class=\"variable\">Saving</span> artifacts...</code></pre>",
    "sent": "2017-01-13T17:55:00.985Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5879151f873d96e16d6499b8",
    "text": "so now I've an error in the browser wich is: \n```\nunreachable code after return statement[Learn More]  app.js:5165:4\nSyntaxError: missing ; before statement[Learn More]  app.js:40715:22\nThe character encoding of the HTML document was not declared. The document will render with garbled text in some browser configurations if the document contains characters from outside the US-ASCII range. The character encoding of the page must be declared in the document or in the transfer protocol.  index.html\n```\n",
    "html": "so now I&#39;ve an error in the browser wich is: <pre><code>unreachable code <span class=\"keyword\">after</span> <span class=\"constant\">return</span> statement[Learn More]  app.js:<span class=\"number\">5165</span>:<span class=\"number\">4</span>\nSyntaxError: missing ; <span class=\"keyword\">before</span> statement[Learn More]  app.js:<span class=\"number\">40715</span>:<span class=\"number\">22</span>\nThe <span class=\"property\">character</span> encoding <span class=\"keyword\">of</span> <span class=\"keyword\">the</span> HTML document was <span class=\"keyword\">not</span> declared. The document will render <span class=\"keyword\">with</span> garbled <span class=\"type\">text</span> <span class=\"keyword\">in</span> <span class=\"keyword\">some</span> browser configurations <span class=\"keyword\">if</span> <span class=\"keyword\">the</span> document <span class=\"keyword\">contains</span> <span class=\"property\">characters</span> <span class=\"keyword\">from</span> outside <span class=\"keyword\">the</span> US-ASCII range. The <span class=\"property\">character</span> encoding <span class=\"keyword\">of</span> <span class=\"keyword\">the</span> page must be declared <span class=\"keyword\">in</span> <span class=\"keyword\">the</span> document <span class=\"keyword\">or</span> <span class=\"keyword\">in</span> <span class=\"keyword\">the</span> transfer protocol.  index.html</code></pre>",
    "sent": "2017-01-13T17:57:51.591Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "587ceae711e7a7f61da2c54e",
    "text": "@nikita-fuchs So have you any explication to this!!! ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"nikita-fuchs\" class=\"mention\">@nikita-fuchs</span> So have you any explication to this!!! ",
    "sent": "2017-01-16T15:46:47.432Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 11,
    "urls": [],
    "mentions": [
      {
        "screenName": "nikita-fuchs",
        "userId": "57efcb4ed73408ce4f2af4cc",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "587ceb29dec171b811f6ce8e",
    "text": "Have you tested it ! please if you have time, do the exercice with me and tell me if you have the same result using geth truffle and private network\n",
    "html": "Have you tested it ! please if you have time, do the exercice with me and tell me if you have the same result using geth truffle and private network",
    "sent": "2017-01-16T15:47:53.509Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 12,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "587ceb63cbcb28177077faca",
    "text": "What are you trying to do, @KerchoucheKahi_twitter ?",
    "html": "What are you trying to do, <span data-link-type=\"mention\" data-screen-name=\"KerchoucheKahi_twitter\" class=\"mention\">@KerchoucheKahi_twitter</span> ?",
    "sent": "2017-01-16T15:48:51.827Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [
      {
        "screenName": "KerchoucheKahi_twitter",
        "userId": "58761734d73408ce4f42c3e3",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "587ced7ee836bf70104ea891",
    "text": "just test metacoin with truffle geth client and private network that all :(\n",
    "html": "just test metacoin with truffle geth client and private network that all :(",
    "sent": "2017-01-16T15:57:50.810Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "587cedf1e836bf70104eab84",
    "text": "because I don't know why it doesn't work with me :(",
    "html": "because I don&#39;t know why it doesn&#39;t work with me :(",
    "sent": "2017-01-16T15:59:45.552Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "587cee0c300f220a66f482ab",
    "text": "I'll figure out how to record a video for you :)",
    "html": "I&#39;ll figure out how to record a video for you :)",
    "sent": "2017-01-16T16:00:12.790Z",
    "editedAt": "2017-01-16T16:00:29.614Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 2
  },
  {
    "id": "587cf1dc11e7a7f61da2f496",
    "text": "okay thank you very much :) ",
    "html": "okay thank you very much :) ",
    "sent": "2017-01-16T16:16:28.133Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "587d0216074f7be763da7db7",
    "text": "have you find the solution? @nikita-fuchs ",
    "html": "have you find the solution? <span data-link-type=\"mention\" data-screen-name=\"nikita-fuchs\" class=\"mention\">@nikita-fuchs</span> ",
    "sent": "2017-01-16T17:25:42.188Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [
      {
        "screenName": "nikita-fuchs",
        "userId": "57efcb4ed73408ce4f2af4cc",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "587db018e836bf7010528d8c",
    "text": "all: fyi job posting until Jan 30 Security Engineer / Lead - Smart Contracts https://consensys.net/open-positions/?bzid=f9d87bfd0cba",
    "html": "all: fyi job posting until Jan 30 Security Engineer / Lead - Smart Contracts <a href=\"https://consensys.net/open-positions/?bzid=f9d87bfd0cba\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://consensys.net/open-positions/?bzid=f9d87bfd0cba</a>",
    "sent": "2017-01-17T05:48:08.827Z",
    "editedAt": "2017-01-17T05:49:24.025Z",
    "fromUser": {
      "id": "550ca3db15522ed4b3dd93b2",
      "username": "ethers",
      "displayName": "ethers",
      "url": "/ethers",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/ethers",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6937903?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6937903?v=4&s=128",
      "v": 53,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [
      {
        "url": "https://consensys.net/open-positions/?bzid=f9d87bfd0cba"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 3
  },
  {
    "id": "587e2d36dcb66e4f76742847",
    "text": "how apdate a smart contract if one day we decide to change some clause? shoud I redeploy it!!!! ",
    "html": "how apdate a smart contract if one day we decide to change some clause? shoud I redeploy it!!!! ",
    "sent": "2017-01-17T14:41:58.865Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "587e30d06c1635643c3dc289",
    "text": "Either this, or taoe a look at the features of library contracts.",
    "html": "Either this, or taoe a look at the features of library contracts.",
    "sent": "2017-01-17T14:57:20.791Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "587e32e5300f220a66faeb5b",
    "text": " @nikita-fuchs \nBut by redeploying it we lose all data previously recorded",
    "html": " <span data-link-type=\"mention\" data-screen-name=\"nikita-fuchs\" class=\"mention\">@nikita-fuchs</span><br>But by redeploying it we lose all data previously recorded",
    "sent": "2017-01-17T15:06:13.236Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [
      {
        "screenName": "nikita-fuchs",
        "userId": "57efcb4ed73408ce4f2af4cc",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "587e332d11e7a7f61da9aef4",
    "text": "That's why you should use libraries linked to contracts",
    "html": "That&#39;s why you should use libraries linked to contracts",
    "sent": "2017-01-17T15:07:25.472Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "587e34906c1635643c3de168",
    "text": "what do you mean with librairies!! (internal or external) ",
    "html": "what do you mean with librairies!! (internal or external) ",
    "sent": "2017-01-17T15:13:20.099Z",
    "fromUser": {
      "id": "58761734d73408ce4f42c3e3",
      "username": "KerchoucheKahi_twitter",
      "displayName": "Kahina Kerchouche",
      "url": "/KerchoucheKahi_twitter",
      "avatarUrl": "https://avatars-04.gitter.im/g/u/KerchoucheKahi_twitter",
      "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
      "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128"
    },
    "unread": false,
    "readBy": 14,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "580266e4457ae29b71e1302f",
    "text": "Does anybody have any sources for the best practices?",
    "html": "Does anybody have any sources for the best practices?",
    "sent": "2016-10-15T17:27:00.024Z",
    "fromUser": {
      "id": "58024262d73408ce4f2e6f15",
      "username": "SmokyDonkey",
      "displayName": "SmokyDonkey",
      "url": "/SmokyDonkey",
      "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/SmokyDonkey",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/22856636?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/22856636?v=4&s=128",
      "v": 5,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "580279b778bd0d0363c78450",
    "text": "hello @SmokyDonkey No one likes to read the doc but the solidity doc is actually pretty good. There are quite some good tips in there but I give you the fact that the information does not always stand out as much as it should.",
    "html": "hello <span data-link-type=\"mention\" data-screen-name=\"SmokyDonkey\" class=\"mention\">@SmokyDonkey</span> No one likes to read the doc but the solidity doc is actually pretty good. There are quite some good tips in there but I give you the fact that the information does not always stand out as much as it should.",
    "sent": "2016-10-15T18:47:19.340Z",
    "fromUser": {
      "id": "54db1c7415522ed4b3dbe150",
      "username": "chevdor",
      "displayName": "Chevdor",
      "url": "/chevdor",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chevdor",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/738724?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/738724?v=4&s=128",
      "v": 15,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [
      {
        "screenName": "SmokyDonkey",
        "userId": "58024262d73408ce4f2e6f15",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "580639392189c68f42f9d49e",
    "text": "@SmokyDonkey what do you mean by sources?",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"SmokyDonkey\" class=\"mention\">@SmokyDonkey</span> what do you mean by sources?",
    "sent": "2016-10-18T15:01:13.923Z",
    "fromUser": {
      "id": "550ca3db15522ed4b3dd93b2",
      "username": "ethers",
      "displayName": "ethers",
      "url": "/ethers",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/ethers",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6937903?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6937903?v=4&s=128",
      "v": 53,
      "gv": "4"
    },
    "unread": false,
    "readBy": 18,
    "urls": [],
    "mentions": [
      {
        "screenName": "SmokyDonkey",
        "userId": "58024262d73408ce4f2e6f15",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58086289759f6d2436cc969d",
    "text": "how to do error handling in smart contract solidity code?",
    "html": "how to do error handling in smart contract solidity code?",
    "sent": "2016-10-20T06:22:01.129Z",
    "fromUser": {
      "id": "57d6a6b340f3a6eec064cfd6",
      "username": "bminchal",
      "displayName": "bminchal",
      "url": "/bminchal",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/bminchal",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/19168493?v=3&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/19168493?v=3&s=128",
      "v": 2,
      "gv": "3"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "580870212189c68f420341bc",
    "text": "instead of throwing maybe one can issue events and return gracefully @bminchal ... depends if reverting the state is important to you",
    "html": "instead of throwing maybe one can issue events and return gracefully <span data-link-type=\"mention\" data-screen-name=\"bminchal\" class=\"mention\">@bminchal</span> ... depends if reverting the state is important to you",
    "sent": "2016-10-20T07:20:01.582Z",
    "fromUser": {
      "id": "543be8b1db8155e6700cb0be",
      "username": "rolandkofler",
      "displayName": "Roland Kofler",
      "url": "/rolandkofler",
      "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/rolandkofler",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/979444?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/979444?v=4&s=128",
      "v": 31,
      "gv": "4"
    },
    "unread": false,
    "readBy": 17,
    "urls": [],
    "mentions": [
      {
        "screenName": "bminchal",
        "userId": "57d6a6b340f3a6eec064cfd6",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "581756185a1cfa016e67a334",
    "text": "Hey All, I am doing development on Ethereum Solidity. Challenge is - (i)  testing takes long given mining contract goes for 3-4 minutes each time, so a small change can be like 4 minutes to get ready to test. That is even with Local Host (Private Node) (ii) How to debug for runtime failures. Existing Debugger is not that helpful. It is not throwing any error in screen. It is throwing lot of garabage/junk value. Any pointers please?",
    "html": "Hey All, I am doing development on Ethereum Solidity. Challenge is - (i)  testing takes long given mining contract goes for 3-4 minutes each time, so a small change can be like 4 minutes to get ready to test. That is even with Local Host (Private Node) (ii) How to debug for runtime failures. Existing Debugger is not that helpful. It is not throwing any error in screen. It is throwing lot of garabage/junk value. Any pointers please?",
    "sent": "2016-10-31T14:32:56.575Z",
    "fromUser": {
      "id": "57f17836d73408ce4f2b23df",
      "username": "vg_grover_twitter",
      "displayName": "Vikas Grover",
      "url": "/vg_grover_twitter",
      "avatarUrl": "https://avatars-02.gitter.im/g/u/vg_grover_twitter",
      "avatarUrlSmall": "https://pbs.twimg.com/profile_images/599380952708616192/0Q7DHLCb_bigger.jpg",
      "avatarUrlMedium": "https://pbs.twimg.com/profile_images/599380952708616192/0Q7DHLCb.jpg"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "58178c35482c168b22d75807",
    "text": "@vg_grover_twitter for (i) test RPC solves this problem. https://github.com/ethereumjs/testrpc (ii) you can try https://github.com/ethereum/remix and https://ethereum-homestead.readthedocs.io/en/latest/contracts-and-transactions/mix.html , but extensive usage of Event functions and console logging should also do the trick - I know, not exactly what were all used to from other programming languages, but that's where we're at right now :D",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"vg_grover_twitter\" class=\"mention\">@vg_grover_twitter</span> for (i) test RPC solves this problem. <a href=\"https://github.com/ethereumjs/testrpc\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/ethereumjs/testrpc</a> (ii) you can try <a href=\"https://github.com/ethereum/remix\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/ethereum/remix</a> and <a href=\"https://ethereum-homestead.readthedocs.io/en/latest/contracts-and-transactions/mix.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://ethereum-homestead.readthedocs.io/en/latest/contracts-and-transactions/mix.html</a> , but extensive usage of Event functions and console logging should also do the trick - I know, not exactly what were all used to from other programming languages, but that&#39;s where we&#39;re at right now :D",
    "sent": "2016-10-31T18:23:49.202Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [
      {
        "url": "https://github.com/ethereumjs/testrpc"
      },
      {
        "url": "https://github.com/ethereum/remix"
      },
      {
        "url": "https://ethereum-homestead.readthedocs.io/en/latest/contracts-and-transactions/mix.html"
      }
    ],
    "mentions": [
      {
        "screenName": "vg_grover_twitter",
        "userId": "57f17836d73408ce4f2b23df",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "5818b73583a2008d22fa6800",
    "text": "@vg_grover_twitter have you tried dev’ing against testrpc? ",
    "html": "<span data-link-type=\"mention\" data-screen-name=\"vg_grover_twitter\" class=\"mention\">@vg_grover_twitter</span> have you tried dev’ing against testrpc? ",
    "sent": "2016-11-01T15:39:33.748Z",
    "fromUser": {
      "id": "5667247e16b6c7089cbdf0ae",
      "username": "andylockran",
      "displayName": "Andy Loughran",
      "url": "/andylockran",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/andylockran",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1412591?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1412591?v=4&s=128",
      "v": 30,
      "gv": "4"
    },
    "unread": false,
    "readBy": 16,
    "urls": [],
    "mentions": [
      {
        "screenName": "vg_grover_twitter",
        "userId": "57f17836d73408ce4f2b23df",
        "userIds": []
      }
    ],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "582ee1d2c3afa78a1e23cf17",
    "text": "If this is your first contract, don´t overthink, GO FOR IT! The best way to learn is to do it as you have it in mind. THEN we can discuss. Best practices: use testrpc or testnet, keep it dead simple.",
    "html": "If this is your first contract, don´t overthink, GO FOR IT! The best way to learn is to do it as you have it in mind. THEN we can discuss. Best practices: use testrpc or testnet, keep it dead simple.",
    "sent": "2016-11-18T11:11:14.273Z",
    "fromUser": {
      "id": "54db1c7415522ed4b3dbe150",
      "username": "chevdor",
      "displayName": "Chevdor",
      "url": "/chevdor",
      "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chevdor",
      "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/738724?v=4&s=60",
      "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/738724?v=4&s=128",
      "v": 15,
      "gv": "4"
    },
    "unread": false,
    "readBy": 15,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "583caae189d179bf4dd7d3d2",
    "text": "What would be the best way to split a certain amount of ether (say, 15000 ) among 50.000 accounts? 50.000 transactions would cost too much gas, i think,. any ideas ?",
    "html": "What would be the best way to split a certain amount of ether (say, 15000 ) among 50.000 accounts? 50.000 transactions would cost too much gas, i think,. any ideas ?",
    "sent": "2016-11-28T22:08:33.648Z",
    "fromUser": {
      "id": "57efcb4ed73408ce4f2af4cc",
      "username": "nikita-fuchs",
      "displayName": "Nikita Fuchs",
      "url": "/nikita-fuchs",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nikita-fuchs",
      "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=60",
      "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11761828?v=4&s=128",
      "v": 28,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  },
  {
    "id": "583ce0631dec193f1401123a",
    "text": "I have created a contract to perform the following tasks,\n1) add task  (user A)\n2) respond to task (user B - or anybody)\n3) verify task as completed (user A)\n4) send reward (user A to user B - or anybody)\n\nIn this contract, I have a task object:-\n\nstruct Task {  \n  string name;\n  string description;\n  uint createdDate;\n  bool taskStatus;\n  address completedBy;\n  uint updatedDate;\n  bool completedVerified;\n  uint256 reward;\n  bool sentReward;\n}\nAs \"name\" and \"description\" would cost too much gas, what is the best way to store them externally and use them wherever necessary? \n(find the complete contract here: https://www.dropbox.com/s/na8n70877gk1jzj/task_manager_v1.sol?dl=0)",
    "html": "<p>I have created a contract to perform the following tasks,<br>1) add task  (user A)<br>2) respond to task (user B - or anybody)<br>3) verify task as completed (user A)<br>4) send reward (user A to user B - or anybody)</p><p>In this contract, I have a task object:-</p><p>struct Task {<br>  string name;<br>  string description;<br>  uint createdDate;<br>  bool taskStatus;<br>  address completedBy;<br>  uint updatedDate;<br>  bool completedVerified;<br>  uint256 reward;<br>  bool sentReward;<br>}<br>As &quot;name&quot; and &quot;description&quot; would cost too much gas, what is the best way to store them externally and use them wherever necessary?<br>(find the complete contract here: <a href=\"https://www.dropbox.com/s/na8n70877gk1jzj/task_manager_v1.sol?dl=0\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://www.dropbox.com/s/na8n70877gk1jzj/task_manager_v1.sol?dl=0</a>)</p>",
    "sent": "2016-11-29T01:56:51.742Z",
    "fromUser": {
      "id": "582de661d73408ce4f369ff1",
      "username": "anandsemtech",
      "displayName": "anandsemtech",
      "url": "/anandsemtech",
      "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/anandsemtech",
      "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18546412?v=4&s=60",
      "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18546412?v=4&s=128",
      "v": 2,
      "gv": "4"
    },
    "unread": false,
    "readBy": 13,
    "urls": [
      {
        "url": "https://www.dropbox.com/s/na8n70877gk1jzj/task_manager_v1.sol?dl=0"
      }
    ],
    "mentions": [],
    "issues": [],
    "meta": [],
    "v": 1
  }
]
